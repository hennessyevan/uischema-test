"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeUrlFromRef = exports.isRelUrl = exports.getFragmentFromUrl = exports.getCleanRefUrl = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var isRelUrl = function isRelUrl(schemaRef) {
  return schemaRef.indexOf('https://') !== 0 && schemaRef.indexOf('http://') !== 0 && schemaRef.indexOf('ftp://') !== 0 && schemaRef.indexOf('ftps://') !== 0 && schemaRef.indexOf('#') !== 0;
}; // todo: also remove GET params?


exports.isRelUrl = isRelUrl;

var removeFragmentFromRevUrl = function removeFragmentFromRevUrl(url) {
  return url.slice(url.indexOf('#/') !== -1 ? url.indexOf('#/') + 2 : url.indexOf('#') !== -1 ? url.indexOf('#') + 1 : 0);
};

var getFragmentFromUrl = function getFragmentFromUrl(url) {
  var revUrl = (0, _toConsumableArray2["default"])(url).reverse().join('');
  var revUrlFragment = revUrl.slice(0, revUrl.indexOf('#/') !== -1 ? revUrl.indexOf('#/') : revUrl.indexOf('#') !== -1 ? revUrl.indexOf('#') : 0);
  return (0, _toConsumableArray2["default"])(revUrlFragment).reverse().join('');
};

exports.getFragmentFromUrl = getFragmentFromUrl;

var getCleanRefUrl = function getCleanRefUrl(schemaRef) {
  if (typeof schemaRef === 'string') {
    var revId = (0, _toConsumableArray2["default"])(schemaRef).reverse().join('');
    var revIdNoFragment = removeFragmentFromRevUrl(revId);
    schemaRef = (0, _toConsumableArray2["default"])(revIdNoFragment).reverse().join('');
  }

  return schemaRef;
};

exports.getCleanRefUrl = getCleanRefUrl;

var makeUrlFromRef = function makeUrlFromRef(schemaRef, id) {
  var schemaUrl = schemaRef;

  if (id) {
    var revId = (0, _toConsumableArray2["default"])(id).reverse().join('');
    var revIdNoFragment = removeFragmentFromRevUrl(revId);
    var uriBase = (0, _toConsumableArray2["default"])(revIdNoFragment.slice(revIdNoFragment.indexOf('/'))).reverse().join('');
    schemaUrl = uriBase + schemaRef;
  } else if (process.env.NODE_ENV === 'development') {
    console.warn('relative uri ref without root id', schemaRef);
  }

  return schemaUrl;
};

exports.makeUrlFromRef = makeUrlFromRef;