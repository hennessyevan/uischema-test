"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InjectSplitSchemaPlugin = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _PluginStack = require("@ui-schema/ui-schema/PluginStack");

var _SchemaRootProvider = require("@ui-schema/ui-schema/SchemaRootProvider");

var _escapePointer = require("@ui-schema/ui-schema/JSONPointer/escapePointer");

var _immutable = require("immutable");

var InjectSplitSchemaPlugin = function InjectSplitSchemaPlugin(props) {
  var schema = props.schema,
      storeKeys = props.storeKeys,
      currentPluginIndex = props.currentPluginIndex;

  var _useSchemaRoot = (0, _SchemaRootProvider.useSchemaRoot)(),
      schemaStyle = _useSchemaRoot.schemaStyle;

  var next = currentPluginIndex + 1;
  var Plugin = (0, _PluginStack.getNextPlugin)(next, props.widgets);
  var pointer = storeKeys.size > 0 ? '/' + storeKeys.map(function (k) {
    return (0, _escapePointer.escapePointer)(String(k));
  }).join('/') : '';
  var schemaStyleLevel = schemaStyle === null || schemaStyle === void 0 ? void 0 : schemaStyle.get(pointer);
  var schemaStyleClean;

  if (schemaStyleLevel && _immutable.Map.isMap(schemaStyleLevel)) {
    schemaStyleClean = schemaStyleLevel["delete"]('properties')["delete"]('items')["delete"]('if')["delete"]('else')["delete"]('then')["delete"]('not')["delete"]('allOf')["delete"]('anyOf')["delete"]('required');
  } // @ts-ignore


  return /*#__PURE__*/_react["default"].createElement(Plugin, (0, _extends2["default"])({}, props, {
    currentPluginIndex: next,
    schema: schemaStyleClean ? schema.mergeDeep(schemaStyleClean) : schema
  }));
};

exports.InjectSplitSchemaPlugin = InjectSplitSchemaPlugin;