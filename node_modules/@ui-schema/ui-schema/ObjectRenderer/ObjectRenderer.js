"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ObjectRenderer = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _memo = require("@ui-schema/ui-schema/Utils/memo");

var _PluginStack = require("@ui-schema/ui-schema/PluginStack");

var _excluded = ["level", "schema", "storeKeys", "schemaKeys", "errors"];

var ObjectRendererBase = function ObjectRendererBase(_ref) {
  var level = _ref.level,
      schema = _ref.schema,
      storeKeys = _ref.storeKeys,
      schemaKeys = _ref.schemaKeys,
      errors = _ref.errors,
      props = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var isVirtual = props.isVirtual,
      widgets = props.widgets;
  var properties = schema.get('properties');

  if (!isVirtual && !widgets.GroupRenderer) {
    if (process.env.NODE_ENV === 'development') {
      console.error('Widget GroupRenderer not existing');
    }

    return null;
  }

  var GroupRenderer = widgets.GroupRenderer;
  var propertyTree = (properties === null || properties === void 0 ? void 0 : properties.map(function (childSchema, childKey) {
    return /*#__PURE__*/_react["default"].createElement(_PluginStack.PluginStack, (0, _extends2["default"])({
      key: childKey
    }, props, {
      schema: childSchema,
      parentSchema: schema,
      storeKeys: storeKeys.push(childKey),
      schemaKeys: schemaKeys === null || schemaKeys === void 0 ? void 0 : schemaKeys.push('properties').push(childKey),
      level: level + 1
    }));
  }).valueSeq()) || null; // no-properties could come from
  //   e.g. combining/conditional schemas which are currently not applied (e.g. a condition fails)

  return isVirtual ? propertyTree : properties ? /*#__PURE__*/_react["default"].createElement(GroupRenderer, {
    storeKeys: storeKeys,
    schemaKeys: schemaKeys,
    level: level,
    noGrid: props.noGrid,
    schema: schema
  }, propertyTree) : null;
};

var ObjectRenderer = (0, _memo.memo)(ObjectRendererBase);
exports.ObjectRenderer = ObjectRenderer;