import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { getDisplayName } from '@ui-schema/ui-schema/Utils/memo';
import { useUIStore } from '@ui-schema/ui-schema/UIStore';
import { useUIStoreActions } from '@ui-schema/ui-schema/UIStoreActions';
export function extractValue(Component) {
  const ExtractValue = p => {
    const {
      store,
      showValidity
    } = useUIStore();
    const {
      onChange
    } = useUIStoreActions();
    const values = store === null || store === void 0 ? void 0 : store.extractValues(p.storeKeys); // @ts-ignore

    return /*#__PURE__*/React.createElement(Component, _extends({}, p, {
      // `showValidity` is overridable by render flow, e.g. nested Stepper
      showValidity: p.showValidity || showValidity,
      onChange: onChange
    }, values || {}));
  };

  ExtractValue.displayName = "ExtractValue(".concat(getDisplayName(Component), ")");
  return ExtractValue;
}