"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VirtualWidgetRenderer = exports.VirtualArrayRenderer = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _immutable = require("immutable");

var _PluginStack = require("@ui-schema/ui-schema/PluginStack");

var _ObjectRenderer = require("@ui-schema/ui-schema/ObjectRenderer");

var _schemaTypeToDistinct = require("@ui-schema/ui-schema/Utils/schemaTypeToDistinct");

var VirtualArrayRenderer = function VirtualArrayRenderer(_ref) {
  var storeKeys = _ref.storeKeys,
      value = _ref.value,
      schema = _ref.schema,
      virtualWidgets = _ref.virtualWidgets,
      widgets = _ref.widgets;
  return value ? value.map(function (val, i) {
    return /*#__PURE__*/_react["default"].createElement(_PluginStack.PluginStack, {
      key: i,
      schema: _immutable.List.isList(schema.get('items')) ? schema.get('items').get(i) : schema.get('items'),
      parentSchema: schema,
      storeKeys: storeKeys.push(i),
      level: 0,
      virtualWidgets: virtualWidgets,
      widgets: widgets,
      isVirtual: true
    });
  }).valueSeq() : null;
};

exports.VirtualArrayRenderer = VirtualArrayRenderer;

var VirtualWidgetRenderer = function VirtualWidgetRenderer(props) {
  var schema = props.schema,
      value = props.value,
      _props$virtualWidgets = props.virtualWidgets,
      virtualWidgets = _props$virtualWidgets === void 0 ? {
    'default': null,
    // `ObjectRenderer` is somehow `undefined` inside of `VirtualWidgetRenderer` when this object was defined outside of the component
    'object': _ObjectRenderer.ObjectRenderer,
    'array': VirtualArrayRenderer
  } : _props$virtualWidgets;
  var type = (0, _schemaTypeToDistinct.schemaTypeToDistinct)(schema.get('type'));
  var Widget = virtualWidgets['default'];

  if (type) {
    if (type === 'object') {
      Widget = virtualWidgets['object'];
    } else if (type === 'array') {
      Widget = virtualWidgets['array'];
    }
  }

  return Widget ? /*#__PURE__*/_react["default"].createElement(Widget, (0, _extends2["default"])({}, props, {
    value: value
  })) : null;
};

exports.VirtualWidgetRenderer = VirtualWidgetRenderer;