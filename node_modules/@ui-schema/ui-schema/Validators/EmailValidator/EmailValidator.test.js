"use strict";

var _EmailValidator = require("@ui-schema/ui-schema/Validators/EmailValidator/EmailValidator");

var _immutable = require("immutable");

describe('emailValidator', function () {
  test.each([['demo@example.org', true], ['demo@example.org.de.tld', true], ['demo.some@example.org.de.tld', true], ['demo.some292@example.org.de.tld', true], ['92demo.some_234-23@example.org', true], [// actually a correct email, but not "valid" for typical web usages
  '92demo.some_234-23@example.o', false], [// actually a correct email, but not "valid" for typical web usages
  'demo@example', false], ['demo.de@example', false], ['demo@example,org', false], ['demo,dee@example.org', false], ['demo@,dee@example.org', false], ['demo@dee@example.org', false], ['demo..dee@example.org', false], [// according to RFC correct, but not supported by most/normal email providers
  'demo(dee@example.org', false], [// according to RFC correct, but not supported by most/normal email providers
  'demo)dee@example.org', false]])('emailValidator.handle(%s): %j', function (email, isValid) {
    // @ts-ignore
    var r = _EmailValidator.emailValidator.handle({
      value: email,
      valid: true
    });

    expect(r.valid).toBe(isValid);
  });
  test.each([[(0, _immutable.OrderedMap)({
    type: 'string',
    format: 'email'
  }), '', true], [(0, _immutable.OrderedMap)({
    type: 'string',
    format: 'email'
  }), 'some-text', true], [(0, _immutable.OrderedMap)({
    type: 'string',
    format: 'email'
  }), undefined, false], [(0, _immutable.OrderedMap)({
    type: 'string',
    format: 'email'
  }), 0, false], [(0, _immutable.OrderedMap)({
    type: 'integer',
    format: 'email'
  }), 'some-text', false], [(0, _immutable.OrderedMap)({
    type: 'string',
    format: 'emails'
  }), 'some-text', false], [(0, _immutable.OrderedMap)({
    type: ['string'],
    format: 'email'
  }), 'some-text', true], [(0, _immutable.OrderedMap)({
    type: ['string', 'integer'],
    format: 'email'
  }), 'some-text', true], [(0, _immutable.OrderedMap)({
    type: ['string', 'integer'],
    format: 'email'
  }), 10, false]])('emailValidator.should(%s): %j', function (schema, email, expected) {
    // @ts-ignore
    expect(_EmailValidator.emailValidator.should({
      schema: schema,
      value: email
    })).toBe(expected);
  });
});