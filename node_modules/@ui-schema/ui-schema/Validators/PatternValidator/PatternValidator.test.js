"use strict";

var _immutable = require("immutable");

var _globals = require("@jest/globals");

var _PatternValidator = require("@ui-schema/ui-schema/Validators/PatternValidator");

var _ValidatorErrors = require("@ui-schema/ui-schema/ValidatorErrors/ValidatorErrors");

(0, _globals.describe)('validatePattern', function () {
  _globals.test.each([['string', 'blabla', '^[bla]*$', true], ['string', 'wawawa', '^[bla]*$', false], ['string', 'wawawa', undefined, true], [['string'], 'wawawa', undefined, true], [['string'], 'wawawa', '^[bla]*$', false], [['integer', 'string'], 'wawawa', '^[bla]*$', false], [['integer', 'string'], 122, '^[bla]*$', true], ['array', [], '^[bla]*$', true], ['array', [], undefined, true]])('validatePattern(%j, %j, %j): %j', function (type, value, pattern, expected) {
    (0, _globals.expect)((0, _PatternValidator.validatePattern)(type, value, pattern)).toBe(expected);
  });
});
(0, _globals.test)('patternValidator', function () {
  var trueResult = _PatternValidator.patternValidator.handle({
    schema: (0, _immutable.OrderedMap)({
      type: 'string',
      pattern: '^[bla]*$'
    }),
    value: 'blabla',
    errors: (0, _ValidatorErrors.createValidatorErrors)(),
    valid: true
  });

  (0, _globals.expect)(trueResult.valid).toBe(true);
  (0, _globals.expect)(trueResult.errors.hasError(_PatternValidator.ERROR_PATTERN)).toBe(false);

  var falseResult = _PatternValidator.patternValidator.handle({
    schema: (0, _immutable.OrderedMap)({
      type: 'string',
      pattern: '^[bla]*$'
    }),
    value: 'wawawa',
    errors: (0, _ValidatorErrors.createValidatorErrors)(),
    valid: true
  });

  (0, _globals.expect)(falseResult.valid).toBe(false);
  (0, _globals.expect)(falseResult.errors.hasError(_PatternValidator.ERROR_PATTERN)).toBe(true);
});