"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSchemaRoot = exports.isRootSchema = exports.SchemaRootProviderBase = exports.SchemaRootProvider = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _getSchema = require("@ui-schema/ui-schema/Utils/getSchema");

var _memo = require("@ui-schema/ui-schema/Utils/memo");

var _excluded = ["id", "schema", "children"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var isRootSchema = function isRootSchema(schema) {
  var id = (0, _getSchema.getSchemaId)(schema); // todo: is this "no fragment beginning" really the correct root for everything? e.g. $defs?

  return id && id.indexOf('#') !== 0;
};

exports.isRootSchema = isRootSchema;

var SchemaRootContext = /*#__PURE__*/_react["default"].createContext({
  id: undefined,
  schema: undefined
});

var SchemaRootProviderBase = function SchemaRootProviderBase() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var id = _ref.id,
      schema = _ref.schema,
      children = _ref.children,
      further = (0, _objectWithoutProperties2["default"])(_ref, _excluded);

  var context = _react["default"].useMemo(function () {
    return _objectSpread({
      id: id,
      schema: schema
    }, further);
  }, [id, schema].concat((0, _toConsumableArray2["default"])(Object.values(further))));

  return /*#__PURE__*/_react["default"].createElement(SchemaRootContext.Provider, {
    value: context
  }, children);
};

exports.SchemaRootProviderBase = SchemaRootProviderBase;
var SchemaRootProvider = (0, _memo.memo)(SchemaRootProviderBase);
exports.SchemaRootProvider = SchemaRootProvider;

var useSchemaRoot = function useSchemaRoot() {
  return _react["default"].useContext(SchemaRootContext);
};

exports.useSchemaRoot = useSchemaRoot;