"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccordionsRendererBase = exports.AccordionsRenderer = exports.AccordionStack = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _reactUid = require("react-uid");

var _uiSchema = require("@ui-schema/ui-schema");

var _ValidityReporter = require("@ui-schema/ui-schema/ValidityReporter");

var _LocaleHelperText = require("@ui-schema/ds-material/Component/LocaleHelperText");

var _Accordion = _interopRequireDefault(require("@material-ui/core/Accordion"));

var _Box = _interopRequireDefault(require("@material-ui/core/Box"));

var _AccordionSummary = _interopRequireDefault(require("@material-ui/core/AccordionSummary"));

var _AccordionDetails = _interopRequireDefault(require("@material-ui/core/AccordionDetails"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _ExpandMore = _interopRequireDefault(require("@material-ui/icons/ExpandMore"));

var _excluded = ["validity", "SummaryTitle"],
    _excluded2 = ["schema", "storeKeys", "level", "errors", "showValidity"];

var AccordionStackBase = function AccordionStackBase(_ref) {
  var validity = _ref.validity,
      SummaryTitle = _ref.SummaryTitle,
      props = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var uid = (0, _reactUid.useUID)();
  var storeKeys = props.storeKeys,
      schema = props.schema,
      parentSchema = props.parentSchema,
      ownKey = props.ownKey,
      showValidity = props.showValidity,
      level = props.level,
      isOpen = props.isOpen,
      setOpen = props.setOpen,
      valid = props.valid,
      widgets = props.widgets;

  var _React$useState = _react["default"].useState(),
      _React$useState2 = (0, _slicedToArray2["default"])(_React$useState, 2),
      errors = _React$useState2[0],
      setErrors = _React$useState2[1];

  var elevation = parentSchema === null || parentSchema === void 0 ? void 0 : parentSchema.getIn(['view', 'ev']);
  var variant = parentSchema === null || parentSchema === void 0 ? void 0 : parentSchema.getIn(['view', 'variant']);
  var titleVariant = parentSchema === null || parentSchema === void 0 ? void 0 : parentSchema.getIn(['view', 'titleVariant']);
  var childInvalid = (0, _ValidityReporter.isInvalid)(validity);
  var InfoRenderer = widgets === null || widgets === void 0 ? void 0 : widgets.InfoRenderer;
  return /*#__PURE__*/_react["default"].createElement(_Accordion["default"], {
    style: {
      width: '100%'
    },
    expanded: isOpen,
    onChange: function onChange() {
      return setOpen(function (k) {
        return k === ownKey ? '' : ownKey;
      });
    },
    variant: variant,
    elevation: elevation
  }, /*#__PURE__*/_react["default"].createElement(_AccordionSummary["default"], {
    expandIcon: /*#__PURE__*/_react["default"].createElement(_ExpandMore["default"], null),
    id: 'uis-' + uid
  }, SummaryTitle ? /*#__PURE__*/_react["default"].createElement(SummaryTitle, {
    valid: Boolean(valid),
    childInvalid: childInvalid > 0,
    storeKeys: storeKeys,
    parentSchema: parentSchema,
    schema: schema,
    isOpen: isOpen
  }) : /*#__PURE__*/_react["default"].createElement(_Typography["default"], {
    color: !showValidity || !childInvalid && valid ? undefined : 'error',
    variant: titleVariant
  }, /*#__PURE__*/_react["default"].createElement(_uiSchema.TransTitle, {
    schema: schema,
    storeKeys: storeKeys,
    ownKey: ownKey
  }))), /*#__PURE__*/_react["default"].createElement(_AccordionDetails["default"], {
    style: {
      flexDirection: 'column'
    }
  }, InfoRenderer && schema !== null && schema !== void 0 && schema.get('info') ? /*#__PURE__*/_react["default"].createElement(_Box["default"], null, /*#__PURE__*/_react["default"].createElement(InfoRenderer, {
    schema: schema,
    variant: 'preview',
    openAs: 'embed',
    storeKeys: storeKeys,
    valid: valid,
    errors: errors
  })) : undefined, /*#__PURE__*/_react["default"].createElement(_uiSchema.PluginStack, (0, _extends2["default"])({}, props, {
    schema: schema,
    parentSchema: parentSchema,
    storeKeys: storeKeys,
    level: level,
    onErrors: setErrors,
    isVirtual: props.isVirtual || (parentSchema === null || parentSchema === void 0 ? void 0 : parentSchema.get('onClosedHidden')) && !isOpen
  })), /*#__PURE__*/_react["default"].createElement(_LocaleHelperText.ValidityHelperText, {
    errors: errors,
    showValidity: showValidity,
    schema: schema
  })));
}; // @ts-ignore


var AccordionStack = (0, _uiSchema.extractValidity)((0, _uiSchema.memo)(AccordionStackBase));
exports.AccordionStack = AccordionStack;

var AccordionsRendererBase = function AccordionsRendererBase(_ref2) {
  var schema = _ref2.schema,
      storeKeys = _ref2.storeKeys,
      level = _ref2.level,
      errors = _ref2.errors,
      showValidity = _ref2.showValidity,
      props = (0, _objectWithoutProperties2["default"])(_ref2, _excluded2);

  var _React$useState3 = _react["default"].useState(schema.get('defaultExpanded') || ''),
      _React$useState4 = (0, _slicedToArray2["default"])(_React$useState3, 2),
      open = _React$useState4[0],
      setOpen = _React$useState4[1];

  var properties = schema.get('properties');
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, properties === null || properties === void 0 ? void 0 : properties.map(function (childSchema, childKey) {
    return /*#__PURE__*/_react["default"].createElement(AccordionStack, (0, _extends2["default"])({
      key: childKey
    }, props, {
      schema: childSchema,
      ownKey: childKey,
      parentSchema: schema,
      storeKeys: storeKeys.push(childKey),
      level: level + 1,
      isOpen: open === childKey,
      setOpen: setOpen
    }));
  }).valueSeq().toArray(), /*#__PURE__*/_react["default"].createElement(_LocaleHelperText.ValidityHelperText, {
    errors: errors,
    showValidity: showValidity,
    schema: schema
  }));
};

exports.AccordionsRendererBase = AccordionsRendererBase;
var AccordionsRenderer = (0, _uiSchema.memo)(AccordionsRendererBase);
exports.AccordionsRenderer = AccordionsRenderer;