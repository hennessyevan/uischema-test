"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SelectChipsBase = exports.SelectChips = void 0;

var _react = _interopRequireDefault(require("react"));

var _uiSchema = require("@ui-schema/ui-schema");

var _TransTitle = require("@ui-schema/ui-schema/Translate/TransTitle");

var _LocaleHelperText = require("@ui-schema/ds-material/Component/LocaleHelperText/LocaleHelperText");

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _Chip = _interopRequireDefault(require("@material-ui/core/Chip"));

var _Box = _interopRequireDefault(require("@material-ui/core/Box"));

var _immutable = require("immutable");

var SelectChipsBase = function SelectChipsBase(_ref) {
  var storeKeys = _ref.storeKeys,
      ownKey = _ref.ownKey,
      schema = _ref.schema,
      value = _ref.value,
      onChange = _ref.onChange,
      showValidity = _ref.showValidity,
      errors = _ref.errors,
      required = _ref.required,
      valid = _ref.valid;
  if (!schema) return null;
  var oneOfVal = schema.getIn(['items', 'oneOf']);
  if (!oneOfVal) return null;
  var currentValue = typeof value !== 'undefined' ? value : (0, _immutable.List)(schema.get('default')) || (0, _immutable.List)();
  return /*#__PURE__*/_react["default"].createElement(_Box["default"], null, /*#__PURE__*/_react["default"].createElement(_Typography["default"], {
    color: showValidity && !valid ? 'error' : undefined
  }, /*#__PURE__*/_react["default"].createElement(_TransTitle.TransTitle, {
    schema: schema,
    storeKeys: storeKeys,
    ownKey: ownKey
  })), /*#__PURE__*/_react["default"].createElement(_Box["default"], {
    mt: 1,
    style: {
      display: 'flex',
      flexWrap: 'wrap'
    }
  }, oneOfVal ? oneOfVal.map(function (oneOfSchema) {
    return /*#__PURE__*/_react["default"].createElement(_Chip["default"], {
      key: oneOfSchema.get('const'),
      label: /*#__PURE__*/_react["default"].createElement(_uiSchema.Trans, {
        schema: oneOfSchema.get('t'),
        text: oneOfSchema.get('title') || oneOfSchema.get('const'),
        context: (0, _immutable.Map)({
          'relative': (0, _immutable.List)(['title'])
        }),
        fallback: oneOfSchema.get('title') || (0, _uiSchema.beautifyKey)(oneOfSchema.get('const'), oneOfSchema.get('tt'))
      }),
      style: {
        marginRight: 4,
        marginBottom: 4
      },
      size: schema.getIn(['view', 'size']) === 'medium' ? 'medium' : 'small',
      variant: (currentValue === null || currentValue === void 0 ? void 0 : currentValue.indexOf(oneOfSchema.get('const'))) === -1 ? 'outlined' : 'default',
      disabled: schema.get('readOnly') || oneOfSchema.get('readOnly'),
      color: 'primary',
      onClick: function onClick() {
        !schema.get('readOnly') && onChange({
          storeKeys: storeKeys,
          scopes: ['value'],
          type: 'update',
          schema: schema,
          required: required,
          updater: function updater(_ref2) {
            var _ref2$value = _ref2.value,
                value = _ref2$value === void 0 ? (0, _immutable.List)() : _ref2$value;
            return {
              value: value.indexOf(oneOfSchema.get('const')) === -1 ? (0, _uiSchema.sortScalarList)(value.push(oneOfSchema.get('const'))) : (0, _uiSchema.sortScalarList)(value.splice(value.indexOf(oneOfSchema.get('const')), 1))
            };
          }
        });
      }
    });
  }).valueSeq() : null), /*#__PURE__*/_react["default"].createElement(_LocaleHelperText.ValidityHelperText, {
    errors: errors,
    showValidity: showValidity,
    schema: schema
  }));
};

exports.SelectChipsBase = SelectChipsBase;
var SelectChips = (0, _uiSchema.extractValue)((0, _uiSchema.memo)(SelectChipsBase));
exports.SelectChips = SelectChips;