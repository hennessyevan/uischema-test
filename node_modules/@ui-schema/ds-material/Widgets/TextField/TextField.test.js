"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _globals = require("@jest/globals");

var _react2 = require("@testing-library/react");

var _matchers = require("@testing-library/jest-dom/matchers");

var _createMap = require("@ui-schema/ui-schema/Utils/createMap/createMap");

var _TextField = require("./TextField");

var _immutable = require("immutable");

var _uiSchema = require("@ui-schema/ui-schema");

var _MockSchemaProvider = require("../../../tests/MockSchemaProvider.mock");

/**
 * @jest-environment jsdom
 */
// @ts-ignore
_globals.expect.extend({
  toBeInTheDocument: _matchers.toBeInTheDocument,
  toHaveClass: _matchers.toHaveClass
});

(0, _globals.describe)('StringRenderer', function () {
  (0, _globals.it)('renders html', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var _render, container;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _render = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_MockSchemaProvider.MockSchemaMetaProvider, null, /*#__PURE__*/_react["default"].createElement(_TextField.StringRenderer, {
              schema: (0, _createMap.createOrderedMap)({}),
              storeKeys: (0, _immutable.List)(),
              valid: false,
              showValidity: false,
              errors: (0, _uiSchema.createValidatorErrors)()
            }))), container = _render.container; // expect(container.firstChild).toMatchSnapshot()

            (0, _globals.expect)(container.querySelector('.MuiTextField-root') !== null).toBeTruthy();
            (0, _globals.expect)(container.querySelector('.MuiInputLabel-root') !== null).toBeTruthy();
            (0, _globals.expect)(container.querySelector('.MuiInputBase-input') !== null).toBeTruthy();
            (0, _globals.expect)(container.querySelectorAll('.Mui-error').length).toBe(0);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
  (0, _globals.it)('renders html error', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
    var _render2, container;

    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _render2 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_MockSchemaProvider.MockSchemaMetaProvider, null, /*#__PURE__*/_react["default"].createElement(_TextField.StringRenderer, {
              schema: (0, _createMap.createOrderedMap)({}),
              storeKeys: (0, _immutable.List)(),
              valid: false,
              showValidity: true,
              errors: (0, _uiSchema.createValidatorErrors)()
            }))), container = _render2.container;
            (0, _globals.expect)(container.querySelector('.MuiTextField-root') !== null).toBeTruthy();
            (0, _globals.expect)(container.querySelector('.MuiInputLabel-root') !== null).toBeTruthy();
            (0, _globals.expect)(container.querySelector('.MuiInputBase-input') !== null).toBeTruthy();
            (0, _globals.expect)(container.querySelectorAll('.Mui-error').length > 0).toBeTruthy();

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })));
});