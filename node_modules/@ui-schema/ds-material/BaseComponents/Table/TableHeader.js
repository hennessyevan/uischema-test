"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableHeader = void 0;

var _react = _interopRequireDefault(require("react"));

var _uiSchema = require("@ui-schema/ui-schema");

var _TableCell = _interopRequireDefault(require("@material-ui/core/TableCell"));

var _TableHead = _interopRequireDefault(require("@material-ui/core/TableHead"));

var _TableRow = _interopRequireDefault(require("@material-ui/core/TableRow"));

var TableHeader = function TableHeader(_ref) {
  var _itemsSchema$getIn;

  var schema = _ref.schema,
      validItemSchema = _ref.validItemSchema,
      uid = _ref.uid,
      itemsSchema = _ref.itemsSchema,
      storeKeys = _ref.storeKeys,
      readOnly = _ref.readOnly;
  var cellSchema = itemsSchema.get('items') || itemsSchema.get('properties');

  if ((0, _uiSchema.schemaTypeToDistinct)(itemsSchema.get('type')) === 'object' && (_itemsSchema$getIn = itemsSchema.getIn(['rowSortOrder'])) !== null && _itemsSchema$getIn !== void 0 && _itemsSchema$getIn.size) {
    cellSchema = itemsSchema.getIn(['rowSortOrder']) // @ts-ignore
    .map(function (key) {
      return cellSchema.get(key);
    });
  }

  return /*#__PURE__*/_react["default"].createElement(_TableHead["default"], null, validItemSchema ? /*#__PURE__*/_react["default"].createElement(_TableRow["default"], null, cellSchema.map(function (item, j) {
    var _item$get;

    return !item.get('hidden') ? /*#__PURE__*/_react["default"].createElement(_TableCell["default"], {
      key: j
    }, /*#__PURE__*/_react["default"].createElement("div", {
      id: 'uis-' + uid + '-tbl-' + j
    }, /*#__PURE__*/_react["default"].createElement(_uiSchema.TransTitle, {
      schema: item,
      storeKeys: storeKeys.push(j),
      ownKey: j
    }), !schema.getIn(['view', 'hideItemsTitle']) && (0, _uiSchema.schemaTypeToDistinct)(item.get('type')) === 'object' ? /*#__PURE__*/_react["default"].createElement("div", null, ' (', (_item$get = item.get('properties')) === null || _item$get === void 0 ? void 0 : _item$get.keySeq().map(function (key, i) {
      var _item$get2;

      return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, {
        key: key
      }, /*#__PURE__*/_react["default"].createElement(_uiSchema.TransTitle, {
        schema: item.getIn(['properties', key]),
        storeKeys: storeKeys.push(j).push(key),
        ownKey: key
      }), i < ((_item$get2 = item.get('properties')) === null || _item$get2 === void 0 ? void 0 : _item$get2.keySeq().size) - 1 ? ', ' : '');
    }).valueSeq(), ')') : '')) : null;
  }).valueSeq(), !readOnly ? /*#__PURE__*/_react["default"].createElement(_TableCell["default"], null) : null) : null);
};

exports.TableHeader = TableHeader;