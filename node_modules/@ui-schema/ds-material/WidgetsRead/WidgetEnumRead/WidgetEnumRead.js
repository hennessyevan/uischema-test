"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WidgetEnumRead = void 0;

var _immutable = require("immutable");

var _uiSchema = require("@ui-schema/ui-schema");

var _LocaleHelperText = require("@ui-schema/ds-material/Component/LocaleHelperText");

var _react = _interopRequireDefault(require("react"));

var _Box = _interopRequireDefault(require("@material-ui/core/Box"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _TitleBoxRead = require("@ui-schema/ds-material/Component/TitleBoxRead");

var WidgetEnumRead = function WidgetEnumRead(_ref) {
  var storeKeys = _ref.storeKeys,
      schema = _ref.schema,
      value = _ref.value,
      showValidity = _ref.showValidity,
      valid = _ref.valid,
      errors = _ref.errors,
      style = _ref.style,
      onClick = _ref.onClick,
      t = _ref.t,
      widgets = _ref.widgets;
  var hideTitle = schema.getIn(['view', 'hideTitle']);
  var InfoRenderer = widgets === null || widgets === void 0 ? void 0 : widgets.InfoRenderer;
  var hasInfo = Boolean(InfoRenderer && (schema === null || schema === void 0 ? void 0 : schema.get('info')));

  var _useUIMeta = (0, _uiSchema.useUIMeta)(),
      readDense = _useUIMeta.readDense;

  if (!schema) return null;
  var enum_val = schema.get('enum');
  if (!enum_val) return null;
  var Translated = typeof value === 'string' ? t(value, (0, _immutable.Map)({
    relative: (0, _immutable.List)(['enum', value])
  }), schema.get('t')) : undefined;
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_Box["default"], {
    onClick: onClick,
    style: style
  }, /*#__PURE__*/_react["default"].createElement(_TitleBoxRead.TitleBoxRead, {
    hideTitle: hideTitle,
    hasInfo: hasInfo,
    InfoRenderer: InfoRenderer,
    valid: valid,
    errors: errors,
    storeKeys: storeKeys,
    schema: schema
  }), /*#__PURE__*/_react["default"].createElement(_Typography["default"], {
    variant: readDense ? 'body2' : 'body1'
  }, typeof Translated === 'string' || typeof Translated === 'function' || typeof Translated === 'number' ? typeof Translated === 'function' ?
  /*#__PURE__*/
  // @ts-ignore
  _react["default"].createElement(Translated, null) : Translated : typeof value !== 'undefined' ? (0, _uiSchema.beautifyKey)(value, schema.get('ttEnum')) + '' : /*#__PURE__*/_react["default"].createElement("span", {
    style: {
      opacity: 0.65
    }
  }, "-")), /*#__PURE__*/_react["default"].createElement(_LocaleHelperText.ValidityHelperText, {
    errors: errors,
    showValidity: showValidity,
    schema: schema
  })));
};

exports.WidgetEnumRead = WidgetEnumRead;