"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WidgetBooleanRead = void 0;

var _react = _interopRequireDefault(require("react"));

var _Box = _interopRequireDefault(require("@material-ui/core/Box"));

var _CheckCircle = _interopRequireDefault(require("@material-ui/icons/CheckCircle"));

var _CancelOutlined = _interopRequireDefault(require("@material-ui/icons/CancelOutlined"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _LocaleHelperText = require("@ui-schema/ds-material/Component/LocaleHelperText/LocaleHelperText");

var _uiSchema = require("@ui-schema/ui-schema");

var _TitleBoxRead = require("@ui-schema/ds-material/Component/TitleBoxRead");

var WidgetBooleanRead = function WidgetBooleanRead(_ref) {
  var storeKeys = _ref.storeKeys,
      schema = _ref.schema,
      value = _ref.value,
      showValidity = _ref.showValidity,
      valid = _ref.valid,
      errors = _ref.errors,
      style = _ref.style,
      widgets = _ref.widgets,
      IconYes = _ref.IconYes,
      IconNo = _ref.IconNo;
  var hideTitle = Boolean(schema.getIn(['view', 'hideTitle']));
  var InfoRenderer = widgets === null || widgets === void 0 ? void 0 : widgets.InfoRenderer;
  var hasInfo = Boolean(InfoRenderer && (schema === null || schema === void 0 ? void 0 : schema.get('info')));

  var _useUIMeta = (0, _uiSchema.useUIMeta)(),
      readDense = _useUIMeta.readDense;

  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_Box["default"], {
    style: style
  }, /*#__PURE__*/_react["default"].createElement(_TitleBoxRead.TitleBoxRead, {
    hideTitle: hideTitle,
    hasInfo: hasInfo,
    InfoRenderer: InfoRenderer,
    valid: valid,
    errors: errors,
    storeKeys: storeKeys,
    schema: schema
  }), /*#__PURE__*/_react["default"].createElement(_Typography["default"], {
    variant: readDense ? 'body2' : 'body1'
  }, value ? IconYes ? /*#__PURE__*/_react["default"].createElement(IconYes, {
    fontSize: 'small'
  }) : /*#__PURE__*/_react["default"].createElement(_CheckCircle["default"], {
    fontSize: 'small'
  }) : IconNo ? /*#__PURE__*/_react["default"].createElement(IconNo, {
    fontSize: 'small'
  }) : /*#__PURE__*/_react["default"].createElement(_CancelOutlined["default"], {
    fontSize: 'small'
  })), /*#__PURE__*/_react["default"].createElement(_LocaleHelperText.ValidityHelperText, {
    errors: errors,
    showValidity: showValidity,
    schema: schema
  })));
};

exports.WidgetBooleanRead = WidgetBooleanRead;