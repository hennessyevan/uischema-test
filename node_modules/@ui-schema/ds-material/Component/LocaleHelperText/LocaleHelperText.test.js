"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _globals = require("@jest/globals");

var _react2 = require("@testing-library/react");

var _matchers = require("@testing-library/jest-dom/matchers");

var _createMap = require("@ui-schema/ui-schema/Utils/createMap/createMap");

var _LocaleHelperText = require("./LocaleHelperText");

var _uiSchema = require("@ui-schema/ui-schema");

var _immutable = require("immutable");

var _MockSchemaProvider = require("../../../tests/MockSchemaProvider.mock");

/**
 * @jest-environment jsdom
 */
// @ts-ignore
_globals.expect.extend({
  toBeInTheDocument: _matchers.toBeInTheDocument,
  toHaveClass: _matchers.toHaveClass
});

(0, _globals.describe)('LocaleHelperText', function () {
  (0, _globals.it)('ValidityHelperText', function () {
    var _render = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_MockSchemaProvider.MockSchemaMetaProvider, null, /*#__PURE__*/_react["default"].createElement(_LocaleHelperText.ValidityHelperText, {
      schema: (0, _createMap.createOrderedMap)({
        type: 'string',
        widget: 'Text'
      }),
      errors: (0, _uiSchema.createValidatorErrors)().addError('demo-err', (0, _immutable.Map)({
        dummy: true
      })),
      showValidity: true
    }))),
        queryByText = _render.queryByText;

    (0, _globals.expect)(queryByText('error.demo-err') !== null).toBeTruthy();
  });
  (0, _globals.it)('ValidityHelperText no err', function () {
    var _render2 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_MockSchemaProvider.MockSchemaMetaProvider, null, /*#__PURE__*/_react["default"].createElement(_LocaleHelperText.ValidityHelperText, {
      schema: (0, _createMap.createOrderedMap)({
        type: 'string',
        widget: 'Text'
      }),
      errors: (0, _uiSchema.createValidatorErrors)().addError('demo-err', (0, _createMap.createMap)({
        dummy: true
      })),
      showValidity: false
    }))),
        queryByText = _render2.queryByText;

    (0, _globals.expect)(queryByText('browser-error') === null).toBeTruthy();
  });
  (0, _globals.it)('ValidityHelperText browser', function () {
    var _render3 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_MockSchemaProvider.MockSchemaMetaProvider, null, /*#__PURE__*/_react["default"].createElement(_LocaleHelperText.ValidityHelperText, {
      schema: (0, _createMap.createOrderedMap)({
        t: 'browser'
      }),
      browserError: /*#__PURE__*/_react["default"].createElement("span", null, "browser-error")
    }))),
        queryByText = _render3.queryByText; // expect(container.firstChild).toMatchSnapshot()


    (0, _globals.expect)(queryByText('browser-error') !== null).toBeTruthy();
  });
});