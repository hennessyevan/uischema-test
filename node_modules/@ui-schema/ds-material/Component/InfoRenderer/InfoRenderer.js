"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InfoRenderer = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _Button = _interopRequireDefault(require("@material-ui/core/Button"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));

var _Dialog = _interopRequireDefault(require("@material-ui/core/Dialog"));

var _DialogTitle = _interopRequireDefault(require("@material-ui/core/DialogTitle"));

var _DialogContent = _interopRequireDefault(require("@material-ui/core/DialogContent"));

var _DialogActions = _interopRequireDefault(require("@material-ui/core/DialogActions"));

var _Info = _interopRequireDefault(require("@material-ui/icons/Info"));

var _react = _interopRequireDefault(require("react"));

var _immutable = require("immutable");

var InfoRenderer = function InfoRenderer(_ref) {
  var schema = _ref.schema,
      variant = _ref.variant,
      openAs = _ref.openAs,
      align = _ref.align,
      dense = _ref.dense;

  var _React$useState = _react["default"].useState(false),
      _React$useState2 = (0, _slicedToArray2["default"])(_React$useState, 2),
      open = _React$useState2[0],
      setOpen = _React$useState2[1];

  var content = /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, _immutable.List.isList(schema.get('info')) ? schema.get('info').map(function (line, i) {
    return /*#__PURE__*/_react["default"].createElement(_Typography["default"], {
      key: i,
      gutterBottom: true
    }, line);
  }).valueSeq() : typeof schema.get('info') === 'string' ? schema.get('info') : null);

  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, variant === 'icon' ? /*#__PURE__*/_react["default"].createElement(_IconButton["default"], {
    onClick: function onClick() {
      return setOpen(true);
    },
    size: dense ? 'small' : 'medium',
    style: {
      "float": align ? align : undefined
    }
  }, /*#__PURE__*/_react["default"].createElement(_Info["default"], null)) : /*#__PURE__*/_react["default"].createElement(_Button["default"], {
    onClick: function onClick() {
      return setOpen(function (o) {
        return !o;
      });
    }
  }, "Show Info"), openAs === 'modal' ? /*#__PURE__*/_react["default"].createElement(_Dialog["default"], {
    open: open,
    onClose: function onClose() {
      return setOpen(false);
    }
  }, /*#__PURE__*/_react["default"].createElement(_DialogTitle["default"], null, "Info"), /*#__PURE__*/_react["default"].createElement(_DialogContent["default"], null, content), /*#__PURE__*/_react["default"].createElement(_DialogActions["default"], null, /*#__PURE__*/_react["default"].createElement(_Button["default"], {
    onClick: function onClick() {
      return setOpen(false);
    }
  }, "close"))) : open ? content : null);
};

exports.InfoRenderer = InfoRenderer;