import { ListButton } from '@ui-schema/ds-material/Component/ListButton';
import Add from '@material-ui/icons/Add';
import { Trans } from '@ui-schema/ui-schema';
import { Map } from 'immutable';
import { ValidityHelperText } from '@ui-schema/ds-material/Component/LocaleHelperText';
import React from 'react';
import Box from '@material-ui/core/Box';
export const GenericListFooter = ({
  schema,
  required,
  onChange,
  storeKeys,
  notAddable,
  btnColor,
  btnVariant,
  btnSize,
  btnAddShowLabel,
  btnAddStyle,
  errors,
  showValidity
}) => {
  return /*#__PURE__*/React.createElement(Box, {
    mt: 2
  }, !schema.get('readOnly') && !notAddable ? /*#__PURE__*/React.createElement(ListButton, {
    onClick: () => {
      onChange({
        storeKeys,
        scopes: ['value', 'internal'],
        type: 'list-item-add',
        schema,
        required
      });
    },
    btnSize: btnSize,
    btnVariant: btnVariant,
    btnColor: btnColor,
    showLabel: btnAddShowLabel,
    style: btnAddStyle,
    Icon: Add,
    title: /*#__PURE__*/React.createElement(Trans, {
      text: 'labels.add-item',
      context: Map({
        actionLabels: schema.get('listActionLabels')
      })
    })
  }) : null, /*#__PURE__*/React.createElement(ValidityHelperText
  /*
   * only pass down errors which are not for a specific sub-schema
   * todo: check if all needed are passed down
   */
  , {
    errors: errors,
    showValidity: showValidity,
    schema: schema
  }));
};