import React from 'react';
import IconButton from '@material-ui/core/IconButton';
import Typography from '@material-ui/core/Typography';
import KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';
import KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';
import { Trans } from '@ui-schema/ui-schema';
import { Map } from 'immutable';
import { AccessTooltipIcon } from '@ui-schema/ds-material/Component/Tooltip/Tooltip';
export const GenericListItemPos = ({
  index,
  listSize,
  listRequired,
  schema,
  onChange,
  storeKeys,
  notSortable,
  btnSize = 'small'
}) => {
  const readOnly = schema.get('readOnly');
  return /*#__PURE__*/React.createElement(React.Fragment, null, !readOnly && !notSortable && index > 0 ? /*#__PURE__*/React.createElement(IconButton, {
    size: btnSize,
    style: {
      margin: '0 auto'
    },
    onClick: () => onChange({
      storeKeys,
      scopes: ['value', 'internal'],
      type: 'list-item-move',
      fromIndex: index,
      toIndex: index - 1,
      schema,
      required: listRequired
    })
  }, /*#__PURE__*/React.createElement(AccessTooltipIcon, {
    title: /*#__PURE__*/React.createElement(Trans, {
      text: 'labels.move-to-position',
      context: Map({
        nextIndex: index + 1 - 1
      })
    })
  }, /*#__PURE__*/React.createElement(KeyboardArrowUp, {
    fontSize: 'inherit',
    style: {
      margin: btnSize === 'small' ? 2 : undefined
    }
  }))) : null, /*#__PURE__*/React.createElement(Typography, {
    component: 'p',
    variant: 'caption',
    align: 'center',
    style: {
      margin: '6px 0',
      minWidth: '2rem'
    }
  }, index + 1, ".", /*#__PURE__*/React.createElement(Typography, {
    component: 'span',
    variant: 'srOnly'
  }, /*#__PURE__*/React.createElement(Trans, {
    text: 'labels.entry'
  }))), !readOnly && !notSortable && index < listSize - 1 ? /*#__PURE__*/React.createElement(IconButton, {
    size: btnSize,
    style: {
      margin: '0 auto'
    },
    onClick: () => onChange({
      storeKeys,
      scopes: ['value', 'internal'],
      type: 'list-item-move',
      fromIndex: index,
      toIndex: index + 1,
      schema,
      required: listRequired
    })
  }, /*#__PURE__*/React.createElement(AccessTooltipIcon, {
    title: /*#__PURE__*/React.createElement(Trans, {
      text: 'labels.move-to-position',
      context: Map({
        nextIndex: index + 1 + 1
      })
    })
  }, /*#__PURE__*/React.createElement(KeyboardArrowDown, {
    fontSize: 'inherit',
    style: {
      margin: btnSize === 'small' ? 2 : undefined
    }
  }))) : null);
};