import React from 'react';
import { schemaTypeToDistinct, TransTitle } from '@ui-schema/ui-schema';
import TableCell from '@material-ui/core/TableCell';
import TableHead from '@material-ui/core/TableHead';
import TableRow from '@material-ui/core/TableRow';
export const TableHeader = ({
  schema,
  validItemSchema,
  uid,
  itemsSchema,
  storeKeys,
  readOnly
}) => {
  var _itemsSchema$getIn;

  let cellSchema = itemsSchema.get('items') || itemsSchema.get('properties');

  if (schemaTypeToDistinct(itemsSchema.get('type')) === 'object' && (_itemsSchema$getIn = itemsSchema.getIn(['rowSortOrder'])) !== null && _itemsSchema$getIn !== void 0 && _itemsSchema$getIn.size) {
    cellSchema = itemsSchema.getIn(['rowSortOrder']) // @ts-ignore
    .map(key => cellSchema.get(key));
  }

  return /*#__PURE__*/React.createElement(TableHead, null, validItemSchema ? /*#__PURE__*/React.createElement(TableRow, null, cellSchema.map((item, j) => {
    var _item$get;

    return !item.get('hidden') ? /*#__PURE__*/React.createElement(TableCell, {
      key: j
    }, /*#__PURE__*/React.createElement("div", {
      id: 'uis-' + uid + '-tbl-' + j
    }, /*#__PURE__*/React.createElement(TransTitle, {
      schema: item,
      storeKeys: storeKeys.push(j),
      ownKey: j
    }), !schema.getIn(['view', 'hideItemsTitle']) && schemaTypeToDistinct(item.get('type')) === 'object' ? /*#__PURE__*/React.createElement("div", null, ' (', (_item$get = item.get('properties')) === null || _item$get === void 0 ? void 0 : _item$get.keySeq().map((key, i) => {
      var _item$get2;

      return /*#__PURE__*/React.createElement(React.Fragment, {
        key: key
      }, /*#__PURE__*/React.createElement(TransTitle, {
        schema: item.getIn(['properties', key]),
        storeKeys: storeKeys.push(j).push(key),
        ownKey: key
      }), i < ((_item$get2 = item.get('properties')) === null || _item$get2 === void 0 ? void 0 : _item$get2.keySeq().size) - 1 ? ', ' : '');
    }).valueSeq(), ')') : '')) : null;
  }).valueSeq(), !readOnly ? /*#__PURE__*/React.createElement(TableCell, null) : null) : null);
};