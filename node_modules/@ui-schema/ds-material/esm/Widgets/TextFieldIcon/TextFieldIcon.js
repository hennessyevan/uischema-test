import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
const _excluded = ["schema"],
      _excluded2 = ["schema"],
      _excluded3 = ["schema"];
import React from 'react';
import InputAdornment from '@material-ui/core/InputAdornment';
import { NumberRenderer, StringRenderer, TextRenderer } from '@ui-schema/ds-material/Widgets/TextField';
import { Trans } from '@ui-schema/ui-schema';

const computeIcon = (schema, baseInputProps) => {
  const icon = schema.getIn(['view', 'icon']);
  let iconEnd = schema.getIn(['view', 'iconEnd']);
  return React.useMemo(() => {
    let inputProps = baseInputProps || {};

    if (icon && (typeof iconEnd === 'boolean' && !iconEnd || typeof iconEnd !== 'boolean')) {
      inputProps['startAdornment'] = /*#__PURE__*/React.createElement(InputAdornment, {
        position: "start"
      }, /*#__PURE__*/React.createElement(Trans, {
        text: 'icons.' + icon
      }));
    }

    if (typeof iconEnd !== 'boolean' && iconEnd) {
      inputProps['endAdornment'] = /*#__PURE__*/React.createElement(InputAdornment, {
        position: "end"
      }, /*#__PURE__*/React.createElement(Trans, {
        text: 'icons.' + iconEnd
      }));
    }

    return inputProps;
  }, [icon, baseInputProps]);
};

const StringIconRenderer = _ref => {
  let {
    schema
  } = _ref,
      props = _objectWithoutProperties(_ref, _excluded);

  const InputProps = computeIcon(schema, props.InputProps);
  return /*#__PURE__*/React.createElement(StringRenderer, _extends({}, props, {
    schema: schema,
    InputProps: InputProps
  }));
};

const TextIconRenderer = _ref2 => {
  let {
    schema
  } = _ref2,
      props = _objectWithoutProperties(_ref2, _excluded2);

  const InputProps = computeIcon(schema, props.InputProps);
  return /*#__PURE__*/React.createElement(TextRenderer, _extends({}, props, {
    schema: schema,
    InputProps: InputProps
  }));
};

const NumberIconRenderer = _ref3 => {
  let {
    schema
  } = _ref3,
      props = _objectWithoutProperties(_ref3, _excluded3);

  const InputProps = computeIcon(schema, props.InputProps);
  return /*#__PURE__*/React.createElement(NumberRenderer, _extends({}, props, {
    schema: schema,
    InputProps: InputProps
  }));
};

export { StringIconRenderer, TextIconRenderer, NumberIconRenderer };