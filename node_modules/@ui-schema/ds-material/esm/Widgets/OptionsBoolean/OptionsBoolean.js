import React from 'react';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Switch from '@material-ui/core/Switch';
import makeStyles from '@material-ui/core/styles/makeStyles';
import { grey } from '@material-ui/core/colors';
import { TransTitle } from '@ui-schema/ui-schema';
import { ValidityHelperText } from '@ui-schema/ds-material/Component';
const switchStyle = makeStyles(theme => ({
  switchBase: {
    color: ({
      error
    }) => error ? theme.palette.error.main : theme.palette.type === 'dark' ? grey[400] : grey[50]
  },
  checked: {},
  track: {
    backgroundColor: ({
      error
    }) => error ? theme.palette.error.dark : theme.palette.type === 'dark' ? grey[500] : grey[300]
  }
}));
export const BoolRenderer = ({
  ownKey,
  value,
  onChange,
  schema,
  storeKeys,
  showValidity,
  valid,
  required,
  errors,
  labelledBy = undefined
}) => {
  const currentVal = Boolean(value);
  const classes = switchStyle({
    error: !valid && showValidity
  });
  const control = /*#__PURE__*/React.createElement(Switch, {
    classes: classes,
    required: required,
    checked: currentVal,
    disabled: schema.get('readOnly'),
    inputProps: {
      'aria-labelledby': labelledBy
    },
    onChange: () => onChange({
      storeKeys,
      scopes: ['value'],
      type: 'update',
      updater: ({
        value: storeValue
      }) => ({
        value: !storeValue
      }),
      schema,
      required
    })
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, schema.getIn(['view', 'hideTitle']) ? control : /*#__PURE__*/React.createElement(FormControlLabel, {
    disabled: schema.get('readOnly'),
    control: control,
    label: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TransTitle, {
      schema: schema,
      storeKeys: storeKeys,
      ownKey: ownKey
    }), required ? ' *' : '')
  }), /*#__PURE__*/React.createElement(ValidityHelperText, {
    errors: errors,
    showValidity: showValidity,
    schema: schema
  }));
};