import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import FormLabel from '@material-ui/core/FormLabel';
import FormControl from '@material-ui/core/FormControl';
import MuiFormGroup from '@material-ui/core/FormGroup';
import { useTheme } from '@material-ui/core/styles';
import { extractValue } from '@ui-schema/ui-schema/UIStore';
import { memo } from '@ui-schema/ui-schema/Utils';
import { TransTitle } from '@ui-schema/ui-schema/Translate/TransTitle';
export const FormGroupBase = props => {
  const {
    storeKeys,
    ownKey,
    widgets
  } = props;
  const {
    WidgetRenderer
  } = widgets;
  const {
    spacing
  } = useTheme();
  let {
    schema
  } = props; // deleting the `widget` to directly use `PluginStack` for nesting
  // with `widget` it would lead to an endless loop
  // using e.g. default `object` renderer then
  // @ts-ignore

  schema = schema.delete('widget');
  return /*#__PURE__*/React.createElement(FormControl, {
    component: "fieldset",
    style: {
      display: 'block',
      marginBottom: spacing(1)
    }
  }, /*#__PURE__*/React.createElement(FormLabel, {
    component: "legend"
  }, /*#__PURE__*/React.createElement(TransTitle, {
    schema: schema,
    storeKeys: storeKeys,
    ownKey: ownKey
  })), /*#__PURE__*/React.createElement(MuiFormGroup, {
    style: {
      marginTop: spacing(1),
      marginBottom: spacing(1)
    }
  }, /*#__PURE__*/React.createElement(WidgetRenderer, _extends({}, props, {
    schema: schema
  }))));
};
export const FormGroup = extractValue(memo(FormGroupBase));