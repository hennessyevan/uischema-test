import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
const _excluded = ["showValidity", "schema", "level"];
import React from 'react';
import { extractValue, memo, PluginStack } from '@ui-schema/ui-schema';
export const TableAdvancedBase = _ref => {
  let {
    showValidity,
    schema,
    level
  } = _ref,
      props = _objectWithoutProperties(_ref, _excluded);

  const {
    storeKeys
  } = props;
  const readOnly = schema.get('readOnly');
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PluginStack, {
    showValidity: showValidity,
    storeKeys: storeKeys.push('data'),
    schema: schema.getIn(['properties', 'data']),
    parentSchema: schema,
    level: level + 1,
    readOnly: readOnly,
    noGrid: true
  }));
};
export const TableAdvanced = extractValue(memo(TableAdvancedBase));