var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));

// esbuild/react-import.js
import React from "react";
var init_react_import = __esm({
  "esbuild/react-import.js"() {
  }
});

// node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "node_modules/tslib/tslib.js"(exports, module) {
    init_react_import();
    var __extends2;
    var __assign2;
    var __rest2;
    var __decorate2;
    var __param2;
    var __metadata2;
    var __awaiter2;
    var __generator2;
    var __exportStar2;
    var __values2;
    var __read2;
    var __spread2;
    var __spreadArrays2;
    var __spreadArray2;
    var __await2;
    var __asyncGenerator2;
    var __asyncDelegator2;
    var __asyncValues2;
    var __makeTemplateObject2;
    var __importStar2;
    var __importDefault2;
    var __classPrivateFieldGet2;
    var __classPrivateFieldSet2;
    var __createBinding2;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root, createExporter(exports2)));
        });
      } else if (typeof module === "object" && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id, v) {
          return exports2[id] = previous ? previous(id, v) : v;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
        d.__proto__ = b;
      } || function(d, b) {
        for (var p in b)
          if (Object.prototype.hasOwnProperty.call(b, p))
            d[p] = b[p];
      };
      __extends2 = function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
      __assign2 = Object.assign || function(t2) {
        for (var s, i = 1, n2 = arguments.length; i < n2; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t2[p] = s[p];
        }
        return t2;
      };
      __rest2 = function(s, e2) {
        var t2 = {};
        for (var p in s)
          if (Object.prototype.hasOwnProperty.call(s, p) && e2.indexOf(p) < 0)
            t2[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e2.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
              t2[p[i]] = s[p[i]];
          }
        return t2;
      };
      __decorate2 = function(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
              r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
      };
      __param2 = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      };
      __metadata2 = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter2 = function(thisArg, _arguments, P, generator) {
        function adopt(value) {
          return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e2) {
              reject(e2);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e2) {
              reject(e2);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator2 = function(thisArg, body) {
        var _ = { label: 0, sent: function() {
          if (t2[0] & 1)
            throw t2[1];
          return t2[1];
        }, trys: [], ops: [] }, f, y, t2, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
          return this;
        }), g;
        function verb(n2) {
          return function(v) {
            return step([n2, v]);
          };
        }
        function step(op) {
          if (f)
            throw new TypeError("Generator is already executing.");
          while (_)
            try {
              if (f = 1, y && (t2 = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t2 = y["return"]) && t2.call(y), 0) : y.next) && !(t2 = t2.call(y, op[1])).done)
                return t2;
              if (y = 0, t2)
                op = [op[0] & 2, t2.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t2 = op;
                  break;
                case 4:
                  _.label++;
                  return { value: op[1], done: false };
                case 5:
                  _.label++;
                  y = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _.ops.pop();
                  _.trys.pop();
                  continue;
                default:
                  if (!(t2 = _.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _ = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
                    _.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _.label < t2[1]) {
                    _.label = t2[1];
                    t2 = op;
                    break;
                  }
                  if (t2 && _.label < t2[2]) {
                    _.label = t2[2];
                    _.ops.push(op);
                    break;
                  }
                  if (t2[2])
                    _.ops.pop();
                  _.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _);
            } catch (e2) {
              op = [6, e2];
              y = 0;
            } finally {
              f = t2 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __exportStar2 = function(m, o) {
        for (var p in m)
          if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
            __createBinding2(o, m, p);
      };
      __createBinding2 = Object.create ? function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() {
          return m[k];
        } });
      } : function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        o[k2] = m[k];
      };
      __values2 = function(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
          return m.call(o);
        if (o && typeof o.length === "number")
          return {
            next: function() {
              if (o && i >= o.length)
                o = void 0;
              return { value: o && o[i++], done: !o };
            }
          };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read2 = function(o, n2) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
          return o;
        var i = m.call(o), r, ar = [], e2;
        try {
          while ((n2 === void 0 || n2-- > 0) && !(r = i.next()).done)
            ar.push(r.value);
        } catch (error) {
          e2 = { error };
        } finally {
          try {
            if (r && !r.done && (m = i["return"]))
              m.call(i);
          } finally {
            if (e2)
              throw e2.error;
          }
        }
        return ar;
      };
      __spread2 = function() {
        for (var ar = [], i = 0; i < arguments.length; i++)
          ar = ar.concat(__read2(arguments[i]));
        return ar;
      };
      __spreadArrays2 = function() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
          s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
        return r;
      };
      __spreadArray2 = function(to, from, pack) {
        if (pack || arguments.length === 2)
          for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
              if (!ar)
                ar = Array.prototype.slice.call(from, 0, i);
              ar[i] = from[i];
            }
          }
        return to.concat(ar || Array.prototype.slice.call(from));
      };
      __await2 = function(v) {
        return this instanceof __await2 ? (this.v = v, this) : new __await2(v);
      };
      __asyncGenerator2 = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
          return this;
        }, i;
        function verb(n2) {
          if (g[n2])
            i[n2] = function(v) {
              return new Promise(function(a, b) {
                q.push([n2, v, a, b]) > 1 || resume(n2, v);
              });
            };
        }
        function resume(n2, v) {
          try {
            step(g[n2](v));
          } catch (e2) {
            settle(q[0][3], e2);
          }
        }
        function step(r) {
          r.value instanceof __await2 ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f, v) {
          if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]);
        }
      };
      __asyncDelegator2 = function(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function(e2) {
          throw e2;
        }), verb("return"), i[Symbol.iterator] = function() {
          return this;
        }, i;
        function verb(n2, f) {
          i[n2] = o[n2] ? function(v) {
            return (p = !p) ? { value: __await2(o[n2](v)), done: n2 === "return" } : f ? f(v) : v;
          } : f;
        }
      };
      __asyncValues2 = function(o) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values2 === "function" ? __values2(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
          return this;
        }, i);
        function verb(n2) {
          i[n2] = o[n2] && function(v) {
            return new Promise(function(resolve, reject) {
              v = o[n2](v), settle(resolve, reject, v.done, v.value);
            });
          };
        }
        function settle(resolve, reject, d, v) {
          Promise.resolve(v).then(function(v2) {
            resolve({ value: v2, done: d });
          }, reject);
        }
      };
      __makeTemplateObject2 = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      var __setModuleDefault = Object.create ? function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
      } : function(o, v) {
        o["default"] = v;
      };
      __importStar2 = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k in mod)
            if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
              __createBinding2(result, mod, k);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      __importDefault2 = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet2 = function(receiver, state, kind, f) {
        if (kind === "a" && !f)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
      };
      __classPrivateFieldSet2 = function(receiver, state, value, kind, f) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
      };
      exporter("__extends", __extends2);
      exporter("__assign", __assign2);
      exporter("__rest", __rest2);
      exporter("__decorate", __decorate2);
      exporter("__param", __param2);
      exporter("__metadata", __metadata2);
      exporter("__awaiter", __awaiter2);
      exporter("__generator", __generator2);
      exporter("__exportStar", __exportStar2);
      exporter("__createBinding", __createBinding2);
      exporter("__values", __values2);
      exporter("__read", __read2);
      exporter("__spread", __spread2);
      exporter("__spreadArrays", __spreadArrays2);
      exporter("__spreadArray", __spreadArray2);
      exporter("__await", __await2);
      exporter("__asyncGenerator", __asyncGenerator2);
      exporter("__asyncDelegator", __asyncDelegator2);
      exporter("__asyncValues", __asyncValues2);
      exporter("__makeTemplateObject", __makeTemplateObject2);
      exporter("__importStar", __importStar2);
      exporter("__importDefault", __importDefault2);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet2);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet2);
    });
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    init_react_import();
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType2(type) {
          return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment3 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment3;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType2;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    init_react_import();
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    init_react_import();
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
          return test2[n2];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/react-router/node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/react-router/node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    init_react_import();
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/react-router/node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/react-router/node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    init_react_import();
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = Function.call.bind(Object.prototype.hasOwnProperty);
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.");
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).");
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/react-router/node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/react-router/node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    init_react_import();
    var ReactIs = require_react_is();
    var assign3 = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var checkPropTypes = require_checkPropTypes();
    var has = Function.call.bind(Object.prototype.hasOwnProperty);
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message) {
        this.message = message;
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.");
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + ".");
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            if (checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
              return null;
            }
          }
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (!checker) {
              continue;
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign3({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (!checker) {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/react-router/node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/react-router/node_modules/prop-types/index.js"(exports, module) {
    init_react_import();
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/react-router/node_modules/isarray/index.js
var require_isarray = __commonJS({
  "node_modules/react-router/node_modules/isarray/index.js"(exports, module) {
    init_react_import();
    module.exports = Array.isArray || function(arr) {
      return Object.prototype.toString.call(arr) == "[object Array]";
    };
  }
});

// node_modules/react-router/node_modules/path-to-regexp/index.js
var require_path_to_regexp = __commonJS({
  "node_modules/react-router/node_modules/path-to-regexp/index.js"(exports, module) {
    init_react_import();
    var isarray = require_isarray();
    module.exports = pathToRegexp2;
    module.exports.parse = parse3;
    module.exports.compile = compile;
    module.exports.tokensToFunction = tokensToFunction;
    module.exports.tokensToRegExp = tokensToRegExp;
    var PATH_REGEXP = new RegExp([
      "(\\\\.)",
      "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"
    ].join("|"), "g");
    function parse3(str, options) {
      var tokens = [];
      var key = 0;
      var index2 = 0;
      var path = "";
      var defaultDelimiter = options && options.delimiter || "/";
      var res;
      while ((res = PATH_REGEXP.exec(str)) != null) {
        var m = res[0];
        var escaped = res[1];
        var offset = res.index;
        path += str.slice(index2, offset);
        index2 = offset + m.length;
        if (escaped) {
          path += escaped[1];
          continue;
        }
        var next = str[index2];
        var prefix3 = res[2];
        var name = res[3];
        var capture = res[4];
        var group = res[5];
        var modifier = res[6];
        var asterisk = res[7];
        if (path) {
          tokens.push(path);
          path = "";
        }
        var partial = prefix3 != null && next != null && next !== prefix3;
        var repeat = modifier === "+" || modifier === "*";
        var optional = modifier === "?" || modifier === "*";
        var delimiter = res[2] || defaultDelimiter;
        var pattern = capture || group;
        tokens.push({
          name: name || key++,
          prefix: prefix3 || "",
          delimiter,
          optional,
          repeat,
          partial,
          asterisk: !!asterisk,
          pattern: pattern ? escapeGroup(pattern) : asterisk ? ".*" : "[^" + escapeString(delimiter) + "]+?"
        });
      }
      if (index2 < str.length) {
        path += str.substr(index2);
      }
      if (path) {
        tokens.push(path);
      }
      return tokens;
    }
    function compile(str, options) {
      return tokensToFunction(parse3(str, options), options);
    }
    function encodeURIComponentPretty(str) {
      return encodeURI(str).replace(/[\/?#]/g, function(c) {
        return "%" + c.charCodeAt(0).toString(16).toUpperCase();
      });
    }
    function encodeAsterisk(str) {
      return encodeURI(str).replace(/[?#]/g, function(c) {
        return "%" + c.charCodeAt(0).toString(16).toUpperCase();
      });
    }
    function tokensToFunction(tokens, options) {
      var matches = new Array(tokens.length);
      for (var i = 0; i < tokens.length; i++) {
        if (typeof tokens[i] === "object") {
          matches[i] = new RegExp("^(?:" + tokens[i].pattern + ")$", flags(options));
        }
      }
      return function(obj, opts) {
        var path = "";
        var data = obj || {};
        var options2 = opts || {};
        var encode = options2.pretty ? encodeURIComponentPretty : encodeURIComponent;
        for (var i2 = 0; i2 < tokens.length; i2++) {
          var token = tokens[i2];
          if (typeof token === "string") {
            path += token;
            continue;
          }
          var value = data[token.name];
          var segment;
          if (value == null) {
            if (token.optional) {
              if (token.partial) {
                path += token.prefix;
              }
              continue;
            } else {
              throw new TypeError('Expected "' + token.name + '" to be defined');
            }
          }
          if (isarray(value)) {
            if (!token.repeat) {
              throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + "`");
            }
            if (value.length === 0) {
              if (token.optional) {
                continue;
              } else {
                throw new TypeError('Expected "' + token.name + '" to not be empty');
              }
            }
            for (var j = 0; j < value.length; j++) {
              segment = encode(value[j]);
              if (!matches[i2].test(segment)) {
                throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + "`");
              }
              path += (j === 0 ? token.prefix : token.delimiter) + segment;
            }
            continue;
          }
          segment = token.asterisk ? encodeAsterisk(value) : encode(value);
          if (!matches[i2].test(segment)) {
            throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
          }
          path += token.prefix + segment;
        }
        return path;
      };
    }
    function escapeString(str) {
      return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1");
    }
    function escapeGroup(group) {
      return group.replace(/([=!:$\/()])/g, "\\$1");
    }
    function attachKeys(re, keys) {
      re.keys = keys;
      return re;
    }
    function flags(options) {
      return options && options.sensitive ? "" : "i";
    }
    function regexpToRegexp(path, keys) {
      var groups = path.source.match(/\((?!\?)/g);
      if (groups) {
        for (var i = 0; i < groups.length; i++) {
          keys.push({
            name: i,
            prefix: null,
            delimiter: null,
            optional: false,
            repeat: false,
            partial: false,
            asterisk: false,
            pattern: null
          });
        }
      }
      return attachKeys(path, keys);
    }
    function arrayToRegexp(path, keys, options) {
      var parts = [];
      for (var i = 0; i < path.length; i++) {
        parts.push(pathToRegexp2(path[i], keys, options).source);
      }
      var regexp = new RegExp("(?:" + parts.join("|") + ")", flags(options));
      return attachKeys(regexp, keys);
    }
    function stringToRegexp(path, keys, options) {
      return tokensToRegExp(parse3(path, options), keys, options);
    }
    function tokensToRegExp(tokens, keys, options) {
      if (!isarray(keys)) {
        options = keys || options;
        keys = [];
      }
      options = options || {};
      var strict = options.strict;
      var end = options.end !== false;
      var route = "";
      for (var i = 0; i < tokens.length; i++) {
        var token = tokens[i];
        if (typeof token === "string") {
          route += escapeString(token);
        } else {
          var prefix3 = escapeString(token.prefix);
          var capture = "(?:" + token.pattern + ")";
          keys.push(token);
          if (token.repeat) {
            capture += "(?:" + prefix3 + capture + ")*";
          }
          if (token.optional) {
            if (!token.partial) {
              capture = "(?:" + prefix3 + "(" + capture + "))?";
            } else {
              capture = prefix3 + "(" + capture + ")?";
            }
          } else {
            capture = prefix3 + "(" + capture + ")";
          }
          route += capture;
        }
      }
      var delimiter = escapeString(options.delimiter || "/");
      var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;
      if (!strict) {
        route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + "(?:" + delimiter + "(?=$))?";
      }
      if (end) {
        route += "$";
      } else {
        route += strict && endsWithDelimiter ? "" : "(?=" + delimiter + "|$)";
      }
      return attachKeys(new RegExp("^" + route, flags(options)), keys);
    }
    function pathToRegexp2(path, keys, options) {
      if (!isarray(keys)) {
        options = keys || options;
        keys = [];
      }
      options = options || {};
      if (path instanceof RegExp) {
        return regexpToRegexp(path, keys);
      }
      if (isarray(path)) {
        return arrayToRegexp(path, keys, options);
      }
      return stringToRegexp(path, keys, options);
    }
  }
});

// node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var require_hoist_non_react_statics_cjs = __commonJS({
  "node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module) {
    "use strict";
    init_react_import();
    var reactIs = require_react_is();
    var REACT_STATICS = {
      childContextTypes: true,
      contextType: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      getDerivedStateFromError: true,
      getDerivedStateFromProps: true,
      mixins: true,
      propTypes: true,
      type: true
    };
    var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      callee: true,
      arguments: true,
      arity: true
    };
    var FORWARD_REF_STATICS = {
      "$$typeof": true,
      render: true,
      defaultProps: true,
      displayName: true,
      propTypes: true
    };
    var MEMO_STATICS = {
      "$$typeof": true,
      compare: true,
      defaultProps: true,
      displayName: true,
      propTypes: true,
      type: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
    TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
    function getStatics(component) {
      if (reactIs.isMemo(component)) {
        return MEMO_STATICS;
      }
      return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
    }
    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = Object.prototype;
    function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
      if (typeof sourceComponent !== "string") {
        if (objectPrototype) {
          var inheritedComponent = getPrototypeOf(sourceComponent);
          if (inheritedComponent && inheritedComponent !== objectPrototype) {
            hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
          }
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
          keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for (var i = 0; i < keys.length; ++i) {
          var key = keys[i];
          if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
            var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
            try {
              defineProperty(targetComponent, key, descriptor);
            } catch (e2) {
            }
          }
        }
      }
      return targetComponent;
    }
    module.exports = hoistNonReactStatics;
  }
});

// src/index.ts
init_react_import();

// src/alert/Alert.tsx
init_react_import();

// src/button/index.ts
init_react_import();

// src/button/Button.tsx
init_react_import();
import { motion as motion2 } from "framer-motion";
import { forwardRef as forwardRef2, useRef as useRef2 } from "react";
import { mergeProps, useButton } from "react-aria";
import { mergeRefs } from "react-laag";

// src/spinner/Spinner.tsx
init_react_import();

// src/layout/Box.tsx
init_react_import();

// src/theme/default.ts
init_react_import();
import { createStyleObject } from "@capsizecss/core";
import { createStitches } from "@stitches/react";
var hsl = {
  slate: "210 21% 58%",
  blue: "205 33% 55%",
  lightBlue: "220 63% 93%",
  navy: "216 37% 13%",
  steel: "210 24% 36%",
  jade: "173 21% 26%",
  green: "82 24% 49%",
  yellow: "34 67% 63%",
  coral: "9 65% 63%",
  cream: "13 39% 95%",
  red: "354 30% 52%",
  pink: "0 39% 73%",
  rose: "337 12% 47%",
  purple: "263 12% 47%",
  black: "0 0% 0%",
  gray1: "214 7% 40%",
  gray2: "213 15% 69%",
  gray3: "213 20% 81%",
  gray4: "217 39% 91%",
  gray5: "220 29% 94%",
  gray6: "220 43% 97%",
  white: "0 0% 100%",
  danger: "3 63% 57%",
  success: "135 21% 44%",
  warning: "24 68% 57%"
};
function initThemeColors(colors3) {
  return Object.entries(colors3).reduce((obj, [key, color]) => {
    obj[`hsl_${key}`] = color;
    obj[`${key}`] = `hsl($hsl_${key})`;
    return obj;
  }, {});
}
var colors = __spreadProps(__spreadValues({}, initThemeColors(hsl)), {
  hsl_primary: "$hsl_blue",
  hsl_info: "$hsl_primary",
  hsl_secondary: "$hsl_gray2",
  hsl_tertiary: "$hsl_navy",
  hsl_background: "$hsl_white",
  hsl_secondaryBackground: "$hsl_gray5",
  hsl_tertiaryBackground: "$hsl_gray4"
});
var semanticColors = {
  primary: "hsl($hsl_primary)",
  secondary: "hsl($hsl_gray2)",
  tertiary: "hsl($hsl_navy)",
  background: "hsl($hsl_background)",
  secondaryBackground: "hsl($hsl_gray5)",
  tertiaryBackground: "hsl($hsl_gray4)",
  groupedBackground: "$gray6",
  info: "hsl($hsl_info)",
  overlay: "hsl($hsl_primary / 0.85)",
  tooltip: "hsl(0 0% 35%)",
  primaryTint: "hsl($hsl_primary / 0.5)",
  secondaryTint: "hsl($hsl_gray2 / 0.5)",
  tertiaryTint: "hsl($hsl_navy / 0.5)",
  dangerTint: "hsl($hsl_danger / 0.5)",
  successTint: "hsl($hsl_success / 0.5)",
  warningTint: "hsl($hsl_warning / 0.5)",
  muted: "$gray4",
  primarySplit: "hsl(204 32% 69%)",
  secondarySplit: "$gray3",
  tertiarySplit: "hsl(210 19% 25%)",
  label: "$navy",
  secondaryLabel: "$gray1",
  tertiaryLabel: "$navy",
  quartenaryLabel: "$blue",
  placeholderText: "$gray2",
  disabled: "$gray2",
  radio: "$jade",
  checkbox: "$primary",
  onPrimary: "$white",
  onSecondary: "$white",
  onTertiary: "$white",
  focusStroke: "$yellow"
};
var fontSizes = {
  1: "10px",
  2: "13px",
  3: "15px",
  4: "19px",
  5: "24px",
  6: "28px",
  7: "34px",
  8: "40px",
  9: "54px",
  10: "54px"
};
var fontFamilyMap = {
  $serif: "Recoleta Alt",
  $sans: "Modern Era"
};
var themeConfig = {
  colors: __spreadValues(__spreadValues({}, colors), semanticColors),
  fonts: {
    serif: `"Recoleta Alt", "Palatino Linotype", Palatino, Palladio, "URW Palladio L", "Book Antiqua", Baskerville, "Bookman Old Style", "Bitstream Charter", "Nimbus Roman No9 L", Garamond, "Apple Garamond", "ITC Garamond Narrow", "New Century Schoolbook", "Century Schoolbook", "Century Schoolbook L", Georgia, serif`,
    sans: `"Modern Era", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"`,
    mono: `"SF Mono", "Monaco", "Inconsolata", "Fira Mono", "Droid Sans Mono", "Source Code Pro", monospace`
  },
  fontSizes: __spreadProps(__spreadValues({}, fontSizes), {
    extraSmall: "$1",
    footnote: "$2",
    caption2: "$2",
    caption1: "$3",
    body: "$4",
    large: "$5",
    subHeadline: "$4",
    headline: "$5",
    title3: "$6",
    title2: "$7",
    title1: "$8",
    largeTitle: "$9",
    extraLargeTitle: "$10",
    root: `clamp($3, 5vw, $4)`
  }),
  lineHeights: {
    1: "5px",
    2: "6px",
    3: "7px",
    4: "9px",
    5: "11px",
    6: "14px",
    7: "17px",
    8: "20px",
    9: "27px",
    10: "27px"
  },
  fontWeights: {
    light: "300",
    regular: "400",
    medium: "550",
    bold: "700"
  },
  sizes: {
    1: "5px",
    2: "10px",
    3: "15px",
    4: "20px",
    5: "25px",
    6: "30px",
    7: "35px",
    8: "40px",
    9: "45px",
    10: "50px",
    11: "55px",
    12: "60px",
    13: "65px",
    14: "70px",
    15: "75px",
    16: "80px",
    17: "85px",
    18: "90px",
    19: "95px",
    20: "100px",
    buttonHeightSmall: "$6",
    buttonHeightRegular: "$8",
    buttonHeightLarge: "$10",
    controlHeightSmall: "$9",
    controlHeightRegular: "$10",
    controlHeightLarge: "$11"
  },
  space: {
    1: "5px",
    2: "10px",
    3: "15px",
    4: "20px",
    5: "25px",
    6: "30px",
    7: "35px",
    8: "40px",
    9: "45px",
    10: "50px",
    11: "55px",
    12: "60px",
    13: "65px",
    14: "70px",
    15: "75px",
    16: "80px",
    17: "85px",
    18: "90px",
    19: "95px",
    20: "100px",
    small: `clamp($1, 2vw, $2)`,
    medium: `clamp($2, 4vw, $4)`,
    large: `clamp($6, 7vw, $9)`
  },
  radii: {
    1: "5px",
    2: "7px",
    3: "10px",
    4: "15px",
    5: "20px",
    6: "25px",
    controlSmall: "calc($1 / 2)",
    controlRegular: "$1",
    controlLarge: "$2",
    round: "1000000px"
  },
  shadows: {
    1: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",
    2: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
    3: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
    4: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
    5: "0 25px 50px -12px rgba(0, 0, 0, 0.25)"
  },
  transitions: {
    slow: "325ms",
    normal: "225ms",
    fast: "125ms",
    toast: "5000ms"
  },
  borderWidths: {
    1: "1px",
    2: "2px",
    3: "4px"
  },
  zIndices: {
    focused: "2",
    default: "5",
    positioner: "10",
    overlay: "20",
    toaster: "30"
  }
};
var capsizeFontConfig = {
  "Modern Era": {
    capHeight: 700,
    ascent: 785,
    descent: -215,
    lineGap: 0,
    unitsPerEm: 1e3
  },
  "Recoleta Alt": {
    capHeight: 710,
    ascent: 1e3,
    descent: -360,
    lineGap: 0,
    unitsPerEm: 1e3
  }
};
var { globalCss, config, styled, css, theme, keyframes, getCssText, prefix, toString, createTheme } = createStitches({
  prefix: "gc",
  theme: themeConfig,
  media: {
    tabletPortrait: "(min-width: 767px)",
    tabletLandscape: "(min-width: 1023px)",
    laptop: "(min-width: 1100px)",
    desktop: "(min-width: 1919px)",
    ultrawide: "(min-width: 2300px)",
    touch: "(pointer: coarse)",
    mouse: "(pointer: fine) and (hover: hover)",
    highcontrast: "(forced-colors: active)"
  },
  utils: {
    marginInline: (value) => ({
      marginLeft: value,
      marginRight: value
    }),
    marginBlock: (value) => ({
      marginTop: value,
      marginBottom: value
    }),
    paddingInline: (value) => ({
      paddingLeft: value,
      paddingRight: value
    }),
    paddingBlock: (value) => ({
      paddingTop: value,
      paddingBottom: value
    }),
    size: (value) => ({
      width: value,
      height: value
    }),
    minSize: (value) => ({
      minWidth: value,
      minHeight: value
    }),
    maxSize: (value) => ({
      maxWidth: value,
      maxHeight: value
    }),
    capsize: ({
      metrics = "Modern Era",
      fontSize = 16,
      lineGap = 1.5
    }) => {
      const cappedStyles = createStyleObject({
        fontMetrics: capsizeFontConfig[metrics],
        fontSize,
        lineGap
      });
      return {
        "&::before": cappedStyles["::before"],
        "&::after": cappedStyles["::after"],
        fontSize: cappedStyles.fontSize,
        lineHeight: cappedStyles.lineHeight
      };
    }
  }
});
var StackingOrder = /* @__PURE__ */ ((StackingOrder2) => {
  StackingOrder2[StackingOrder2["FOCUSED"] = 2] = "FOCUSED";
  StackingOrder2[StackingOrder2["DEFAULT"] = 5] = "DEFAULT";
  StackingOrder2[StackingOrder2["POSITIONER"] = 10] = "POSITIONER";
  StackingOrder2[StackingOrder2["OVERLAY"] = 20] = "OVERLAY";
  StackingOrder2[StackingOrder2["TOASTER"] = 30] = "TOASTER";
  return StackingOrder2;
})(StackingOrder || {});
var reset = {
  "html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, main, menu, nav, output, ruby, section, summary, time, mark, audio, video": {
    margin: "0",
    padding: "0",
    border: "0",
    fontSize: "100%",
    font: "inherit",
    verticalAlign: "baseline"
  },
  "article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section": {
    display: "block"
  },
  "*[hidden]": {
    display: "none"
  },
  body: {
    lineHeight: "1"
  },
  "ol, ul": {
    listStyle: "none"
  },
  b: {
    fontWeight: "bold"
  },
  "blockquote, q": {
    quotes: "none"
  },
  "blockquote:before, blockquote:after, q:before, q:after": {
    content: ""
  },
  table: {
    borderSpacing: "0"
  }
};
var themeFonts = ({ basePath = "/" }) => globalCss({
  "@font-face": [
    {
      fontFamily: "Modern Era",
      src: `url(${basePath}ModernEraLight.ttf) format('truetype')`,
      fontWeight: "300",
      fontStyle: "normal",
      fontDisplay: "auto"
    },
    {
      fontFamily: "Modern Era",
      src: `url(${basePath}ModernEraRegular.ttf) format('truetype')`,
      fontWeight: "400",
      fontStyle: "normal",
      fontDisplay: "auto"
    },
    {
      fontFamily: "Modern Era",
      src: `url(${basePath}ModernEraMedium.ttf) format('truetype')`,
      fontWeight: "500",
      fontStyle: "normal",
      fontDisplay: "auto"
    },
    {
      fontFamily: "Recoleta Alt",
      src: `url(${basePath}RecoletaRegular.otf) format('opentype')`,
      fontWeight: "400",
      fontStyle: "normal",
      fontDisplay: "auto"
    },
    {
      fontFamily: "Recoleta Alt",
      src: `url(${basePath}RecoletaMedium.otf) format('opentype')`,
      fontWeight: "500",
      fontStyle: "normal",
      fontDisplay: "auto"
    }
  ]
});
var globalCssObject = {
  ":root, :host": {
    colorScheme: "light",
    WebkitFontSmoothing: "antialiased",
    MozOsxFontSmoothing: "grayscale",
    backgroundColor: "$background",
    color: "$label",
    fontFamily: "$sans"
  },
  "*": {
    boxSizing: "border-box",
    "&::selection": {
      backgroundColor: "hsl($hsl_primary / 0.5)"
    }
  }
};
var globalStyles = (disableReset = false) => globalCss(disableReset ? globalCssObject : __spreadValues(__spreadValues({}, reset), globalCssObject));

// src/layout/Box.tsx
var Box = styled("div", {
  boxSizing: "border-box"
});

// src/layout/Card.tsx
init_react_import();

// src/layout/Pane.tsx
init_react_import();
var Pane = styled("div", {
  $$borderTopColor: "transparent",
  $$borderRightColor: "transparent",
  $$borderBottomColor: "transparent",
  $$borderLeftColor: "transparent",
  border: "1px solid transparent",
  borderColor: "$$borderTopColor $$borderRightColor $$borderBottomColor $$borderLeftColor",
  transition: "box-shadow $fast",
  variants: {
    elevation: {
      1: {
        boxShadow: "$1"
      },
      2: {
        boxShadow: "$2"
      },
      3: {
        boxShadow: "$3"
      },
      4: {
        boxShadow: "$4"
      }
    },
    hoverElevation: {
      1: {
        "&:hover": {
          boxShadow: "$1"
        }
      },
      2: {
        "&:hover": {
          boxShadow: "$2"
        }
      },
      3: {
        "&:hover": {
          boxShadow: "$3"
        }
      },
      4: {
        "&:hover": {
          boxShadow: "$4"
        }
      }
    },
    border: {
      true: {
        $$borderTopColor: "$colors$gray5",
        $$borderRightColor: "$colors$gray5",
        $$borderBottomColor: "$colors$gray5",
        $$borderLeftColor: "$colors$gray5"
      },
      solid: {
        $$borderTopColor: "$colors$gray5",
        $$borderRightColor: "$colors$gray5",
        $$borderBottomColor: "$colors$gray5",
        $$borderLeftColor: "$colors$gray5"
      },
      muted: {
        $$borderTopColor: "$colors$gray6",
        $$borderRightColor: "$colors$gray6",
        $$borderBottomColor: "$colors$gray6",
        $$borderLeftColor: "$colors$gray6"
      }
    },
    borderTop: {
      true: {
        $$borderTopColor: "$colors$gray5"
      },
      solid: {
        $$borderTopColor: "$colors$gray5"
      },
      muted: {
        $$borderTopColor: "$colors$gray6"
      }
    },
    borderRight: {
      true: {
        $$borderRightColor: "$colors$gray5"
      },
      solid: {
        $$borderRightColor: "$colors$gray5"
      },
      muted: {
        $$borderRightColor: "$colors$gray6"
      }
    },
    borderBottom: {
      true: {
        $$borderBottomColor: "$colors$gray5"
      },
      solid: {
        $$borderBottomColor: "$colors$gray5"
      },
      muted: {
        $$borderBottomColor: "$colors$gray6"
      }
    },
    borderLeft: {
      true: {
        $$borderLeftColor: "$colors$gray5"
      },
      solid: {
        $$borderLeftColor: "$colors$gray5"
      },
      muted: {
        $$borderLeftColor: "$colors$gray6"
      }
    }
  }
});

// src/layout/Card.tsx
var Card = styled(Pane, { borderRadius: "$2" });

// src/layout/Overlay.tsx
init_react_import();
import { AnimatePresence, motion } from "framer-motion";
import { noop } from "lodash-es";
import { useEffect, useRef, useState } from "react";
import { OverlayContainer, usePreventScroll } from "react-aria";
import { Key } from "w3c-keys";

// src/layout/StackingProvider.tsx
init_react_import();
import { createContext, memo, useContext } from "react";
var StackingContext = createContext(5);
var StackingProvider = memo(function Stack({ children, value = 5 }) {
  const previousValue = useContext(StackingContext);
  const currentValue = Math.max(value, previousValue);
  const nextValue = currentValue + 1;
  return /* @__PURE__ */ React.createElement(StackingContext.Provider, {
    value: nextValue
  }, children(currentValue));
});

// src/layout/Overlay.tsx
var OverlayInner = styled(motion.div, {
  transition: "$normal",
  top: 0,
  left: 0,
  right: 0,
  bottom: 0,
  position: "fixed",
  "&::before": {
    filter: "brightness(25%)",
    backgroundColor: "$overlay",
    left: 0,
    top: 0,
    position: "fixed",
    display: "block",
    width: `100%`,
    height: "100%",
    content: '""'
  }
});
function Overlay({
  isShown: initShown,
  onShow,
  onHide,
  shouldCloseOnClick,
  shouldCloseOnEscapePress,
  children,
  containerCSS,
  preventBodyScroll
}) {
  const [isShown, setShown] = useState(initShown);
  const overlayRef = useRef(null);
  usePreventScroll({ isDisabled: !preventBodyScroll || !isShown });
  useEffect(() => {
    setShown(initShown);
  }, [initShown]);
  useEffect(() => {
    if (isShown) {
      document.body.addEventListener("keydown", onEscape, false);
      onShow(overlayRef.current);
    } else {
      document.body.removeEventListener("keydown", onEscape, false);
      onHide(overlayRef.current);
    }
  }, [isShown]);
  const onEscape = (e2) => {
    if (e2.key === Key.Escape && shouldCloseOnEscapePress) {
      close();
    }
  };
  const close = () => {
    onHide(overlayRef.current);
    setShown(false);
  };
  return /* @__PURE__ */ React.createElement(StackingProvider, {
    value: 20 /* OVERLAY */
  }, (zIndex) => /* @__PURE__ */ React.createElement(OverlayContainer, null, /* @__PURE__ */ React.createElement(AnimatePresence, null, isShown && /* @__PURE__ */ React.createElement(OverlayInner, {
    initial: { opacity: 0 },
    animate: { opacity: 1, transition: { delayChildren: 0.1, duration: 0.25 } },
    exit: { opacity: 0 },
    transition: { type: "tween" },
    onClick: (e2) => {
      if (e2.target !== e2.currentTarget || !shouldCloseOnClick) {
        return;
      }
      close();
    },
    ref: overlayRef,
    css: __spreadValues({
      $$zIndex: zIndex,
      zIndex,
      "> *": { zIndex: zIndex + 1 }
    }, containerCSS)
  }, typeof children === "function" ? children(close) : children))));
}
Overlay.defaultProps = {
  shouldCloseOnClick: true,
  shouldCloseOnEscapePress: true,
  onShow: noop,
  onHide: noop,
  preventBodyScroll: true,
  isShown: false,
  containerCSS: {}
};

// src/layout/Spacer.tsx
init_react_import();
var _Spacer = styled("div", {});
var Spacer = (props) => /* @__PURE__ */ React.createElement(_Spacer, __spreadProps(__spreadValues({}, props), {
  css: __spreadValues({ size: props.size }, props.css)
}));
Spacer.defaultProps = {
  size: "$1"
};

// src/layout/Stack.tsx
init_react_import();

// src/layout/StackBase.tsx
init_react_import();
var Stack2 = styled("div", {
  display: "flex",
  variants: {
    wrap: {
      true: {
        flexWrap: "wrap"
      },
      false: {
        flexWrap: "nowrap"
      }
    },
    space: {
      none: {
        gap: "initial"
      },
      extraSmall: {
        gap: "$space$1"
      },
      small: {
        gap: "$space$2"
      },
      medium: {
        gap: "$space$3"
      },
      large: {
        gap: "$space$5"
      },
      extraLarge: {
        gap: "$space$8"
      }
    },
    orientation: {
      horizontal: {
        flexDirection: "row"
      },
      vertical: {
        flexDirection: "column"
      }
    }
  },
  defaultVariants: {
    space: "medium"
  }
});

// src/layout/Stack.tsx
var VStack = styled("div", Stack2, {
  flexDirection: "column",
  variants: {
    reverse: {
      true: {
        flexDirection: "column-reverse"
      }
    },
    justify: {
      start: {
        justifyContent: "flex-start"
      },
      stretch: {
        justifyContent: "stretch"
      },
      between: {
        justifyContent: "space-between"
      },
      around: {
        justifyContent: "space-around"
      },
      evenly: {
        justifyContent: "space-evenly"
      },
      center: {
        justifyContent: "center"
      },
      end: {
        justifyContent: "flex-end"
      }
    },
    align: {
      start: {
        alignItems: "flex-start"
      },
      stretch: {
        alignItems: "stretch"
      },
      center: {
        alignItems: "center"
      },
      end: {
        alignItems: "flex-end"
      }
    }
  },
  defaultVariants: {
    align: "stretch",
    justify: "start"
  }
});
var HStack = styled("div", Stack2, {
  flexDirection: "row",
  variants: {
    reverse: {
      true: {
        flexDirection: "column-reverse"
      }
    },
    align: {
      start: {
        alignItems: "flex-start"
      },
      center: {
        alignItems: "center"
      },
      end: {
        alignItems: "flex-end"
      }
    },
    justify: {
      start: {
        justifyContent: "flex-start"
      },
      stretch: {
        justifyContent: "stretch"
      },
      between: {
        justifyContent: "space-between"
      },
      around: {
        justifyContent: "space-around"
      },
      evenly: {
        justifyContent: "space-evenly"
      },
      center: {
        justifyContent: "center"
      },
      end: {
        justifyContent: "flex-end"
      }
    }
  },
  defaultVariants: {
    align: "start"
  }
});

// src/spinner/Spinner.tsx
var spin = keyframes({
  "0%": {
    transform: "rotate(0)"
  },
  "100%": {
    transform: "rotate(360deg)"
  }
});
var offsetStroke = keyframes({
  "0%": {
    strokeDashoffset: "96"
  },
  "100%": {
    strokeDashoffset: 0
  }
});
var SpinnerContainer = styled("svg", {
  animation: `${spin} 2s linear infinite`
});
var SpinnerCircle = styled("circle", {
  strokeDashoffset: "96",
  strokeDasharray: 48,
  strokeWidth: "1.92px",
  strokeMiterlimit: 16,
  strokeLinecap: "round",
  animation: `${offsetStroke} 1.6s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite`,
  stroke: "currentColor",
  fill: "transparent"
});
function Spinner(_a2) {
  var _b = _a2, { size, color = "", css: css2 } = _b, props = __objRest(_b, ["size", "color", "css"]);
  return /* @__PURE__ */ React.createElement(Box, __spreadValues({
    css: __spreadValues({ lineHeight: 0, color, size }, css2)
  }, props), /* @__PURE__ */ React.createElement(SpinnerContainer, {
    x: "0px",
    y: "0px",
    viewBox: "0 0 24 24"
  }, /* @__PURE__ */ React.createElement(SpinnerCircle, {
    cx: "12",
    cy: "12",
    r: "9.6"
  })));
}
Spinner.defaultProps = {
  size: "$5"
};

// src/typography/Text.tsx
init_react_import();
import { forwardRef } from "react";

// src/typography/utils.ts
init_react_import();
function fontPxToNum(token) {
  return Number(theme.fontSizes[token].value.replace("px", ""));
}
function lineHeightPxToNum(token) {
  return Number(theme.lineHeights[token].value.replace("px", ""));
}

// src/typography/Text.tsx
var TextFactory = styled("span", {
  margin: 0,
  fontSize: "$root",
  fontFamily: "$sans",
  fontWeight: "$regular",
  capsize: {
    metrics: "Modern Era",
    lineGap: 0
  },
  variants: {
    size: {
      extraSmall: {
        capsize: {
          fontSize: fontPxToNum(1),
          lineGap: lineHeightPxToNum(1)
        }
      },
      footnote: {
        capsize: {
          fontSize: fontPxToNum(2),
          lineGap: lineHeightPxToNum(1)
        }
      },
      caption2: {
        capsize: {
          fontSize: fontPxToNum(2),
          lineGap: lineHeightPxToNum(1)
        }
      },
      caption1: {
        capsize: {
          fontSize: fontPxToNum(3),
          lineGap: lineHeightPxToNum(1)
        }
      },
      body: {
        capsize: {
          fontSize: fontPxToNum(4),
          lineGap: lineHeightPxToNum(1)
        }
      },
      large: {
        capsize: {
          fontSize: fontPxToNum(5),
          lineGap: lineHeightPxToNum(1)
        }
      }
    },
    lineClamp: {
      true: {
        ".truncate": {
          display: "block",
          overflow: "hidden",
          textOverflow: "ellipsis",
          whiteSpace: "nowrap"
        }
      }
    }
  },
  defaultVariants: {
    size: "body"
  }
});
var Text = forwardRef((_a2, forwardedRef) => {
  var _b = _a2, { title } = _b, props = __objRest(_b, ["title"]);
  const children = (props == null ? void 0 : props.lineClamp) ? /* @__PURE__ */ React.createElement("span", {
    className: "truncate"
  }, props.children) : props.children;
  if (props.lineClamp) {
    title || (title = props.children);
  }
  return /* @__PURE__ */ React.createElement(TextFactory, __spreadValues({
    ref: forwardedRef,
    title
  }, props), children);
});
Text.displayName = "Text";
Text.toString = TextFactory.toString;

// src/button/Button.tsx
var ButtonFactory = styled(motion2.button, {
  $$outlineColor: "$colors$hsl_primary",
  WebkitFontSmoothing: "antialiased",
  WebkitAppearance: "none",
  textDecoration: "none",
  border: "none",
  outline: "none",
  cursor: "pointer",
  transition: "225ms",
  borderRadius: "$1",
  fontFamily: "$sans",
  fontWeight: "$medium",
  userSelect: "none",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  width: "max-content",
  "&::-moz-focus-inner": {
    border: 0
  },
  "&[disabled]": {
    pointerEvents: "none"
  },
  a: {
    color: "inherit"
  },
  variants: {
    color: {
      primary: {
        backgroundColor: "$primary",
        color: "$onPrimary",
        "&:hover": {
          color: "$onPrimary"
        },
        "&:active": {
          boxShadow: `0 0 0 3px hsl($$outlineColor / 0.3)`
        },
        "&:focus": {
          boxShadow: `0 0 0 3px hsl($$outlineColor / 0.3)`
        }
      },
      secondary: {
        backgroundColor: "$secondary",
        color: "$onSecondary",
        "&:hover": {
          color: "$onSecondary"
        },
        "&:active": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_secondary / 0.3)`
        },
        "&:focus": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_secondary / 0.3)`
        }
      },
      tertiary: {
        backgroundColor: "$tertiary",
        color: "$onTertiary",
        "&:hover": {
          color: "$onTertiary"
        },
        "&:active": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_tertiary / 0.3)`
        },
        "&:focus": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_tertiary / 0.3)`
        }
      }
    },
    intent: {
      info: {},
      danger: {
        backgroundColor: "$danger",
        color: "$white",
        "&:active": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_danger / 0.3)`
        },
        "&:focus": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_danger / 0.3)`
        }
      },
      success: {
        backgroundColor: "$success",
        color: "$white",
        "&:active": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_success / 0.3)`
        },
        "&:focus": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_success / 0.3)`
        }
      },
      warning: {
        backgroundColor: "$warning",
        color: "$white",
        "&:active": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_warning / 0.3)`
        },
        "&:focus": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_warning / 0.3)`
        }
      }
    },
    size: {
      small: {
        height: "$buttonHeightSmall",
        paddingInline: "$3"
      },
      regular: {
        height: "$buttonHeightRegular",
        paddingInline: "$4"
      },
      large: {
        height: "$buttonHeightLarge",
        paddingInline: "$5"
      }
    },
    appearance: {
      outline: {
        backgroundColor: "transparent",
        boxShadow: `inset 0 0 0 1px hsl($$outlineColor)`,
        "&:active": {
          boxShadow: `inset 0 0 0 1px hsl($$outlineColor), 0 0 0 3px hsl($$outlineColor / 0.3)`
        },
        "&:focus": {
          boxShadow: `inset 0 0 0 1px hsl($$outlineColor), 0 0 0 3px hsl($$outlineColor / 0.3)`
        }
      },
      minimal: {
        color: "$primary",
        backgroundColor: "$background",
        "&:hover": {
          backgroundColor: "$gray4",
          color: "$primary"
        },
        "&:active": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_primary / 0.3)`
        },
        "&:focus": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_primary / 0.3)`
        }
      },
      overlay: {
        color: "$label",
        backgroundColor: "hsl($hsl_gray5 / 0.6)",
        backdropFilter: "blur(15px) saturate(180%)",
        "&:hover": {
          color: "$label",
          backgroundColor: "hsl($hsl_gray5 / 0.8)"
        },
        "&:active": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_primary / 0.3)`
        },
        "&:focus": {
          boxShadow: `0 0 0 3px hsl($colors$hsl_primary / 0.3)`
        }
      }
    },
    round: {
      true: {
        borderRadius: "$round"
      }
    },
    icon: { true: {} },
    split: { true: {} },
    loading: {
      true: {
        pointerEvents: "none",
        color: "$gray1",
        backgroundColor: "$gray5",
        backgroundImage: "none",
        boxShadow: "none",
        cursor: "progress",
        "> div": {
          height: "auto"
        }
      }
    },
    isPressed: {
      true: {
        scale: 0.95
      }
    },
    isDisabled: {
      true: {
        color: "$gray1",
        backgroundColor: "$gray5",
        backgroundImage: "none",
        boxShadow: "none",
        cursor: "not-allowed"
      }
    },
    wide: {
      true: {
        width: "100%"
      }
    },
    labelOffset: {
      true: { marginTop: "calc($3 + 4px)" }
    }
  },
  compoundVariants: [
    {
      appearance: "outline",
      color: "primary",
      css: {
        $$outlineColor: "$colors$hsl_primary",
        backgroundColor: "transparent",
        color: "$primary",
        "&:hover": { color: "$onPrimary", backgroundColor: "$primary" }
      }
    },
    {
      appearance: "outline",
      color: "secondary",
      css: {
        $$outlineColor: "$colors$hsl_secondary",
        backgroundColor: "transparent",
        color: "$secondary",
        "&:hover": { color: "$onSecondary", backgroundColor: "$secondary" }
      }
    },
    {
      appearance: "outline",
      color: "tertiary",
      css: {
        $$outlineColor: "$colors$hsl_tertiary",
        backgroundColor: "transparent",
        color: "$tertiary",
        outlineColor: "$tertiary",
        "&:hover": { color: "$onTertiary", backgroundColor: "$tertiary" }
      }
    },
    {
      appearance: "outline",
      intent: "success",
      css: {
        $$outlineColor: "$colors$hsl_success",
        color: "$success",
        backgroundColor: "transparent",
        "&:hover": { color: "$white", backgroundColor: "$success" }
      }
    },
    {
      appearance: "outline",
      intent: "warning",
      css: {
        $$outlineColor: "$colors$hsl_warning",
        color: "$warning",
        backgroundColor: "transparent",
        "&:hover": { color: "$white", backgroundColor: "$warning" }
      }
    },
    {
      appearance: "outline",
      intent: "danger",
      css: {
        $$outlineColor: "$colors$hsl_danger",
        color: "$danger",
        backgroundColor: "transparent",
        "&:hover": { color: "$white", backgroundColor: "$danger" }
      }
    },
    {
      appearance: "outline",
      isDisabled: true,
      css: {
        pointerEvents: "none",
        color: "$gray1",
        backgroundImage: "none",
        boxShadow: "none",
        cursor: "not-allowed",
        outlineColor: "$gray3"
      }
    },
    {
      split: true,
      color: "primary",
      css: { backgroundColor: "$primarySplit" }
    },
    {
      split: true,
      color: "secondary",
      css: { backgroundColor: "$secondarySplit" }
    },
    {
      split: true,
      color: "tertiary",
      css: { backgroundColor: "$tertiarySplit" }
    },
    {
      icon: true,
      size: "small",
      css: { size: "$6" }
    },
    {
      icon: true,
      size: "regular",
      css: { size: "$8" }
    },
    {
      icon: true,
      size: "large",
      css: { size: "$10" }
    },
    {
      appearance: "minimal",
      color: "primary",
      css: { backgroundColor: "transparent", "&, &:hover": { color: "$primary" } }
    },
    {
      appearance: "minimal",
      color: "secondary",
      css: { backgroundColor: "transparent", "&, &:hover": { color: "$secondary" } }
    },
    {
      appearance: "minimal",
      color: "tertiary",
      css: { backgroundColor: "transparent", "&, &:hover": { color: "$tertiary" } }
    },
    {
      appearance: "minimal",
      intent: "success",
      css: { backgroundColor: "transparent", color: "$success", "&:hover": { color: "$success" } }
    },
    {
      appearance: "minimal",
      intent: "warning",
      css: { backgroundColor: "transparent", color: "$warning", "&:hover": { color: "$warning" } }
    },
    {
      appearance: "minimal",
      intent: "danger",
      css: { backgroundColor: "transparent", color: "$danger", "&:hover": { color: "$danger" } }
    }
  ]
});
var iconSizes = {
  small: "$2",
  regular: "$3",
  large: "$3"
};
var spinnerSizes = {
  small: "$3",
  regular: "$4",
  large: "$4"
};
var textSizes = {
  small: 2,
  regular: 3,
  large: 4
};
var Button = forwardRef2((_a2, forwardedRef) => {
  var _b = _a2, { loadingLabel = "Loading...", children, disabled, onClick, onPress = onClick } = _b, props = __objRest(_b, ["loadingLabel", "children", "disabled", "onClick", "onPress"]);
  const ref = useRef2();
  const { buttonProps, isPressed } = useButton(__spreadValues({ onPress, isDisabled: disabled }, props), ref);
  let { iconBefore: IconBefore } = props;
  let { iconAfter: IconAfter } = props;
  const { icon: Icon3 } = props;
  let iconSize2 = iconSizes[props.size];
  if (props.loading) {
    IconBefore = Spinner;
    children = loadingLabel ? loadingLabel : children;
    props.color = void 0;
    iconSize2 = spinnerSizes[props.size];
  }
  if (props.intent) {
    delete props.color;
  }
  if (Icon3) {
    IconBefore = null;
    IconAfter = null;
    props.css = Object.assign({}, props.css, { padding: "$2 $1" });
  }
  return /* @__PURE__ */ React.createElement(ButtonFactory, __spreadProps(__spreadValues({}, mergeProps(props, buttonProps)), {
    icon: !!Icon3,
    isDisabled: buttonProps.disabled,
    isPressed,
    ref: mergeRefs(forwardedRef, ref),
    whileTap: { scale: 0.9999999999 }
  }), typeof IconBefore === "function" ? /* @__PURE__ */ React.createElement(IconBefore, {
    size: iconSize2,
    css: { marginLeft: "-$1", marginRight: "$2" }
  }) : IconBefore || null, Icon3 ? typeof Icon3 === "function" ? /* @__PURE__ */ React.createElement(Icon3, {
    size: iconSize2,
    css: { marginLeft: "$1", marginRight: "$1" }
  }) : Icon3 : /* @__PURE__ */ React.createElement(Text, {
    css: { fontWeight: "$medium", capsize: { fontSize: fontPxToNum(textSizes[props.size]) } }
  }, children), typeof IconAfter === "function" ? /* @__PURE__ */ React.createElement(IconAfter, {
    size: iconSize2,
    css: { marginLeft: "$2", marginRight: "-$1" }
  }) : IconAfter || null);
});
Button.toString = ButtonFactory.toString;
Button.displayName = "Button";
Button.defaultProps = {
  type: "button",
  color: "primary",
  size: "regular"
};

// src/button/SplitButton.tsx
init_react_import();
import { forwardRef as forwardRef5 } from "react";

// src/icon/Icon.tsx
init_react_import();
import { merge } from "lodash-es";
import { useMemo } from "react";
var IconFactory = styled("svg", {
  fill: "currentcolor",
  strokeColor: "currentColor",
  variants: {
    multicolored: { false: { path: { fill: "currentColor" } } }
  }
});
var DEFAULT_COLORS = ["$gray4", "$gray3", "$gray2"];
function Icon(_a2) {
  var _b = _a2, { name, children, multicolored, css: passthroughCSS, size = "$5" } = _b, props = __objRest(_b, ["name", "children", "multicolored", "css", "size"]);
  const defaultColors = props["data-default-colors"] ? props["data-default-colors"].split(",").map((color, i) => !color ? DEFAULT_COLORS[i] : color) : DEFAULT_COLORS;
  const iconColors = useMemo(() => {
    let colorArray;
    if (multicolored === true) {
      colorArray = defaultColors;
    } else if (Array.isArray(multicolored)) {
      colorArray = merge(defaultColors, multicolored);
    } else {
      colorArray = null;
    }
    if (Array.isArray(colorArray)) {
      return colorArray.reduce((obj, color, index2) => __spreadProps(__spreadValues({}, obj), {
        [`--icon-color-${index2 + 1}`]: color.includes("$") ? "$colors" + color : color
      }), {});
    }
  }, [multicolored]);
  return /* @__PURE__ */ React.createElement(IconFactory, __spreadValues({
    "data-icon": name,
    css: __spreadValues(__spreadValues({ width: size }, iconColors), passthroughCSS)
  }, props), name ? /* @__PURE__ */ React.createElement("title", null, name) : null, children);
}

// src/icon/generated/index.tsx
init_react_import();

// src/icon/generated/AddCircle.tsx
init_react_import();
function AddCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    id: "add-circle_svg__Layer_1",
    "data-name": "Layer 1",
    viewBox: "0 0 1024 1024"
  }, props), /* @__PURE__ */ React.createElement("defs", null, /* @__PURE__ */ React.createElement("style", null)), /* @__PURE__ */ React.createElement("path", {
    d: "M-1851.13 322.23a485.48 485.48 0 00-104.45-154.93 485.6 485.6 0 00-155-104.49 484.31 484.31 0 00-189.71-38.31A484.35 484.35 0 00-2490 62.81a485.12 485.12 0 00-155 104.49 485.92 485.92 0 00-104.49 154.93A484.51 484.51 0 00-2787.8 512a484.7 484.7 0 0038.32 189.78A486.21 486.21 0 00-2645 856.71a484.84 484.84 0 00155 104.45 484.39 484.39 0 00189.74 38.36 484.36 484.36 0 00189.74-38.36 485.32 485.32 0 00155-104.45 485.77 485.77 0 00104.45-154.92A484 484 0 00-1812.78 512a483.83 483.83 0 00-38.35-189.78m-69.08 350.33a410.64 410.64 0 01-88.41 131.12 411.1 411.1 0 01-131.15 88.45 410.46 410.46 0 01-160.52 32.38 410.61 410.61 0 01-160.55-32.38A411.41 411.41 0 01-2592 803.68a409.8 409.8 0 01-88.4-131.12A409.72 409.72 0 01-2712.79 512a409.66 409.66 0 0132.43-160.56A410.37 410.37 0 01-2592 220.3a411.3 411.3 0 01131.12-88.41 409.89 409.89 0 01160.55-32.38 409.75 409.75 0 01160.52 32.38 411 411 0 01131.15 88.41 411.21 411.21 0 0188.41 131.15A409.83 409.83 0 01-1887.79 512a409.89 409.89 0 01-32.42 160.55M-2113 474.5h-149.8V324.7a37.5 37.5 0 00-37.5-37.51 37.53 37.53 0 00-37.51 37.51v149.8h-149.76a37.5 37.5 0 00-37.5 37.5 37.5 37.5 0 0037.5 37.51h149.76v149.8a37.49 37.49 0 0037.51 37.46 37.47 37.47 0 0037.5-37.46v-149.8h149.8a37.53 37.53 0 0037.5-37.51 37.53 37.53 0 00-37.5-37.5",
    transform: "translate(2806.65)",
    fillRule: "evenodd"
  }));
}
AddCircleIcon.toString = () => "elephantkit-AddCircleIcon";

// src/icon/generated/AddSmall.tsx
init_react_import();
function AddSmallIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 1024 1024"
  }, props), /* @__PURE__ */ React.createElement("style", null), /* @__PURE__ */ React.createElement("path", {
    d: "M699.3 474.5H549.5V324.7c0-20.7-16.8-37.5-37.5-37.5s-37.5 16.8-37.5 37.5v149.8H324.7c-20.7 0-37.5 16.8-37.5 37.5s16.8 37.5 37.5 37.5h149.8v149.8c0 20.7 16.8 37.5 37.5 37.5s37.5-16.8 37.5-37.5V549.5h149.8c20.7 0 37.5-16.8 37.5-37.5s-16.8-37.5-37.5-37.5z"
  }));
}
AddSmallIcon.toString = () => "elephantkit-AddSmallIcon";

// src/icon/generated/Add.tsx
init_react_import();
function AddIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 12h22.5M12 .75v22.5"
  }));
}
AddIcon.toString = () => "elephantkit-AddIcon";

// src/icon/generated/AlarmBellCheck.tsx
init_react_import();
function AlarmBellCheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 6.75,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M15.129 7.5l1.5 1.5 3.75-3.75M17.505 15.862a7.369 7.369 0 001.245 2.888h-18s1.5-2.329 1.5-8.25A7.5 7.5 0 019.75 3V.75M7.748 21.75a2.087 2.087 0 004.005 0"
  }));
}
AlarmBellCheckIcon.toString = () => "elephantkit-AlarmBellCheckIcon";

// src/icon/generated/AlarmBellDisable.tsx
init_react_import();
function AlarmBellDisableIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 6.75,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M15.375 8.625l3.75-3.75M19.125 8.625l-3.75-3.75M7.748 21.75a2.087 2.087 0 004.005 0M17.505 15.862a7.369 7.369 0 001.245 2.888h-18s1.5-2.329 1.5-8.25A7.5 7.5 0 019.75 3V.75"
  }));
}
AlarmBellDisableIcon.toString = () => "elephantkit-AlarmBellDisableIcon";

// src/icon/generated/AlarmBellOff.tsx
init_react_import();
function AlarmBellOffIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M22.501 2.25l-21 21M10 21.75a2.087 2.087 0 004.005 0M12.001 3V.75M10.5 18.75H21s-1.5-1.2-1.5-8.25a7.271 7.271 0 00-.093-.915M16.212 4.3A7.5 7.5 0 004.5 10.5v5.25"
  }));
}
AlarmBellOffIcon.toString = () => "elephantkit-AlarmBellOffIcon";

// src/icon/generated/AlarmBell.tsx
init_react_import();
function AlarmBellIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M10 21.75a2.087 2.087 0 004.005 0M12 3V.75M12 3a7.5 7.5 0 017.5 7.5c0 7.046 1.5 8.25 1.5 8.25H3s1.5-1.916 1.5-8.25A7.5 7.5 0 0112 3z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
AlarmBellIcon.toString = () => "elephantkit-AlarmBellIcon";

// src/icon/generated/AlertCircleBold.tsx
init_react_import();
function AlertCircleBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z"
  }));
}
AlertCircleBoldIcon.toString = () => "elephantkit-AlertCircleBoldIcon";

// src/icon/generated/AlertCircle.tsx
init_react_import();
function AlertCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 16.5a.375.375 0 10.375.375A.375.375 0 0012 16.5h0",
    strokeLinejoin: "round",
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    strokeMiterlimit: 10,
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5,
    d: "M12 13.5V5.25"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    strokeMiterlimit: 10,
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5
  }));
}
AlertCircleIcon.toString = () => "elephantkit-AlertCircleIcon";

// src/icon/generated/AlertDiamond.tsx
init_react_import();
function AlertDiamondIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 16.5a.375.375 0 10.375.375A.375.375 0 0012 16.5h0",
    strokeLinejoin: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    strokeMiterlimit: 10,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeWidth: 1.5,
    d: "M12 13.5V6"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M1.28 13.281a1.812 1.812 0 010-2.561l9.44-9.439a1.808 1.808 0 012.56 0l9.44 9.439a1.812 1.812 0 010 2.561l-9.44 9.439a1.811 1.811 0 01-2.56 0z",
    strokeLinejoin: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeWidth: 1.5
  }));
}
AlertDiamondIcon.toString = () => "elephantkit-AlertDiamondIcon";

// src/icon/generated/AlertTriangleBold.tsx
init_react_import();
function AlertTriangleBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.119 20L13.772 2.15a2 2 0 00-3.543 0L.881 20a2 2 0 001.772 2.928h18.694A2 2 0 0023.119 20zM11 8.423a1 1 0 012 0v6a1 1 0 11-2 0zm1.05 11.51h-.028a1.528 1.528 0 01-1.522-1.47 1.476 1.476 0 011.448-1.53h.028A1.527 1.527 0 0113.5 18.4a1.475 1.475 0 01-1.45 1.533z"
  }));
}
AlertTriangleBoldIcon.toString = () => "elephantkit-AlertTriangleBoldIcon";

// src/icon/generated/AlertTriangle.tsx
init_react_import();
function AlertTriangleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 18.75a.375.375 0 10.375.375.375.375 0 00-.375-.375h0",
    strokeLinejoin: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    strokeMiterlimit: 10,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeWidth: 1.5,
    d: "M12 15.75v-7.5"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M13.621 1.76a1.806 1.806 0 00-3.242 0L.906 21.058a1.521 1.521 0 001.366 2.192h19.456a1.521 1.521 0 001.366-2.192z",
    strokeLinejoin: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeWidth: 1.5
  }));
}
AlertTriangleIcon.toString = () => "elephantkit-AlertTriangleIcon";

// src/icon/generated/AlignBottom.tsx
init_react_import();
function AlignBottomIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: -3.009,
    y: 7.491,
    width: 19.5,
    height: 6.018,
    rx: 1,
    ry: 1,
    transform: "rotate(-90 6.741 10.5)",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 11.634,
    y: 11.616,
    width: 11.25,
    height: 6.018,
    rx: 1,
    ry: 1,
    transform: "rotate(-90 17.259 14.625)",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25 23.25H.75"
  }));
}
AlignBottomIcon.toString = () => "elephantkit-AlignBottomIcon";

// src/icon/generated/AlignCenter.tsx
init_react_import();
function AlignCenterIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 20.25v3M12 9.75v4.5M12 .75v3"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 2.25,
    y: 14.25,
    width: 19.5,
    height: 6,
    rx: 1,
    ry: 1,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 5.25,
    y: 3.75,
    width: 13.5,
    height: 6,
    rx: 1,
    ry: 1,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
AlignCenterIcon.toString = () => "elephantkit-AlignCenterIcon";

// src/icon/generated/AlignLeft.tsx
init_react_import();
function AlignLeftIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 3.75,
    y: 14.25,
    width: 19.5,
    height: 6.018,
    rx: 1,
    ry: 1,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 3.75,
    y: 3.732,
    width: 11.25,
    height: 6.018,
    rx: 1,
    ry: 1,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75.75v22.5"
  }));
}
AlignLeftIcon.toString = () => "elephantkit-AlignLeftIcon";

// src/icon/generated/AlignMiddle.tsx
init_react_import();
function AlignMiddleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M3.75 12h-3M14.25 12h-4.5M23.25 12h-3"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: -3,
    y: 9,
    width: 19.5,
    height: 6,
    rx: 1,
    ry: 1,
    transform: "rotate(90 6.75 12)",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 10.5,
    y: 9,
    width: 13.5,
    height: 6,
    rx: 1,
    ry: 1,
    transform: "rotate(90 17.25 12)",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
AlignMiddleIcon.toString = () => "elephantkit-AlignMiddleIcon";

// src/icon/generated/AlignRight.tsx
init_react_import();
function AlignRightIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 14.25,
    width: 19.5,
    height: 6.018,
    rx: 1,
    ry: 1,
    transform: "rotate(-180 10.5 17.259)",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 9,
    y: 3.732,
    width: 11.25,
    height: 6.018,
    rx: 1,
    ry: 1,
    transform: "rotate(-180 14.625 6.741)",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25.75v22.5"
  }));
}
AlignRightIcon.toString = () => "elephantkit-AlignRightIcon";

// src/icon/generated/AlignTop.tsx
init_react_import();
function AlignTopIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: -3.009,
    y: 10.491,
    width: 19.5,
    height: 6.018,
    rx: 1,
    ry: 1,
    transform: "rotate(90 6.741 13.5)",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 11.634,
    y: 6.366,
    width: 11.25,
    height: 6.018,
    rx: 1,
    ry: 1,
    transform: "rotate(90 17.259 9.375)",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25.75H.75"
  }));
}
AlignTopIcon.toString = () => "elephantkit-AlignTopIcon";

// src/icon/generated/AnalyticsBars.tsx
init_react_import();
function AnalyticsBarsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 21.75h22.5M6 11.25H3a.75.75 0 00-.75.75v9.75h4.5V12a.75.75 0 00-.75-.75zM13.5 2.25h-3a.75.75 0 00-.75.75v18.75h4.5V3a.75.75 0 00-.75-.75zM21 6.75h-3a.75.75 0 00-.75.75v14.25h4.5V7.5a.75.75 0 00-.75-.75z"
  }));
}
AnalyticsBarsIcon.toString = () => "elephantkit-AnalyticsBarsIcon";

// src/icon/generated/AnalyticsBoard.tsx
init_react_import();
function AnalyticsBoardIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 3.75,
    width: 22.5,
    height: 16.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M3.75 15L6.9 9.75 9.75 15l3-3 3 3 4.5-6.75"
  }));
}
AnalyticsBoardIcon.toString = () => "elephantkit-AnalyticsBoardIcon";

// src/icon/generated/AngelHead.tsx
init_react_import();
function AngelHeadIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("ellipse", {
    cx: 12.263,
    cy: 3.375,
    rx: 9,
    ry: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M14.513 15.449a1.633 1.633 0 012.25 0M10.013 15.449a1.633 1.633 0 00-2.25 0M19.726 12.75c-9.161 0-9.713-3.068-9.713-3.068-1.018 3.068-4.5 3.068-4.5 3.068H4.8M14.063 18.922a2.537 2.537 0 01-3.6 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.619 8.25a7.475 7.475 0 012.144 5.25v2.25a7.5 7.5 0 01-15 0V13.5a7.475 7.475 0 012.144-5.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
AngelHeadIcon.toString = () => "elephantkit-AngelHeadIcon";

// src/icon/generated/Angel.tsx
init_react_import();
function AngelIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("ellipse", {
    cx: 12.001,
    cy: 2.25,
    rx: 4.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12.001,
    cy: 10.5,
    r: 3.75,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M9 12.75l-3.035 8.5a1.5 1.5 0 001.413 2h9.243a1.5 1.5 0 001.413-2L15 12.75M15 12.75l7.1-4.35a.75.75 0 011.142.756c-.342 1.685-.377 5.8-3.96 6.756M9 12.75L1.9 8.4a.75.75 0 00-1.142.756c.342 1.685.377 5.8 3.96 6.756",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
AngelIcon.toString = () => "elephantkit-AngelIcon";

// src/icon/generated/AngleBrackets.tsx
init_react_import();
function AngleBracketsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M7.629 4.5l-6.44 6.439a1.5 1.5 0 000 2.121l6.44 6.44M16.371 4.5l6.44 6.439a1.5 1.5 0 010 2.121l-6.44 6.44",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
AngleBracketsIcon.toString = () => "elephantkit-AngleBracketsIcon";

// src/icon/generated/AppStore.tsx
init_react_import();
function AppStoreIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M11.68 9a.52.52 0 00-.19-.71l-1.36-.78a.52.52 0 00-.71.19l-5.2 9.07a.52.52 0 00.19.71l1.36.78a.52.52 0 00.71-.19zM3.17 19.61a.28.28 0 00-.44.22l-.2 1.78c0 .25.12.34.32.2l1.52-1a.26.26 0 000-.48l-1.18-.68M20.23 16.74c-.41-.74-7.32-16-8.8-15s6.4 16 7 16.3a1 1 0 001.11 0c.37-.2 1.02-.7.69-1.3zM20.92 20.51c-.33.25-.41.51-.09 1s1.08.56 1.18.86c0 0 .34-2.72-1.09-1.82M10.81 14.62h3.09M4.88 10.7H.75v3.92H3.2M21.46 14.62h1.79V10.7h-3.57",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
AppStoreIcon.toString = () => "elephantkit-AppStoreIcon";

// src/icon/generated/AppWindowError404.tsx
init_react_import();
function AppWindowError404Icon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 1.51,
    y: 2.253,
    width: 21,
    height: 19.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M1.51 6.753h21M7.51 15.753h-3v-1.5a3 3 0 013-3v6M19.51 15.753h-3v-1.5a3 3 0 013-3v6M13.51 15.753a1.5 1.5 0 01-3 0v-3a1.5 1.5 0 013 0z"
  }));
}
AppWindowError404Icon.toString = () => "elephantkit-AppWindowError404Icon";

// src/icon/generated/Apple.tsx
init_react_import();
function AppleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M17.36 14a4.45 4.45 0 012.12-3.74 4.6 4.6 0 00-3.59-1.95c-1.53-.15-3 .9-3.76.9s-2-.88-3.24-.86a4.81 4.81 0 00-4.07 2.46c-1.73 3-.44 7.46 1.25 9.9.82 1.19 1.81 2.53 3.1 2.48s1.72-.8 3.22-.8 1.93.8 3.24.78 2.19-1.22 3-2.41A10.82 10.82 0 0020 18a4.34 4.34 0 01-2.64-4zM15.31 4.36A5 5 0 0016.48.77a5 5 0 00-3.31 1.7A4.72 4.72 0 0012 6a4.18 4.18 0 003.31-1.64z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
AppleIcon.toString = () => "elephantkit-AppleIcon";

// src/icon/generated/Archive.tsx
init_react_import();
function ArchiveIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M21.75 9.75v9a3 3 0 01-3 3H5.25a3 3 0 01-3-3v-9M21.75 2.25H2.25a1.5 1.5 0 00-1.5 1.5v3h22.5v-3a1.5 1.5 0 00-1.5-1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15 11.25a1.5 1.5 0 01-1.5 1.5h-3a1.5 1.5 0 010-3h3a1.5 1.5 0 011.5 1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ArchiveIcon.toString = () => "elephantkit-ArchiveIcon";

// src/icon/generated/ArrowDown.tsx
init_react_import();
function ArrowDownIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 .75v22.5M1.5 12.75L12 23.25l10.5-10.5"
  }));
}
ArrowDownIcon.toString = () => "elephantkit-ArrowDownIcon";

// src/icon/generated/ArrowLeftEnd.tsx
init_react_import();
function ArrowLeftEndIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M20.038.53c.35.34.547.801.547 1.282 0 .48-.197.942-.547 1.281L10.874 12l9.164 8.908c.35.34.546.8.546 1.28 0 .994-.841 1.812-1.864 1.812-.494 0-.969-.191-1.318-.531L6.92 13.28a1.784 1.784 0 010-2.562L17.403.53a1.913 1.913 0 012.635 0zM3.06 0c1.13 0 2.06.903 2.06 2.001v19.997C5.12 23.096 4.19 24 3.06 24S1 23.096 1 21.998V2.002C1 .904 1.93 0 3.06 0z"
  }));
}
ArrowLeftEndIcon.toString = () => "elephantkit-ArrowLeftEndIcon";

// src/icon/generated/ArrowLeft.tsx
init_react_import();
function ArrowLeftIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25 12H.75M11.25 1.5L.75 12l10.5 10.5"
  }));
}
ArrowLeftIcon.toString = () => "elephantkit-ArrowLeftIcon";

// src/icon/generated/ArrowRightEnd.tsx
init_react_import();
function ArrowRightEndIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M3.962.53c-.35.34-.547.801-.547 1.282 0 .48.197.942.547 1.281L13.126 12l-9.164 8.908c-.35.34-.546.8-.546 1.28 0 .994.841 1.812 1.864 1.812.494 0 .969-.191 1.318-.531L17.08 13.28a1.784 1.784 0 000-2.562L6.597.53a1.913 1.913 0 00-2.635 0zM20.94 0c-1.13 0-2.06.903-2.06 2.001v19.997c0 1.098.93 2.002 2.06 2.002S23 23.096 23 21.998V2.002C23 .904 22.07 0 20.94 0z"
  }));
}
ArrowRightEndIcon.toString = () => "elephantkit-ArrowRightEndIcon";

// src/icon/generated/ArrowRight.tsx
init_react_import();
function ArrowRightIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 12h22.5M12.75 22.5L23.25 12 12.75 1.5"
  }));
}
ArrowRightIcon.toString = () => "elephantkit-ArrowRightIcon";

// src/icon/generated/ArrowUp.tsx
init_react_import();
function ArrowUpIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 23.25V.75M22.5 11.25L12 .75 1.5 11.25"
  }));
}
ArrowUpIcon.toString = () => "elephantkit-ArrowUpIcon";

// src/icon/generated/At.tsx
init_react_import();
function AtIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 12A5.25 5.25 0 1112 6.75 5.25 5.25 0 0117.25 12z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 12v2.25a3 3 0 006 0V12a11.249 11.249 0 10-4.5 9",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
AtIcon.toString = () => "elephantkit-AtIcon";

// src/icon/generated/Attachment.tsx
init_react_import();
function AttachmentIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18.75 15.749V7.5a6.75 6.75 0 00-13.5 0v11.25a4.5 4.5 0 009 0V7.5a2.25 2.25 0 10-4.5 0v9.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
AttachmentIcon.toString = () => "elephantkit-AttachmentIcon";

// src/icon/generated/BabyHeart.tsx
init_react_import();
function BabyHeartIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M9 10.5a1.875 1.875 0 01-3 0M11.25 22.468a8.067 8.067 0 01-3.475.782A7.028 7.028 0 01.75 16.435V7.5M.75 15l7.364 4.295M17.25 23.25l-5.114-5.335a3.023 3.023 0 01-.566-3.492h0a3.025 3.025 0 014.845-.786l.835.835.835-.835a3.026 3.026 0 014.846.786h0a3.025 3.025 0 01-.567 3.492z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M8.25 14.209a6.869 6.869 0 01-.75.041 6.743 6.743 0 116.366-4.5M8.652 6a1.5 1.5 0 012.6 0M3.75 6a1.5 1.5 0 012.6 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
BabyHeartIcon.toString = () => "elephantkit-BabyHeartIcon";

// src/icon/generated/BabyWater.tsx
init_react_import();
function BabyWaterIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M9 10.5a1.875 1.875 0 01-3 0M11.25 22.468a8.066 8.066 0 01-3.475.782C4 23.25.864 20.208.75 16.435V7.5M.75 15l7.364 4.295",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M8.25 14.209a6.953 6.953 0 01-.75.041C3.804 14.246.764 11.203.764 7.507.764 3.808 3.808.764 7.507.764c3.699 0 6.743 3.044 6.743 6.743 0 .764-.13 1.522-.384 2.243",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M8.652 6a1.502 1.502 0 011.3-.752c.536 0 1.033.288 1.3.752M3.75 6a1.502 1.502 0 011.3-.752c.536 0 1.033.288 1.3.752M21.826 18.596c0 2.47-2.031 4.5-4.5 4.5s-4.5-2.03-4.5-4.5c0-3 3.75-8.25 4.5-8.25s4.5 5.25 4.5 8.25zM17.326 20.096c-.823 0-1.5-.677-1.5-1.5",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5
  }));
}
BabyWaterIcon.toString = () => "elephantkit-BabyWaterIcon";

// src/icon/generated/Baby.tsx
init_react_import();
function BabyIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M20.625 9.875h-.014c-.361-4.55-4.553-7.55-8.611-7.55s-8.25 3-8.611 7.55h-.014a2.625 2.625 0 000 5.25h.014a9 9 0 0017.222 0h.014a2.625 2.625 0 000-5.25zM12 2.325a2.25 2.25 0 11-2.122 3M13.984 17a3 3 0 01-3.968 0M17.25 11a1.5 1.5 0 01-3 0M9.75 11a1.5 1.5 0 01-3 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
BabyIcon.toString = () => "elephantkit-BabyIcon";

// src/icon/generated/BatteryCharge.tsx
init_react_import();
function BatteryChargeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M6.75 3h-4.5a1.5 1.5 0 00-1.5 1.5v9a1.5 1.5 0 001.5 1.5h4.5M15.75 3h3a1.5 1.5 0 011.5 1.5V6h1.5a1.5 1.5 0 011.5 1.5v3a1.5 1.5 0 01-1.5 1.5h-1.5v1.5a1.5 1.5 0 01-1.5 1.5h-3M11.25 13.5h0a3 3 0 01-3-3V9a1.5 1.5 0 011.5-1.5h3a1.5 1.5 0 011.5 1.5v1.5a3 3 0 01-3 3zM9.75 7.5v-3M12.75 7.5v-3M11.25 13.5V21",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
BatteryChargeIcon.toString = () => "elephantkit-BatteryChargeIcon";

// src/icon/generated/Bible.tsx
init_react_import();
function BibleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M21.263 23.25H5.513A2.25 2.25 0 013.263 21M6.263.75a3 3 0 00-3 3V21a2.25 2.25 0 012.25-2.25h15.75v-18zM19.763 23.25v-4.5M9.263 8.25h6M12.263 5.25v9",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
BibleIcon.toString = () => "elephantkit-BibleIcon";

// src/icon/generated/Birthday.tsx
init_react_import();
function BirthdayIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M1.473 23.25h21"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 2.973,
    y: 9.75,
    width: 18,
    height: 10.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M11.973 7.5v2.25M13.473 3a1.5 1.5 0 01-3 0c0-.828 1.5-2.25 1.5-2.25s1.5 1.422 1.5 2.25zM17.973 7.5v2.25M19.473 3a1.5 1.5 0 01-3 0c0-.828 1.5-2.25 1.5-2.25s1.5 1.422 1.5 2.25zM5.973 7.5v2.25M7.473 3a1.5 1.5 0 01-3 0c0-.828 1.5-2.25 1.5-2.25s1.5 1.422 1.5 2.25zM2.973 13.125a2.622 2.622 0 004.5 1.833 2.61 2.61 0 004.125-.5 2.605 2.605 0 004.5 0 2.618 2.618 0 004.875-1.333"
  }));
}
BirthdayIcon.toString = () => "elephantkit-BirthdayIcon";

// src/icon/generated/Bishop.tsx
init_react_import();
function BishopIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M19.035 23.25a9.749 9.749 0 00-14.07 0M17.25 11.25s1.5 0 1.5-2.25C18.75 5.25 12 .75 12 .75S5.25 5.25 5.25 9c0 2.25 1.5 2.25 1.5 2.25zM6.8 13.5a5.25 5.25 0 0010.392 0M12 5.25V9M10.5 6.75h3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
BishopIcon.toString = () => "elephantkit-BishopIcon";

// src/icon/generated/Bluetooth.tsx
init_react_import();
function BluetoothIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M5.617 18l12.75-12-6.75-5.25v22.5l6.75-5.25L5.617 6.75"
  }));
}
BluetoothIcon.toString = () => "elephantkit-BluetoothIcon";

// src/icon/generated/Boat.tsx
init_react_import();
function BoatIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M3.75.75h16.5M3.75 3.75h12M12.76 16.851L9.648 8.406M7.871 12.258l5.63-2.074M20.569 18.75a13.909 13.909 0 00.665-3.913.756.756 0 00-1.017-.733L7.606 18.75M.75 23.25a4.666 4.666 0 003.75-1.9 4.649 4.649 0 007.5 0 4.649 4.649 0 007.5 0 4.666 4.666 0 003.75 1.9"
  }));
}
BoatIcon.toString = () => "elephantkit-BoatIcon";

// src/icon/generated/BookOpen.tsx
init_react_import();
function BookOpenIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M13 22.906a16.989 16.989 0 018.856-3.89 1.6 1.6 0 001.391-1.587V2.365a1.613 1.613 0 00-1.835-1.6A17.077 17.077 0 0013 4.6a1.636 1.636 0 01-2 0A17.077 17.077 0 002.585.767 1.613 1.613 0 00.75 2.365v15.064a1.6 1.6 0 001.391 1.587A16.989 16.989 0 0111 22.906a1.633 1.633 0 002 0zM12 4.938v18.311",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
BookOpenIcon.toString = () => "elephantkit-BookOpenIcon";

// src/icon/generated/Book.tsx
init_react_import();
function BookIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M21 23.25H5.25A2.25 2.25 0 013 21M6 .75a3 3 0 00-3 3V21a2.25 2.25 0 012.25-2.25h15A.75.75 0 0021 18V1.5a.75.75 0 00-.75-.75zM19.5 23.25v-4.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
BookIcon.toString = () => "elephantkit-BookIcon";

// src/icon/generated/Bookmark.tsx
init_react_import();
function BookmarkIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18.32 22.767L12 18.343l-6.32 4.424a.75.75 0 01-1.18-.614V2.593a1.5 1.5 0 011.5-1.5h12a1.5 1.5 0 011.5 1.5v19.56a.75.75 0 01-1.18.614zM9 1.094v19.349M15 1.094v19.349",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
BookmarkIcon.toString = () => "elephantkit-BookmarkIcon";

// src/icon/generated/BrideGroom.tsx
init_react_import();
function BrideGroomIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M2.665 5.227a4.986 4.986 0 005.558 1.117M5.25 11.25a4.5 4.5 0 00-4.5 4.5v3H3l.75 4.5h3l.75-4.5h2.25v-3a4.5 4.5 0 00-4.5-4.5zM5.25 11.25v5.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 5.25,
    cy: 6.75,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.835 5.227a4.986 4.986 0 01-5.558 1.117",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 6.75,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.86 12.75h1.89a1.5 1.5 0 001.5-1.5v-4.5a6 6 0 00-12 0v4.5a1.5 1.5 0 001.5 1.5h1.89",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 11.25a3.024 3.024 0 00-2.9 2.155l-1.6 5.345H15l.75 4.5h3l.75-4.5h2.25l-1.6-5.345a3.024 3.024 0 00-2.9-2.155z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.472 12.223L17.25 17.25s-1.873-4.591-2.222-5.027",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
BrideGroomIcon.toString = () => "elephantkit-BrideGroomIcon";

// src/icon/generated/ButtonFastForward.tsx
init_react_import();
function ButtonFastForwardIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 11.998,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M14.716 7.964A1.591 1.591 0 0012 9.089V10.5L9.466 7.964A1.591 1.591 0 006.75 9.089v5.819a1.592 1.592 0 002.716 1.125L12 13.5v1.41a1.592 1.592 0 002.716 1.125L18.75 12z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ButtonFastForwardIcon.toString = () => "elephantkit-ButtonFastForwardIcon";

// src/icon/generated/ButtonNext.tsx
init_react_import();
function ButtonNextIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.012 15.658a.855.855 0 001.238-.765V9.1a.855.855 0 00-1.238-.765l-5.789 2.894a.856.856 0 000 1.531z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 11.998,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M6.75 8.248v7.5"
  }));
}
ButtonNextIcon.toString = () => "elephantkit-ButtonNextIcon";

// src/icon/generated/ButtonPause.tsx
init_react_import();
function ButtonPauseIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M9.75 8.248v7.5M14.805 8.248v7.5"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 11.998,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ButtonPauseIcon.toString = () => "elephantkit-ButtonPauseIcon";

// src/icon/generated/ButtonPlay.tsx
init_react_import();
function ButtonPlayIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 11.998,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M9 15.613a1.636 1.636 0 002.712 1.231L17.25 12l-5.538-4.847A1.635 1.635 0 009 8.384z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ButtonPlayIcon.toString = () => "elephantkit-ButtonPlayIcon";

// src/icon/generated/ButtonPrevious.tsx
init_react_import();
function ButtonPreviousIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M7.988 15.658a.855.855 0 01-1.238-.765V9.1a.855.855 0 011.238-.765l5.789 2.894a.856.856 0 010 1.531z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 11.998,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 8.248v7.5"
  }));
}
ButtonPreviousIcon.toString = () => "elephantkit-ButtonPreviousIcon";

// src/icon/generated/ButtonRewind.tsx
init_react_import();
function ButtonRewindIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 11.998,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M9.284 7.964A1.591 1.591 0 0112 9.089V10.5l2.534-2.534a1.591 1.591 0 012.716 1.123v5.819a1.592 1.592 0 01-2.716 1.125L12 13.5v1.41a1.592 1.592 0 01-2.716 1.125L5.25 12z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ButtonRewindIcon.toString = () => "elephantkit-ButtonRewindIcon";

// src/icon/generated/ButtonStop.tsx
init_react_import();
function ButtonStopIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 11.998,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 8.25,
    y: 8.248,
    width: 7.5,
    height: 7.5,
    rx: 0.75,
    ry: 0.75,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ButtonStopIcon.toString = () => "elephantkit-ButtonStopIcon";

// src/icon/generated/CalendarAdd.tsx
init_react_import();
function CalendarAddIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M8.25 17.25h-6a1.5 1.5 0 01-1.5-1.5v-12a1.5 1.5 0 011.5-1.5h13.5a1.5 1.5 0 011.5 1.5v4.5",
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 6.75h16.5"
  }), /* @__PURE__ */ React.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M5.25 3.75v-3M12.75 3.75v-3"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 14.25v6M14.25 17.25h6"
  }));
}
CalendarAddIcon.toString = () => "elephantkit-CalendarAddIcon";

// src/icon/generated/CalendarBlock.tsx
init_react_import();
function CalendarBlockIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M13.008 21.492l8.484-8.484M8.25 17.25h-6a1.5 1.5 0 01-1.5-1.5V3.765a1.5 1.5 0 011.5-1.5h13.5a1.5 1.5 0 011.5 1.5V8.25"
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 6.75h16.5"
  }), /* @__PURE__ */ React.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M5.243 3.75v-3M12.743 3.75v-3"
  }));
}
CalendarBlockIcon.toString = () => "elephantkit-CalendarBlockIcon";

// src/icon/generated/CalendarBold.tsx
init_react_import();
function CalendarBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M21.5 3h-2.75a.25.25 0 01-.25-.25V1a1 1 0 00-2 0v4.75a.75.75 0 01-.75.75.75.75 0 01-.75-.75V3.5a.5.5 0 00-.5-.5H8.25A.25.25 0 018 2.751V1a1 1 0 10-2 0v4.75a.75.75 0 01-.75.75.75.75 0 01-.75-.75V3.5A.5.5 0 004 3H2.5a2 2 0 00-2 2v17a2 2 0 002 2h19a2 2 0 002-2V5a2 2 0 00-2-2zM21 22H3a.5.5 0 01-.5-.5v-12A.5.5 0 013 9h18a.5.5 0 01.5.5v12a.5.5 0 01-.5.5z"
  }));
}
CalendarBoldIcon.toString = () => "elephantkit-CalendarBoldIcon";

// src/icon/generated/CalendarCheck.tsx
init_react_import();
function CalendarCheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.924 15.506l-2.905 3.873a.752.752 0 01-1.131.081l-1.5-1.5M8.25 17.25h-6a1.5 1.5 0 01-1.5-1.5V3.765a1.5 1.5 0 011.5-1.5h13.5a1.5 1.5 0 011.5 1.5V8.25",
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 6.75h16.5"
  }), /* @__PURE__ */ React.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M5.243 3.75v-3M12.743 3.75v-3"
  }));
}
CalendarCheckIcon.toString = () => "elephantkit-CalendarCheckIcon";

// src/icon/generated/CalendarDisable.tsx
init_react_import();
function CalendarDisableIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M19.5 15L15 19.5M15 15l4.5 4.5M8.25 17.25h-6a1.5 1.5 0 01-1.5-1.5V3.765a1.5 1.5 0 011.5-1.5h13.5a1.5 1.5 0 011.5 1.5V8.25"
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 6.75h16.5"
  }), /* @__PURE__ */ React.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M5.243 3.75v-3M12.743 3.75v-3"
  }));
}
CalendarDisableIcon.toString = () => "elephantkit-CalendarDisableIcon";

// src/icon/generated/CalendarRefresh.tsx
init_react_import();
function CalendarRefreshIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M8.25 17.25h-6a1.5 1.5 0 01-1.5-1.5v-12a1.5 1.5 0 011.5-1.5h13.5a1.5 1.5 0 011.5 1.5v4.5M.75 6.75h16.5M5.25 3.75v-3M12.75 3.75v-3M15 18.75h-3.75v3.75M22.667 19.484a5.573 5.573 0 01-10.74-.734M19.5 15.75h3.75V12M11.833 15.017a5.572 5.572 0 0110.74.733",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CalendarRefreshIcon.toString = () => "elephantkit-CalendarRefreshIcon";

// src/icon/generated/CalendarRemove.tsx
init_react_import();
function CalendarRemoveIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M14.25 17.25h6M8.25 17.25h-6a1.5 1.5 0 01-1.5-1.5V3.765a1.5 1.5 0 011.5-1.5h13.5a1.5 1.5 0 011.5 1.5V8.25"
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 6.75h16.5"
  }), /* @__PURE__ */ React.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M5.243 3.75v-3M12.743 3.75v-3"
  }));
}
CalendarRemoveIcon.toString = () => "elephantkit-CalendarRemoveIcon";

// src/icon/generated/Calendar.tsx
init_react_import();
function CalendarIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#ECE7E7,#D77D5F,#955246",
    viewBox: "0 0 300 300",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.076 96.565h267.848v179.253c0 8.878-7.304 16.182-16.181 16.182H32.257c-8.877 0-16.181-7.304-16.181-16.182V96.565z",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M32.257 24.131h235.486c8.877 0 16.181 7.304 16.181 16.182v31.959H16.076V40.313c0-8.878 7.304-16.182 16.181-16.182z",
    fill: "var(--icon-color-2, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M73.258 0c-5.615 0-10.235 4.62-10.235 10.235v38.027h20.47V10.255v-.02C83.493 4.62 78.873 0 73.258 0zM150 0c-5.615 0-10.235 4.62-10.235 10.235v38.027h20.47V10.255v-.02C160.235 4.62 155.615 0 150 0zM226.742 0c-5.615 0-10.235 4.62-10.235 10.235v38.027h20.47V10.255v-.02C236.977 4.62 232.357 0 226.742 0z",
    fill: "var(--icon-color-3, currentColor)"
  }));
}
CalendarIcon.toString = () => "elephantkit-CalendarIcon";

// src/icon/generated/CameraCircle.tsx
init_react_import();
function CameraCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15 8.25l-.75-1.5h-4.5L9 8.25H7.5A1.5 1.5 0 006 9.75v4.5a1.5 1.5 0 001.5 1.5h9a1.5 1.5 0 001.5-1.5v-4.5a1.5 1.5 0 00-1.5-1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 11.625,
    r: 1.875,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CameraCircleIcon.toString = () => "elephantkit-CameraCircleIcon";

// src/icon/generated/Camera.tsx
init_react_import();
function CameraIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 14.25,
    cy: 12.75,
    r: 5.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.5 6l-1.085-2.171A1.5 1.5 0 0017.073 3h-5.646a1.5 1.5 0 00-1.342.829L9 6H2.25a1.5 1.5 0 00-1.5 1.5v12a1.5 1.5 0 001.5 1.5h19.5a1.5 1.5 0 001.5-1.5v-12a1.5 1.5 0 00-1.5-1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M4.125 9a.375.375 0 11-.375.375A.375.375 0 014.125 9M5.25 6V4.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CameraIcon.toString = () => "elephantkit-CameraIcon";

// src/icon/generated/Candle.tsx
init_react_import();
function CandleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.5 21.75a1.5 1.5 0 01-1.5 1.5H9a1.5 1.5 0 01-1.5-1.5V12l9-3zM7.5 16.5l9-3M7.5 21l9-3M15 5.25a3 3 0 01-6 0c0-1.657 3-4.5 3-4.5s3 2.843 3 4.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CandleIcon.toString = () => "elephantkit-CandleIcon";

// src/icon/generated/Caps.tsx
init_react_import();
function CapsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 6.5A2.25 2.25 0 013 4.248h7.5M6.75 4.248v15M3.75 19.248h6M13.5 4.248H21A2.25 2.25 0 0123.25 6.5M17.25 4.248v15M14.25 19.248h6",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CapsIcon.toString = () => "elephantkit-CapsIcon";

// src/icon/generated/CathedralDouble.tsx
init_react_import();
function CathedralDoubleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.5 23.25h-9V13.5l3.876-5.814a.75.75 0 011.248 0L16.5 13.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12 13.875a.375.375 0 11-.375.375.375.375 0 01.375-.375M13.5 23.25h-3v-3a1.5 1.5 0 013 0zM1.5 9.75h6v13.5h0-5a1 1 0 01-1-1V9.75h0zM16.5 9.75h6v12.5a1 1 0 01-1 1h-5 0V9.75h0zM2.25 9.75l2.25-4.5 2.25 4.5M17.25 9.75l2.25-4.5 2.25 4.5M4.5.75v4.5M3 3.75h3M19.5.75v4.5M18 3.75h3M4.5 14.25v1.5M19.5 14.25v1.5M1.5 15.75h6M16.5 15.75h6M4.5 18.75v1.5M19.5 18.75v1.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CathedralDoubleIcon.toString = () => "elephantkit-CathedralDoubleIcon";

// src/icon/generated/CathedralSingle.tsx
init_react_import();
function CathedralSingleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M11.25 23.25h3v-3a1.5 1.5 0 00-3 0zM.75 9.75h7.5v13.5h0-6.5a1 1 0 01-1-1V9.75h0zM.75 9.75l3.75-4.5 3.75 4.5M4.5.75v4.5M3 3h3M4.5 13.5V15M4.5 18v1.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M8.25 23.25V15l3.931-4.586a.749.749 0 011.138 0L17.25 15v8.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 15.75l5.171 2.585a1.5 1.5 0 01.829 1.342v2.073a1.5 1.5 0 01-1.5 1.5H8.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CathedralSingleIcon.toString = () => "elephantkit-CathedralSingleIcon";

// src/icon/generated/Cd.tsx
init_react_import();
function CdIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 3.75,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12 11.625a.375.375 0 10.375.375.375.375 0 00-.375-.375h0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CdIcon.toString = () => "elephantkit-CdIcon";

// src/icon/generated/CelticKnot.tsx
init_react_import();
function CelticKnotIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M5.08 14.031a15.3 15.3 0 00-4.233 6.886.492.492 0 00.359.619c2.028.48 9.835 1.812 13.764-4.964q.3-.524.537-1.041",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M16.271 9.532a15.178 15.178 0 00-3.892-7.348.493.493 0 00-.715 0C10.234 3.7 5.177 9.8 9.081 16.588a11.462 11.462 0 00.782 1.188",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M14.724 21.249a15.3 15.3 0 008.083.029.493.493 0 00.342-.628c-.646-1.983-3.572-9.342-11.4-9.169q-.6.014-1.168.083",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CelticKnotIcon.toString = () => "elephantkit-CelticKnotIcon";

// src/icon/generated/CheckBadge.tsx
init_react_import();
function CheckBadgeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 9.749l-3.981 5.308a.75.75 0 01-1.13.08L8.25 12.749",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M10.73 1.357a1.63 1.63 0 012.54 0l1.512 1.881a1.629 1.629 0 001.446.6l2.4-.261a1.63 1.63 0 011.8 1.8l-.261 2.4a1.629 1.629 0 00.6 1.446l1.881 1.512a1.63 1.63 0 010 2.54l-1.887 1.505a1.632 1.632 0 00-.6 1.447l.261 2.4a1.629 1.629 0 01-1.8 1.8l-2.4-.261a1.628 1.628 0 00-1.446.6L13.27 22.64a1.629 1.629 0 01-2.54 0l-1.511-1.88a1.631 1.631 0 00-1.447-.6l-2.4.261a1.628 1.628 0 01-1.8-1.8l.261-2.4a1.631 1.631 0 00-.6-1.447l-1.88-1.511a1.629 1.629 0 010-2.54l1.88-1.512a1.628 1.628 0 00.6-1.446l-.261-2.4a1.629 1.629 0 011.8-1.8l2.4.261a1.632 1.632 0 001.447-.6z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CheckBadgeIcon.toString = () => "elephantkit-CheckBadgeIcon";

// src/icon/generated/CheckBold.tsx
init_react_import();
function CheckBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.146 5.4l-2.792-2.8a.5.5 0 00-.708 0L7.854 14.4a.5.5 0 01-.708 0l-2.792-2.8a.5.5 0 00-.708 0L.854 14.4a.5.5 0 000 .707L7.146 21.4a.5.5 0 00.708 0L23.146 6.1a.5.5 0 000-.7z"
  }));
}
CheckBoldIcon.toString = () => "elephantkit-CheckBoldIcon";

// src/icon/generated/CheckCircleBold.tsx
init_react_import();
function CheckCircleBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z"
  }));
}
CheckCircleBoldIcon.toString = () => "elephantkit-CheckCircleBoldIcon";

// src/icon/generated/CheckCircle.tsx
init_react_import();
function CheckCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M6.75 9l3.294 4.611a1.526 1.526 0 002.414.09L23.25.749M16.783 3.824A10.487 10.487 0 1020.8 8.377",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CheckCircleIcon.toString = () => "elephantkit-CheckCircleIcon";

// src/icon/generated/CheckDouble.tsx
init_react_import();
function CheckDoubleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.25 4.249L11.808 19.505a1.5 1.5 0 01-2.261.161L6.57 16.689M6 19.76a1.5 1.5 0 01-2.133.012L.89 16.8M17.43 4.355L9.29 15.209",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CheckDoubleIcon.toString = () => "elephantkit-CheckDoubleIcon";

// src/icon/generated/Check.tsx
init_react_import();
function CheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.25.749L8.158 22.308a2.2 2.2 0 01-3.569.059L.75 17.249",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CheckIcon.toString = () => "elephantkit-CheckIcon";

// src/icon/generated/ChevronDoubleLeft.tsx
init_react_import();
function ChevronDoubleLeftIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M11.689 23.25L.97 12.53a.749.749 0 010-1.06L11.689.75M22.939 23.25L12.22 12.53a.749.749 0 010-1.06L22.939.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ChevronDoubleLeftIcon.toString = () => "elephantkit-ChevronDoubleLeftIcon";

// src/icon/generated/ChevronDoubleRight.tsx
init_react_import();
function ChevronDoubleRightIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12.311.75L23.03 11.47a.749.749 0 010 1.06L12.311 23.25M1.061.75L11.78 11.47a.749.749 0 010 1.06L1.061 23.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ChevronDoubleRightIcon.toString = () => "elephantkit-ChevronDoubleRightIcon";

// src/icon/generated/ChevronDown.tsx
init_react_import();
function ChevronDownIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 19.5a2.3 2.3 0 01-1.729-.78L.46 7.568a1.847 1.847 0 012.773-2.439l8.579 9.752a.25.25 0 00.376 0l8.579-9.752a1.847 1.847 0 112.773 2.439l-9.808 11.148A2.31 2.31 0 0112 19.5z"
  }));
}
ChevronDownIcon.toString = () => "elephantkit-ChevronDownIcon";

// src/icon/generated/ChevronLeft.tsx
init_react_import();
function ChevronLeftIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M4.5 12a2.3 2.3 0 01.78-1.729L16.432.46a1.847 1.847 0 012.439 2.773l-9.752 8.579a.25.25 0 000 .376l9.752 8.579a1.847 1.847 0 11-2.439 2.773L5.284 13.732A2.31 2.31 0 014.5 12z"
  }));
}
ChevronLeftIcon.toString = () => "elephantkit-ChevronLeftIcon";

// src/icon/generated/ChevronRight.tsx
init_react_import();
function ChevronRightIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M19.5 12a2.3 2.3 0 01-.78 1.729L7.568 23.54a1.847 1.847 0 01-2.439-2.773l9.752-8.579a.25.25 0 000-.376L5.129 3.233A1.847 1.847 0 017.568.46l11.148 9.808A2.31 2.31 0 0119.5 12z"
  }));
}
ChevronRightIcon.toString = () => "elephantkit-ChevronRightIcon";

// src/icon/generated/ChevronUp.tsx
init_react_import();
function ChevronUpIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 4.5a2.3 2.3 0 011.729.78l9.811 11.15a1.847 1.847 0 11-2.773 2.439l-8.579-9.75a.25.25 0 00-.376 0l-8.579 9.752A1.847 1.847 0 11.46 16.432l9.808-11.148A2.31 2.31 0 0112 4.5z"
  }));
}
ChevronUpIcon.toString = () => "elephantkit-ChevronUpIcon";

// src/icon/generated/ChristRedeemer.tsx
init_react_import();
function ChristRedeemerIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M10.277 6.456l-.9-2.706a2.625 2.625 0 015.25 0l-.9 2.706",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M8.25 22.875v-12H4.5c-3 0-2.25-3-2.25-3A15.258 15.258 0 006 7.125a28.1 28.1 0 016-.75M12 6.375a28.1 28.1 0 016 .75 15.258 15.258 0 003.75.75s.75 3-2.25 3h-3.75v12M.75 8.625h1.417M21.833 8.625h1.417",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 6.684v11.691l-1.756 1.537a.75.75 0 01-1.244-.565V6.4M7.782 6.758c1.252 1.319 3.39 3.391 4.969 3.965M8.25 13.243a15.541 15.541 0 004.5 3.48",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ChristRedeemerIcon.toString = () => "elephantkit-ChristRedeemerIcon";

// src/icon/generated/ChristianFish.tsx
init_react_import();
function ChristianFishIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.139 4.955c-1.16 6.822-6.442 11.977-12.79 11.977a12.279 12.279 0 01-9.306-4.442.751.751 0 010-.979 12.281 12.281 0 019.307-4.443c6.348 0 11.63 5.155 12.79 11.977",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ChristianFishIcon.toString = () => "elephantkit-ChristianFishIcon";

// src/icon/generated/ChristmasBells.tsx
init_react_import();
function ChristmasBellsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M8.618 8.87a4.568 4.568 0 00-3.913 2.652l-1.211 2.74a2.693 2.693 0 01-1.729 1.576 1.349 1.349 0 00-.9.752 1.43 1.43 0 00.785 1.854l8.943 3.956a1.429 1.429 0 001.9-.668 1.343 1.343 0 00-.053-1.175 2.7 2.7 0 010-2.339l.724-1.637M7.376 20.977a1.974 1.974 0 11-3.054-1.35M15.673 20.789l6.64-2.57a1.466 1.466 0 00-.054-2.755 2.951 2.951 0 01-1.7-1.784l-1.068-2.759A5.3 5.3 0 0017.17 8.23M19.748 19.212a1.962 1.962 0 11-3.419 1.323M11.184 3.182L9.215 1.446A2.929 2.929 0 007.279.75h0a2.579 2.579 0 00-2.71 2.426v2.68a2.587 2.587 0 002.745 2.4h0a2.933 2.933 0 001.928-.716l1.031-.921",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12.067,
    cy: 5.252,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M9.946 4.5H7.565M14.188 4.5h2.377M15.418 7.905l1.511 5.133a.285.285 0 01-.385.343l-1.321-.557a.287.287 0 00-.349.1l-.686 1.031a.286.286 0 01-.509-.068l-1.256-3.767a.286.286 0 00-.542 0l-1.257 3.771a.283.283 0 01-.232.192.287.287 0 01-.276-.124l-.687-1.031a.286.286 0 00-.348-.1l-1.321.557a.285.285 0 01-.385-.343l1.572-5.275"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12.95 3.182l1.97-1.736a2.925 2.925 0 011.935-.7h0a2.578 2.578 0 012.71 2.426l-.005 2.68a2.587 2.587 0 01-2.745 2.4h0a2.928 2.928 0 01-1.927-.716l-1.032-.921",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ChristmasBellsIcon.toString = () => "elephantkit-ChristmasBellsIcon";

// src/icon/generated/Church.tsx
init_react_import();
function ChurchIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.5 22.5h-9V12a4.5 4.5 0 019 0z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12 12.375a.375.375 0 11.375-.375.375.375 0 01-.375.375M13.5 22.5h-3v-5.25a1.5 1.5 0 013 0zM12 1.5v6M10.5 3h3M4.125 18.75a.375.375 0 10-.375-.375.375.375 0 00.375.375",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 21a1.5 1.5 0 001.5 1.5H7.5v-9l-5.575 1.239A1.5 1.5 0 00.75 16.2zM19.875 18.75a.375.375 0 11.375-.375.375.375 0 01-.375.375",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M23.25 21a1.5 1.5 0 01-1.5 1.5H16.5v-9l5.575 1.239A1.5 1.5 0 0123.25 16.2z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ChurchIcon.toString = () => "elephantkit-ChurchIcon";

// src/icon/generated/CloseQuote.tsx
init_react_import();
function CloseQuoteIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 18.75,
    cy: 9.248,
    r: 4.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M23.25 9.248a10.5 10.5 0 01-10.5 10.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 6.75,
    cy: 9.248,
    r: 4.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M11.25 9.248a10.5 10.5 0 01-10.5 10.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CloseQuoteIcon.toString = () => "elephantkit-CloseQuoteIcon";

// src/icon/generated/Close.tsx
init_react_import();
function CloseIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 23.249l22.5-22.5M23.25 23.249L.75.749"
  }));
}
CloseIcon.toString = () => "elephantkit-CloseIcon";

// src/icon/generated/CloudOff.tsx
init_react_import();
function CloudOffIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M1.752 6.753A7.5 7.5 0 008.25 18h4.5M20.987 17.242a4.873 4.873 0 10-5.376-8.127A7.5 7.5 0 006.833 3.13M2.25 3l18 18",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CloudOffIcon.toString = () => "elephantkit-CloudOffIcon";

// src/icon/generated/CloudQuestion.tsx
init_react_import();
function CloudQuestionIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.375 16.125A1.875 1.875 0 1117.25 18M17.25 20.25a.375.375 0 10.375.375.375.375 0 00-.375-.375h0M23.1 9.659a4.868 4.868 0 00-7.486-2.794A7.5 7.5 0 108.25 15.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CloudQuestionIcon.toString = () => "elephantkit-CloudQuestionIcon";

// src/icon/generated/CloudWarning.tsx
init_react_import();
function CloudWarningIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 20.25a.375.375 0 10.375.375.375.375 0 00-.375-.375h0M17.25 18v-3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M23.063 20.683a1.774 1.774 0 01-1.587 2.567h-8.452a1.773 1.773 0 01-1.586-2.567l4.225-8.452a1.774 1.774 0 013.174 0z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M22.829 12.86a4.871 4.871 0 00-7.218-5.995A7.5 7.5 0 108.25 15.75h2.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CloudWarningIcon.toString = () => "elephantkit-CloudWarningIcon";

// src/icon/generated/Cloud.tsx
init_react_import();
function CloudIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18.375 19.5a4.875 4.875 0 10-2.764-8.885A7.5 7.5 0 108.25 19.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CloudIcon.toString = () => "elephantkit-CloudIcon";

// src/icon/generated/Clover.tsx
init_react_import();
function CloverIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 14.25v7.432a1.611 1.611 0 003 .75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M20.924 11.625A2.99 2.99 0 0019.5 6c-1.423 0-2.3.858-3.375 1.5.45-.982 1.5-2.5 1.5-3.75a3 3 0 00-3-3A2.922 2.922 0 0012 2.25 2.922 2.922 0 009.375.75a3 3 0 00-3 3c0 1.245 1.05 2.768 1.5 3.75C6.8 6.858 5.923 6 4.5 6a2.99 2.99 0 00-1.424 5.625A2.99 2.99 0 004.5 17.25c5.25 0 7.5-3 7.5-3s2.25 3 7.5 3a2.99 2.99 0 001.424-5.625z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CloverIcon.toString = () => "elephantkit-CloverIcon";

// src/icon/generated/Coffin.tsx
init_react_import();
function CoffinIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M15.419 23.25H8.761a1.5 1.5 0 01-1.455-1.136L3.974 8.788a1.5 1.5 0 01.114-1.034l3.087-6.175A1.5 1.5 0 018.517.75h7.146A1.5 1.5 0 0117 1.579l3.088 6.175a1.5 1.5 0 01.112 1.034l-3.326 13.326a1.5 1.5 0 01-1.455 1.136zM12.09 5.25V16.5M9.09 8.25h6",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CoffinIcon.toString = () => "elephantkit-CoffinIcon";

// src/icon/generated/CogApproved.tsx
init_react_import();
function CogApprovedIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M21.684 9.39a1.826 1.826 0 01-.539.876l-.972.878a1.828 1.828 0 000 2.714l.972.878a1.828 1.828 0 01-1.319 3.183l-1.308-.067a1.828 1.828 0 00-1.918 1.919l.067 1.308a1.828 1.828 0 01-3.184 1.321l-.878-.972a1.828 1.828 0 00-2.714 0l-.878.972a1.828 1.828 0 01-3.183-1.321l.07-1.308a1.828 1.828 0 00-1.919-1.919l-1.308.067a1.828 1.828 0 01-1.319-3.183l.972-.878a1.828 1.828 0 000-2.714l-.972-.878A1.828 1.828 0 012.67 7.083l1.308.067A1.828 1.828 0 005.9 5.231l-.07-1.308A1.828 1.828 0 019.013 2.6l.878.972a1.826 1.826 0 002.714 0l.878-.972a1.829 1.829 0 012.057-.46",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M7.6 10.641l2.513 3.351a1.5 1.5 0 002.347.066L23.248 1.251",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CogApprovedIcon.toString = () => "elephantkit-CogApprovedIcon";

// src/icon/generated/Cog.tsx
init_react_import();
function CogIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M10.546 2.438a1.957 1.957 0 002.908 0L14.4 1.4a1.959 1.959 0 013.41 1.413l-.071 1.4a1.958 1.958 0 002.051 2.054l1.4-.071a1.959 1.959 0 011.41 3.41l-1.042.94a1.96 1.96 0 000 2.909l1.042.94a1.959 1.959 0 01-1.413 3.41l-1.4-.071a1.958 1.958 0 00-2.056 2.056l.071 1.4A1.959 1.959 0 0114.4 22.6l-.941-1.041a1.959 1.959 0 00-2.908 0L9.606 22.6A1.959 1.959 0 016.2 21.192l.072-1.4a1.958 1.958 0 00-2.056-2.056l-1.4.071A1.958 1.958 0 011.4 14.4l1.041-.94a1.96 1.96 0 000-2.909L1.4 9.606A1.958 1.958 0 012.809 6.2l1.4.071a1.958 1.958 0 002.058-2.06L6.2 2.81A1.959 1.959 0 019.606 1.4z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12.001,
    r: 4.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CogIcon.toString = () => "elephantkit-CogIcon";

// src/icon/generated/ColorPalette.tsx
init_react_import();
function ColorPaletteIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.022 15.624c.3 3.856 6.014 1.2 5.562 2.54-2.525 7.481-12.648 5.685-16.966 1.165A10.9 10.9 0 014.64 4.04C8.868-.188 16.032-.495 19.928 4.018c7.632 8.84-4.17 8.165-3.906 11.606z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.19,
    cy: 13.309,
    r: 1.52,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 10.95,
    cy: 18.144,
    r: 1.52,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 14.586,
    cy: 5.912,
    r: 1.52,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 8.14,
    cy: 7.524,
    r: 1.52,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ColorPaletteIcon.toString = () => "elephantkit-ColorPaletteIcon";

// src/icon/generated/ConstructionSign.tsx
init_react_import();
function ConstructionSignIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 5.25,
    width: 22.5,
    height: 10.5,
    rx: 1,
    ry: 1,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M3.75 15.75v7.5M20.25 15.75v7.5"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 6,
    cy: 2.25,
    r: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 18,
    cy: 2.25,
    r: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M8.25 5.25l-7.5 7.5M14.25 5.25l-10.5 10.5M20.25 5.25l-10.5 10.5M23.25 8.25l-7.5 7.5"
  }));
}
ConstructionSignIcon.toString = () => "elephantkit-ConstructionSignIcon";

// src/icon/generated/Conversation.tsx
init_react_import();
function ConversationIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.25 13.5A5.25 5.25 0 0018 8.25h-3a5.25 5.25 0 000 10.5h.75l4.5 4.5v-5.024a5.239 5.239 0 003-4.726zM6.75 12.75l-3 3v-5.024A5.239 5.239 0 016 .75h3a5.252 5.252 0 015.032 3.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ConversationIcon.toString = () => "elephantkit-ConversationIcon";

// src/icon/generated/CopyPaste.tsx
init_react_import();
function CopyPasteIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M20.25 8.249v-3a1.5 1.5 0 00-1.5-1.5h-4M6.25 3.749h-4a1.5 1.5 0 00-1.5 1.5v16.5a1.5 1.5 0 001.5 1.5h6",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M14.421 4.736a.751.751 0 01-.712.513H7.291a.751.751 0 01-.712-.513l-1-3a.749.749 0 01.712-.987h8.418a.749.749 0 01.712.987z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 11.25,
    y: 11.249,
    width: 12,
    height: 12,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M14.25 14.249h6M14.25 17.249h6M14.25 20.249h2.25"
  }));
}
CopyPasteIcon.toString = () => "elephantkit-CopyPasteIcon";

// src/icon/generated/CoupleHands.tsx
init_react_import();
function CoupleHandsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M3.75 23.25l-2.014-2.381a4.5 4.5 0 01-.986-2.811v-5.172a1.5 1.5 0 011.5-1.5h0a1.5 1.5 0 011.5 1.5v3.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M8.25 23.25v-3a4.5 4.5 0 00-.757-2.5l-1.142-1.71a1.4 1.4 0 00-1.977-.44h0a1.4 1.4 0 00-.474 1.786l1.352 2.25M20.25 23.25l2.014-2.381a4.5 4.5 0 00.986-2.811v-5.172a1.5 1.5 0 00-1.5-1.5h0a1.5 1.5 0 00-1.5 1.5v3.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 23.25v-3a4.5 4.5 0 01.757-2.5l1.142-1.712a1.4 1.4 0 011.977-.445h0a1.4 1.4 0 01.476 1.791l-1.352 2.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 15.75,
    cy: 2.25,
    r: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 12.75h1.125l.375-3h1.5v-1.5a3 3 0 00-3-3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 8.25,
    cy: 2.25,
    r: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M8.25 5.25a3 3 0 00-3 3v1.5h1.5l.375 3H8.25M14.561 7.693a1.5 1.5 0 00-2.122 0L12 8.132l-.439-.439a1.5 1.5 0 10-2.122 2.121L12 12.375l2.561-2.561a1.5 1.5 0 000-2.121z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CoupleHandsIcon.toString = () => "elephantkit-CoupleHandsIcon";

// src/icon/generated/Couple.tsx
init_react_import();
function CoupleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 5.25,
    cy: 14.25,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M9.75 23.25a4.5 4.5 0 00-9 0M22.5 23.25a4.5 4.5 0 00-9 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 18,
    cy: 14.25,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15 14.25S15 18 12.75 18M21 14.25S21 18 23.25 18M16.272 1.5a2.429 2.429 0 00-3.516 0L11.25 3.06 9.744 1.5a2.429 2.429 0 00-3.516 0 2.632 2.632 0 000 3.635l4.487 4.639a.74.74 0 001.07 0l4.487-4.639a2.632 2.632 0 000-3.635z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CoupleIcon.toString = () => "elephantkit-CoupleIcon";

// src/icon/generated/CreditCardAmex.tsx
init_react_import();
function CreditCardAmexIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#006fcf",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("g", {
    fillRule: "nonzero"
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M22.105 4.421H1.895A1.86 1.86 0 000 6.316v11.368a1.9 1.9 0 001.895 1.895h20.21A1.86 1.86 0 0024 17.684V6.316a1.9 1.9 0 00-1.895-1.895z",
    fillOpacity: 0.07
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M22.105 5.053c.695 0 1.263.568 1.263 1.263v11.368c0 .695-.568 1.263-1.263 1.263H1.895a1.267 1.267 0 01-1.263-1.263V6.316c0-.695.568-1.263 1.263-1.263h20.21",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M5.666 10.906l.489 1.185H5.18l.485-1.185zm10.153.05h-1.88v.522h1.85v.782h-1.847v.583h1.88v.466l1.312-1.418-1.312-1.478-.003.542zm-8.882-1.48H9.46l.56 1.223.52-1.226h6.549l.68.751.705-.751h3.008l-2.223 2.433 2.2 2.417h-3.053l-.68-.751-.711.751H6.335l-.312-.751h-.714l-.313.751h-2.47l2.076-4.85h2.166l.169.003zm5.471.681h-1.414l-.947 2.234-1.027-2.234H7.617v3.038l-1.301-3.038H5.057L3.553 13.64h.982l.312-.752h1.64l.311.752h1.718v-2.486l1.106 2.49h.752l1.099-2.482v2.482h.92l.016-3.486h-.001zm5.899 1.749l1.598-1.749h-1.15l-1.011 1.09-.978-1.09h-3.723v3.485h3.67l1.02-1.097.977 1.097h1.184l-1.586-1.736h-.001z",
    fill: "#fff"
  })));
}
CreditCardAmexIcon.toString = () => "elephantkit-CreditCardAmexIcon";

// src/icon/generated/CreditCardDiscover.tsx
init_react_import();
function CreditCardDiscoverIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#231f20,#f48120,#d05b2e",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("g", {
    fillRule: "nonzero"
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M22.105 4.421H1.895A1.86 1.86 0 000 6.316v11.368a1.9 1.9 0 001.895 1.895h20.21A1.86 1.86 0 0024 17.684V6.316a1.9 1.9 0 00-1.895-1.895z",
    fillOpacity: 0.07
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M22.105 5.053c.695 0 1.263.568 1.263 1.263v11.368c0 .695-.568 1.263-1.263 1.263H1.895a1.267 1.267 0 01-1.263-1.263V6.316c0-.695.568-1.263 1.263-1.263h20.21z",
    fill: "#fff"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M2.255 8.943h-.992v3.474h.992c.524 0 .903-.126 1.238-.398.398-.328.631-.821.631-1.333-.006-1.03-.77-1.743-1.87-1.743zm.796 2.615c-.215.19-.487.278-.929.278H1.94v-2.3h.183c.436 0 .701.077.929.279.233.208.372.53.372.865 0 .335-.139.67-.372.878zm1.383-2.615h.675v3.474h-.675V8.943zm2.33 1.333c-.404-.152-.524-.253-.524-.436 0-.221.215-.385.505-.385.202 0 .373.082.543.284l.354-.461a1.527 1.527 0 00-1.023-.385c-.613 0-1.086.43-1.086.998 0 .48.22.726.852.953.266.095.398.158.468.196a.423.423 0 01.202.36c0 .284-.221.493-.524.493-.323 0-.582-.165-.74-.461l-.435.423c.31.46.688.663 1.2.663.7 0 1.2-.467 1.2-1.143.012-.562-.221-.815-.992-1.1zm1.213.41c0 1.023.802 1.813 1.831 1.813.29 0 .544-.057.847-.202V11.5c-.272.272-.512.379-.815.379-.682 0-1.168-.493-1.168-1.2 0-.67.499-1.194 1.136-1.194.323 0 .569.114.847.392v-.796a1.726 1.726 0 00-.834-.215 1.829 1.829 0 00-1.844 1.82zm8.059.594l-.929-2.337h-.739l1.472 3.562h.366l1.497-3.562h-.732l-.935 2.337zm1.977 1.137h1.92v-.588h-1.245v-.934h1.2v-.588h-1.2v-.77h1.245v-.594h-1.92v3.474zm4.604-2.444c0-.65-.449-1.024-1.232-1.024h-1.004v3.474h.676v-1.396h.088l.935 1.396h.834l-1.093-1.465c.512-.107.796-.455.796-.985zm-1.364.574h-.196V9.493h.208c.423 0 .65.176.65.518 0 .347-.227.536-.662.536z",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12.733 12.543a1.86 1.86 0 001.85-1.851 1.86 1.86 0 00-1.85-1.851 1.86 1.86 0 00-1.852 1.851 1.86 1.86 0 001.852 1.851zM23.368 12.621S17.11 16.972 5.67 18.947h16.436a1.27 1.27 0 001.263-1.253l.015-1.907-.015-3.165z",
    fill: "var(--icon-color-2, currentColor)"
  })));
}
CreditCardDiscoverIcon.toString = () => "elephantkit-CreditCardDiscoverIcon";

// src/icon/generated/CreditCardMastercard.tsx
init_react_import();
function CreditCardMastercardIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#eb001b,#f79e1b,#ff5f00",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("g", {
    transform: "translate(0 4.421) scale(.63158)"
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M35 0H3C1.3 0 0 1.3 0 3v18c0 1.7 1.4 3 3 3h32c1.7 0 3-1.3 3-3V3c0-1.7-1.4-3-3-3z",
    fillOpacity: 0.07,
    fillRule: "nonzero"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M35 1c1.1 0 2 .9 2 2v18c0 1.1-.9 2-2 2H3c-1.1 0-2-.9-2-2V3c0-1.1.9-2 2-2h32",
    fill: "#fff",
    fillRule: "nonzero"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 15,
    cy: 12,
    r: 7,
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 23,
    cy: 12,
    r: 7,
    fill: "var(--icon-color-2, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M22 12c0-2.4-1.2-4.5-3-5.7-1.8 1.3-3 3.4-3 5.7 0 2.3 1.2 4.5 3 5.7 1.8-1.2 3-3.3 3-5.7z",
    fill: "var(--icon-color-3, hsl(0 0% 0% / 0.5))",
    fillRule: "nonzero"
  })));
}
CreditCardMastercardIcon.toString = () => "elephantkit-CreditCardMastercardIcon";

// src/icon/generated/CreditCardVisa.tsx
init_react_import();
function CreditCardVisaIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#1434cb",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M22.105 4.421H1.895A1.86 1.86 0 000 6.316v11.368a1.9 1.9 0 001.895 1.895h20.21A1.86 1.86 0 0024 17.684V6.316a1.9 1.9 0 00-1.895-1.895z",
    fillOpacity: 0.07,
    fillRule: "nonzero"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M22.105 5.053c.695 0 1.263.568 1.263 1.263v11.368c0 .695-.568 1.263-1.263 1.263H1.895a1.267 1.267 0 01-1.263-1.263V6.316c0-.695.568-1.263 1.263-1.263h20.21",
    fill: "#fff",
    fillRule: "nonzero"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M14.08 9.313c-1.177 0-2.23.61-2.23 1.738 0 1.294 1.867 1.383 1.867 2.032 0 .274-.314.519-.85.519-.759 0-1.327-.342-1.327-.342l-.243 1.138s.654.289 1.523.289c1.287 0 2.3-.64 2.3-1.788 0-1.366-1.874-1.453-1.874-2.056 0-.214.258-.449.792-.449.602 0 1.093.249 1.093.249l.238-1.099s-.535-.23-1.289-.23zm-10.773.083l-.029.166s.496.09.942.272c.574.207.615.328.712.703L5.986 14.6H7.4l2.177-5.205h-1.41l-1.399 3.54-.57-3c-.053-.344-.319-.54-.643-.54H3.307zm6.837 0l-1.106 5.205h1.345l1.102-5.205h-1.34zm7.5 0c-.324 0-.496.174-.622.477l-1.97 4.728h1.41l.273-.788h1.718l.165.788h1.245l-1.086-5.205h-1.133zm.183 1.406l.418 1.954h-1.12l.702-1.954z",
    fill: "var(--icon-color-1, currentColor)",
    fillRule: "nonzero"
  }));
}
CreditCardVisaIcon.toString = () => "elephantkit-CreditCardVisaIcon";

// src/icon/generated/CreditCard.tsx
init_react_import();
function CreditCardIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M21.649 4.387H2.353A2.357 2.357 0 000 6.74v10.52a2.357 2.357 0 002.353 2.353h19.294A2.357 2.357 0 0024 17.26V6.743a2.353 2.353 0 00-2.351-2.356zM2.353 6.233h19.294c.28 0 .507.23.507.507v1.943H1.844V6.74a.513.513 0 01.51-.507zM21.65 17.77H2.353a.508.508 0 01-.507-.507v-6.73h20.31v6.728a.51.51 0 01-.507.51z",
    fillRule: "nonzero"
  }));
}
CreditCardIcon.toString = () => "elephantkit-CreditCardIcon";

// src/icon/generated/CrossDiamond.tsx
init_react_import();
function CrossDiamondIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 3.734,
    y: 3.734,
    width: 16.533,
    height: 16.533,
    rx: 1.063,
    ry: 1.063,
    transform: "rotate(-45 12 12)",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 6.75v10.5M6.75 12h10.5"
  }));
}
CrossDiamondIcon.toString = () => "elephantkit-CrossDiamondIcon";

// src/icon/generated/CrossGive.tsx
init_react_import();
function CrossGiveIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M22.5 4.5a.75.75 0 00-.75-.75h-1.5A.75.75 0 0119.5 3V1.5a.75.75 0 00-.75-.75h-1.5a.75.75 0 00-.75.75V3a.75.75 0 01-.75.75h-1.5a.75.75 0 00-.75.75V6a.75.75 0 00.75.75h1.5a.75.75 0 01.75.75v6a.75.75 0 00.75.75h1.5a.75.75 0 00.75-.75v-6a.75.75 0 01.75-.75h1.5A.75.75 0 0022.5 6zM1.5 14.25v9M16.5 21.75a3 3 0 00-3-3H9.75a3 3 0 00-3-3H1.5v6zM6.75 18.75h3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CrossGiveIcon.toString = () => "elephantkit-CrossGiveIcon";

// src/icon/generated/CrossHands.tsx
init_react_import();
function CrossHandsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M4.5 23.25l-2.014-2.517a4.5 4.5 0 01-.986-2.812V12.75a1.5 1.5 0 011.5-1.5h0a1.5 1.5 0 011.5 1.5v3.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M9 23.25v-3.136a4.493 4.493 0 00-.757-2.5L7.1 15.9a1.4 1.4 0 00-1.977-.445h0a1.4 1.4 0 00-.476 1.791L6 19.5M19.5 23.25l2.014-2.517a4.5 4.5 0 00.986-2.812V12.75a1.5 1.5 0 00-1.5-1.5h0a1.5 1.5 0 00-1.5 1.5v3.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15 23.25v-3.136a4.493 4.493 0 01.757-2.5L16.9 15.9a1.4 1.4 0 011.977-.445h0a1.4 1.4 0 01.476 1.791L18 19.5M16.5 4.5a.75.75 0 00-.75-.75h-1.5A.75.75 0 0113.5 3V1.5a.75.75 0 00-.75-.75h-1.5a.75.75 0 00-.75.75V3a.75.75 0 01-.75.75h-1.5a.75.75 0 00-.75.75V6a.75.75 0 00.75.75h1.5a.75.75 0 01.75.75v6a.75.75 0 00.75.75h1.5a.75.75 0 00.75-.75v-6a.75.75 0 01.75-.75h1.5A.75.75 0 0016.5 6z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CrossHandsIcon.toString = () => "elephantkit-CrossHandsIcon";

// src/icon/generated/CrossNecklace.tsx
init_react_import();
function CrossNecklaceIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18.749 11.25a1.5 1.5 0 00-1.5-1.5h-3v-3a1.5 1.5 0 00-1.5-1.5h-1.5a1.5 1.5 0 00-1.5 1.5v3h-3a1.5 1.5 0 00-1.5 1.5v1.5a1.5 1.5 0 001.5 1.5h3v7.5a1.5 1.5 0 001.5 1.5h1.5a1.5 1.5 0 001.5-1.5v-7.5h3a1.5 1.5 0 001.5-1.5zM9.747 7.215A9.015 9.015 0 013.284.756M20.716.75a9.016 9.016 0 01-6.467 6.466",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CrossNecklaceIcon.toString = () => "elephantkit-CrossNecklaceIcon";

// src/icon/generated/CrossShine.tsx
init_react_import();
function CrossShineIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 11.25v-1.5A.75.75 0 0016.5 9h-2.25a.75.75 0 01-.75-.75V6a.75.75 0 00-.75-.75h-1.5a.75.75 0 00-.75.75v2.25a.75.75 0 01-.75.75H7.5a.75.75 0 00-.75.75v1.5a.75.75 0 00.75.75h2.25a.75.75 0 01.75.75v6a.75.75 0 00.75.75h1.5a.75.75 0 00.75-.75v-6a.75.75 0 01.75-.75h2.25a.75.75 0 00.75-.75zM7.5 4.5L4.5.75M.75 7.5L4.5 9M.75 17.25L4.5 15M7.5 19.5l-3 3.75M16.5 4.5l3-3.75M23.25 7.5L19.5 9M23.25 17.25L19.5 15M16.5 19.5l3 3.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CrossShineIcon.toString = () => "elephantkit-CrossShineIcon";

// src/icon/generated/CrossStand.tsx
init_react_import();
function CrossStandIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.5 4.5a.75.75 0 00-.75-.75h-1.5A.75.75 0 0113.5 3V1.5a.75.75 0 00-.75-.75h-1.5a.75.75 0 00-.75.75V3a.75.75 0 01-.75.75h-1.5a.75.75 0 00-.75.75V6a.75.75 0 00.75.75h1.5a.75.75 0 01.75.75v6.75h3V7.5a.75.75 0 01.75-.75h1.5A.75.75 0 0016.5 6z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M16.784 15.224a1.476 1.476 0 00-1.455-.974H8.671a1.476 1.476 0 00-1.455.974L6 23.25h12zM1.5 23.25h21",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
CrossStandIcon.toString = () => "elephantkit-CrossStandIcon";

// src/icon/generated/Crosshair.tsx
init_react_import();
function CrosshairIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    viewBox: "0 0 48 48",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /* @__PURE__ */ React.createElement("g", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M24.004 34.494v12M24.004 1.494v12M13.504 23.994h-12M46.504 23.994h-12M7.504 23.996a16.5 16.5 0 1033 0 16.5 16.5 0 10-33 0z",
    strokeWidth: 3
  })));
}
CrosshairIcon.toString = () => "elephantkit-CrosshairIcon";

// src/icon/generated/Dashboard.tsx
init_react_import();
function DashboardIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#BA94BE,#856189,#584364",
    viewBox: "0 0 300 300",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M165 56.731h-30c-8.462 0-15.385 6.923-15.385 15.385v212.5c0 8.462 6.923 15.385 15.385 15.385h30c8.462 0 15.385-6.923 15.385-15.385v-212.5c0-8.462-6.923-15.385-15.385-15.385z",
    fill: "var(--icon-color-2, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M248.846 0h-30c-8.461 0-15.384 6.923-15.384 15.385v269.039c0 8.461 6.923 15.384 15.384 15.384h30c8.462 0 15.385-6.923 15.385-15.384V15.384c0-8.46-6.73-15.384-15.385-15.384z",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M81.154 113.462h-30c-8.462 0-15.385 6.923-15.385 15.385v155.77c0 8.46 6.923 15.384 15.385 15.384h30c8.461 0 15.384-6.923 15.384-15.385v-155.77c0-8.653-6.923-15.384-15.384-15.384z",
    fill: "var(--icon-color-3, currentColor)"
  }));
}
DashboardIcon.toString = () => "elephantkit-DashboardIcon";

// src/icon/generated/DataTransferHorizontal.tsx
init_react_import();
function DataTransferHorizontalIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "var(--icon-color-1, currentColor)",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M10.5 15h12.75M20.25 12l3 3-3 3"
  }), /* @__PURE__ */ React.createElement("path", {
    stroke: "var(--icon-color-2, currentColor)",
    fill: "none",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M13.5 9H.75M3.75 12l-3-3 3-3"
  }));
}
DataTransferHorizontalIcon.toString = () => "elephantkit-DataTransferHorizontalIcon";

// src/icon/generated/DataTransferVertical.tsx
init_react_import();
function DataTransferVerticalIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "var(--icon-color-1, currentColor)",
    strokeLinecap: "round",
    strokeWidth: 1.5,
    d: "M9 10.5v12.75M12 20.25l-3 3-3-3"
  }), /* @__PURE__ */ React.createElement("path", {
    stroke: "var(--icon-color-2, currentColor)",
    fill: "none",
    strokeLinecap: "round",
    strokeWidth: 1.5,
    d: "M15 13.5V.75M12 3.75l3-3 3 3"
  }));
}
DataTransferVerticalIcon.toString = () => "elephantkit-DataTransferVerticalIcon";

// src/icon/generated/DatabaseCheck.tsx
init_react_import();
function DatabaseCheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 9.751C5.787 9.751.75 7.736.75 5.251S5.787.751 12 .751s11.25 2.014 11.25 4.5c0 1.174-1.125 2.243-2.967 3.045M23.25 10.452V5.251",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 5.251v6c0 1.958 3.128 3.624 7.494 4.243",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 11.251v6c0 2.067 3.486 3.809 8.235 4.336",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.251,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.924 15.506l-2.905 3.874a.751.751 0 01-1.131.08l-1.5-1.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
DatabaseCheckIcon.toString = () => "elephantkit-DatabaseCheckIcon";

// src/icon/generated/DatabaseClock.tsx
init_react_import();
function DatabaseClockIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.251,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M19.902 17.251H17.25v-2.652M19.611 8.564c2.237-.822 3.639-2 3.639-3.313 0-2.486-5.037-4.5-11.25-4.5S.75 2.765.75 5.251s5.037 4.5 11.25 4.5M.75 11.251c0 1.984 3.211 3.668 7.667 4.266"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 5.251v12c0 2.125 3.683 3.906 8.635 4.377M23.25 10.543V5.251",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.611 8.564c2.237-.822 3.639-2 3.639-3.313 0-2.486-5.037-4.5-11.25-4.5S.75 2.765.75 5.251s5.037 4.5 11.25 4.5M.75 11.251c0 1.984 3.211 3.668 7.667 4.266",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 5.251v12c0 2.125 3.683 3.906 8.635 4.377M23.25 10.543V5.251",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
DatabaseClockIcon.toString = () => "elephantkit-DatabaseClockIcon";

// src/icon/generated/DatabaseDisable.tsx
init_react_import();
function DatabaseDisableIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 9.751C5.787 9.751.75 7.736.75 5.251S5.787.751 12 .751s11.25 2.014 11.25 4.5c0 1.181-1.138 2.256-3 3.059M23.25 10.501v-5.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 5.251v6c0 1.961 3.138 3.63 7.515 4.246",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 11.251v6c0 1.952 3.107 3.613 7.45 4.237",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.251,
    cy: 17.251,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M13.009 21.492l8.483-8.484"
  }));
}
DatabaseDisableIcon.toString = () => "elephantkit-DatabaseDisableIcon";

// src/icon/generated/DatabaseDownload.tsx
init_react_import();
function DatabaseDownloadIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 9.751C5.787 9.751.75 7.736.75 5.251S5.787.751 12 .751s11.25 2.014 11.25 4.5c0 1.327-1.435 2.519-3.719 3.343M23.25 9.751v-4.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 5.251v6c0 1.958 3.129 3.625 7.5 4.243",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 11.251v6c0 2.068 3.487 3.81 8.237 4.336",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.251,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 14.251v6M17.25 20.251L15 18.001M17.25 20.251l2.25-2.25"
  }));
}
DatabaseDownloadIcon.toString = () => "elephantkit-DatabaseDownloadIcon";

// src/icon/generated/DatabaseKey.tsx
init_react_import();
function DatabaseKeyIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M15.916 19.126a.375.375 0 10.375.375.375.375 0 00-.375-.375h0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.405 18.134l3.406-3.406a1.5 1.5 0 00-2.122-2.122l-3.406 3.406a3.75 3.75 0 102.122 2.122z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("ellipse", {
    cx: 12,
    cy: 5.251,
    rx: 11.25,
    ry: 4.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25 9.751v-4.5M.75 5.251v6c0 2.283 4.251 4.169 9.759 4.46"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 11.251v6c0 2.18 3.876 4 9.022 4.411",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
DatabaseKeyIcon.toString = () => "elephantkit-DatabaseKeyIcon";

// src/icon/generated/DatabaseSync.tsx
init_react_import();
function DatabaseSyncIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 9.751C5.787 9.751.75 7.736.75 5.251S5.787.751 12 .751s11.25 2.014 11.25 4.5c0 1.323-1.428 2.513-3.7 3.337M23.25 9.016V5.251",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 5.251v6c0 2.067 3.486 3.809 8.235 4.336",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 11.251v6c0 1.96 3.134 3.628 7.508 4.245M15 18.751h-3.75v3.75M22.667 19.484a5.572 5.572 0 01-10.74-.733M19.5 15.751h3.75v-3.75M11.833 15.017a5.573 5.573 0 0110.74.734",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
DatabaseSyncIcon.toString = () => "elephantkit-DatabaseSyncIcon";

// src/icon/generated/DatabaseWarning.tsx
init_react_import();
function DatabaseWarningIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M13.534 9.71C6.637 10.074.75 7.938.75 5.251c0-2.486 5.037-4.5 11.25-4.5s11.25 2.014 11.25 4.5c0 1.324-1.431 2.515-3.708 3.339M23.25 11.251v-6",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 5.251v6c0 2.281 4.245 4.166 9.748 4.46",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 11.251v6c0 1.96 3.135 3.628 7.509 4.245M17.25 20.251a.375.375 0 10.375.375.375.375 0 00-.375-.375h0M17.25 18.001v-3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M23.063 20.683a1.775 1.775 0 01-1.587 2.568h-8.452a1.775 1.775 0 01-1.587-2.568l4.226-8.452a1.775 1.775 0 013.174 0z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
DatabaseWarningIcon.toString = () => "elephantkit-DatabaseWarningIcon";

// src/icon/generated/Delete.tsx
init_react_import();
function DeleteIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 11.998,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M7.498 16.5l8.999-9M16.498 16.5l-9.001-9"
  }));
}
DeleteIcon.toString = () => "elephantkit-DeleteIcon";

// src/icon/generated/Diamond.tsx
init_react_import();
function DiamondIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M19.237 3.225a1.5 1.5 0 00-1.2-.6h-12a1.5 1.5 0 00-1.2.6L1.5 7.676a1.5 1.5 0 00.048 1.86l9.338 11.3a1.5 1.5 0 002.3 0l9.338-11.3a1.5 1.5 0 00.048-1.86zM5.349 2.792l6.688 18.583M18.724 2.792l-6.687 18.583M1.198 8.625h21.673",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M7.537 8.625l4.5-6 4.5 6"
  }));
}
DiamondIcon.toString = () => "elephantkit-DiamondIcon";

// src/icon/generated/Disable.tsx
init_react_import();
function DisableIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M19.968 4.067c-.006-.007-.007-.015-.014-.022s-.015-.008-.021-.014A11.244 11.244 0 004.024 19.924c.009.009.012.022.021.031s.021.011.031.02A11.243 11.243 0 0019.968 4.067zM12 4.5a7.444 7.444 0 013.8 1.046L5.547 15.8A7.484 7.484 0 0112 4.5zm0 15a7.45 7.45 0 01-3.8-1.047L18.454 8.2A7.486 7.486 0 0112 19.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
DisableIcon.toString = () => "elephantkit-DisableIcon";

// src/icon/generated/Dislike.tsx
init_react_import();
function DislikeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18.75 2.248a5.954 5.954 0 01-1.558-.229L13.558.981A6 6 0 0011.911.75H7.026a6 6 0 00-5.97 5.4l-.3 5.1a4.5 4.5 0 003.4 4.594l1.455.318a1.5 1.5 0 011.139 1.455V21a2.25 2.25 0 004.5 0v-1.554a7.5 7.5 0 017.5-7.5zM18.75.75h4.5v13.5h-4.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
DislikeIcon.toString = () => "elephantkit-DislikeIcon";

// src/icon/generated/DownloadCircle.tsx
init_react_import();
function DownloadCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M8.25 14.25L12 18l3.75-3.75M12 6.75V18"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
DownloadCircleIcon.toString = () => "elephantkit-DownloadCircleIcon";

// src/icon/generated/DownloadSquare.tsx
init_react_import();
function DownloadSquareIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 5.251v-3a1.5 1.5 0 011.5-1.5h3M.75 18.751v3a1.5 1.5 0 001.5 1.5h3M.75 9.751v4.5M23.25 5.251v-3a1.5 1.5 0 00-1.5-1.5h-3M23.25 18.751v3a1.5 1.5 0 01-1.5 1.5h-3M23.25 9.751v4.5M14.25 23.251h-4.5M14.25.751h-4.5M12 6.001v12M7.5 13.501l4.5 4.5 4.5-4.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
DownloadSquareIcon.toString = () => "elephantkit-DownloadSquareIcon";

// src/icon/generated/EasterEgg.tsx
init_react_import();
function EasterEggIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 12.489l7.553-3.332M1.157 16.439l9.227-4.071M5.886 18.228a.375.375 0 01.375.375M5.511 18.6a.375.375 0 01.375-.375M5.886 18.978a.375.375 0 01-.375-.375M6.261 18.6a.375.375 0 01-.375.375M4.875 6.75a.375.375 0 01.375.375M4.5 7.125a.375.375 0 01.375-.375M4.875 7.5a.375.375 0 01-.375-.375M5.25 7.125a.375.375 0 01-.375.375M10.125 15.75a.375.375 0 01.375.375M9.75 16.125a.375.375 0 01.375-.375M10.125 16.5a.375.375 0 01-.375-.375M10.5 16.125a.375.375 0 01-.375.375M10.875 19.5a.375.375 0 01.375.375M10.5 19.875a.375.375 0 01.375-.375M10.875 20.25a.375.375 0 01-.375-.375M11.25 19.875a.375.375 0 01-.375.375"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M20.188 15.991a7.8 7.8 0 01-1.72 3.932 9.75 9.75 0 01-7.788 3.327C5.2 23.25.75 19.942.75 13.114S5.2.75 10.68.75a8.891 8.891 0 016.59 3.114",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M14.358 6.382L11.973 5.3a2.928 2.928 0 00-2.055-.1h0a2.579 2.579 0 00-1.875 3.118l.794 2.559a2.586 2.586 0 003.328 1.483h0a2.93 2.93 0 001.635-1.252l.714-1.183",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 15.819,
    cy: 8.094,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M13.571 8l-2.276.701M17.625 6.751l2.271-.7M19.8 9.641l2.958 4.459a.286.286 0 01-.266.441l-1.427-.141a.284.284 0 00-.3.2l-.354 1.186a.284.284 0 01-.5.085L17.6 12.638a.286.286 0 00-.518.159l-.091 3.974a.285.285 0 01-.465.214l-.96-.782a.285.285 0 00-.364 0l-1.1.922a.285.285 0 01-.468-.215l-.07-5.476"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M16.04 5.854l1.385-2.237a2.929 2.929 0 011.645-1.235h0a2.578 2.578 0 013.3 1.521l.784 2.562a2.587 2.587 0 01-1.917 3.1h0a2.921 2.921 0 01-2.053-.117l-1.257-.576",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
EasterEggIcon.toString = () => "elephantkit-EasterEggIcon";

// src/icon/generated/Edit.tsx
init_react_import();
function EditIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12.667 14.136l-3.712.531.53-3.713 9.546-9.546a2.25 2.25 0 013.182 3.182z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.122 14.25v7.5a1.5 1.5 0 01-1.5 1.5h-15a1.5 1.5 0 01-1.5-1.5v-15a1.5 1.5 0 011.5-1.5h7.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
EditIcon.toString = () => "elephantkit-EditIcon";

// src/icon/generated/EmailAdd.tsx
init_react_import();
function EmailAddIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 14.25v6M14.25 17.25h6M8.25 15.75h-6a1.5 1.5 0 01-1.5-1.5v-12a1.5 1.5 0 011.5-1.5h18a1.5 1.5 0 011.5 1.5V9"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M21.411 1.3l-8.144 6.264a3.308 3.308 0 01-4.034 0L1.089 1.3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
EmailAddIcon.toString = () => "elephantkit-EmailAddIcon";

// src/icon/generated/EmailCheck.tsx
init_react_import();
function EmailCheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.924 15.506l-2.905 3.873a.752.752 0 01-1.131.081l-1.5-1.5M8.25 15.75h-6a1.5 1.5 0 01-1.5-1.5v-12a1.5 1.5 0 011.5-1.5h18a1.5 1.5 0 011.5 1.5V9",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M21.411 1.3l-8.144 6.264a3.308 3.308 0 01-4.034 0L1.089 1.3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
EmailCheckIcon.toString = () => "elephantkit-EmailCheckIcon";

// src/icon/generated/EmailCircle.tsx
init_react_import();
function EmailCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 5.25,
    y: 6.75,
    width: 13.5,
    height: 10.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M5.25 8.25L12 12l6.75-3.75"
  }));
}
EmailCircleIcon.toString = () => "elephantkit-EmailCircleIcon";

// src/icon/generated/EmailRemove.tsx
init_react_import();
function EmailRemoveIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M19.5 15L15 19.5M15 15l4.5 4.5M8.25 15.75h-6a1.5 1.5 0 01-1.5-1.5v-12a1.5 1.5 0 011.5-1.5h18a1.5 1.5 0 011.5 1.5V9"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M21.411 1.3l-8.144 6.264a3.308 3.308 0 01-4.034 0L1.089 1.3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
EmailRemoveIcon.toString = () => "elephantkit-EmailRemoveIcon";

// src/icon/generated/Email.tsx
init_react_import();
function EmailIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#EBE7E6,#AC864C,#C29B63",
    viewBox: "0 0 300 300",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M227.538 47.954H68.447c-8.313 0-15.152 6.84-15.152 15.152v57.254l96.591 45.454 92.69-43.56V63.106c0-8.27-6.77-15.09-15.038-15.152z",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M53.295 120.36v.019h.038l-.038-.02z",
    fill: "var(--icon-color-3, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M242.69 147.367l-86.232 40.625a15.159 15.159 0 01-12.916 0l-90.247-42.5L0 120.38v145.056c0 8.313 6.839 15.152 15.151 15.152H284.85c8.312 0 15.151-6.84 15.151-15.152V120.38l-57.31 26.988z",
    fill: "var(--icon-color-2, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M242.69 78.901v43.353l3.977-1.875 32.31-15.228-36.288-26.25zM141.117 18.257l-41.041 29.697h99.848l-41.041-29.697c-5.286-3.825-12.48-3.825-17.766 0zM53.295 81.799l-32.272 23.352 32.272 15.209V81.799z",
    fill: "var(--icon-color-3, currentColor)"
  }));
}
EmailIcon.toString = () => "elephantkit-EmailIcon";

// src/icon/generated/Envelope.tsx
init_react_import();
function EnvelopeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 1024 1024"
  }, props), /* @__PURE__ */ React.createElement("style", null), /* @__PURE__ */ React.createElement("path", {
    d: "M902 179.2H122c-53.8 0-97.5 43.7-97.5 97.5v470.6c0 53.8 43.7 97.5 97.5 97.5h780c53.8 0 97.5-43.7 97.5-97.5V276.7c0-53.8-43.7-97.5-97.5-97.5zm-35.3 75L526.9 554.7c-8.5 7.5-21.3 7.5-29.8 0L157.3 254.2h709.4zM902 769.8H122c-12.4 0-22.5-10.1-22.5-22.5V303.2l347.9 307.7c18.4 16.3 41.5 24.4 64.6 24.4s46.2-8.1 64.6-24.4l347.9-307.7v444.1c0 12.4-10.1 22.5-22.5 22.5z"
  }));
}
EnvelopeIcon.toString = () => "elephantkit-EnvelopeIcon";

// src/icon/generated/Expand.tsx
init_react_import();
function ExpandIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M9.75 14.248l-9 9M23.25 7.498V.748H16.5M.75 16.498v6.75H7.5M23.25.748l-9 9"
  }));
}
ExpandIcon.toString = () => "elephantkit-ExpandIcon";

// src/icon/generated/ExternalLink.tsx
init_react_import();
function ExternalLinkIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.251 7.498V.748h-6.75M23.251.748l-15 15M11.251 5.248h-9a1.5 1.5 0 00-1.5 1.5v15a1.5 1.5 0 001.5 1.5h15a1.5 1.5 0 001.5-1.5v-9"
  }));
}
ExternalLinkIcon.toString = () => "elephantkit-ExternalLinkIcon";

// src/icon/generated/Facebook.tsx
init_react_import();
function FacebookIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18.13 7.75h-4.26V5.84a1 1 0 011-1.1h3v-4h-4.33c-3.93 0-4.67 3-4.67 4.86v2.15h-3v4h3v11.5h5v-11.5h3.85z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
FacebookIcon.toString = () => "elephantkit-FacebookIcon";

// src/icon/generated/FamilyHeads.tsx
init_react_import();
function FamilyHeadsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 5.259,
    cy: 6,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M7.747 11.25A4.5 4.5 0 00.759 15M22.509 15a4.5 4.5 0 00-6.988-3.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 18.009,
    cy: 6,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.009 6s0 3.75-2.25 3.75M21.009 6s0 3.75 2.25 3.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 11.259,
    cy: 15,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.156 20.25a4.5 4.5 0 00-7.793 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
FamilyHeadsIcon.toString = () => "elephantkit-FamilyHeadsIcon";

// src/icon/generated/Family.tsx
init_react_import();
function FamilyIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 19.5,
    cy: 5.25,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.812 20.25l.188 1.5h3l.75-6h1.5V13.5a3.75 3.75 0 00-6-3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 4.5,
    cy: 5.25,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M6.188 20.25L6 21.75H3l-.75-6H.75V13.5a3.75 3.75 0 016-3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 9,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12 12.75a3.75 3.75 0 00-3.75 3.75v.75h1.5l.75 4.5H12M12 12.75a3.75 3.75 0 013.75 3.75v.75h-1.5l-.75 4.5H12",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
FamilyIcon.toString = () => "elephantkit-FamilyIcon";

// src/icon/generated/Feather.tsx
init_react_import();
function FeatherIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M21.554 2.446L.75 23.25M15.925 16.264l-3.583-.512M18.995 13.193l-3.582-.512M5.061 10.75A4.346 4.346 0 003.8 14.11l.381 5.71 5.71.381a4.346 4.346 0 003.36-1.262l8.3-8.3a5.79 5.79 0 10-8.188-8.188z"
  }));
}
FeatherIcon.toString = () => "elephantkit-FeatherIcon";

// src/icon/generated/FileAdd.tsx
init_react_import();
function FileAddIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 14.25v6M14.25 17.25h6M3.75 6.75h10.5M3.75 11.25h6M3.75 15.75H7.5M7.5 20.25H2.25a1.5 1.5 0 01-1.5-1.5V2.25a1.5 1.5 0 011.5-1.5h10.629a1.5 1.5 0 011.06.439l2.872 2.872a1.5 1.5 0 01.439 1.06V7.5"
  }));
}
FileAddIcon.toString = () => "elephantkit-FileAddIcon";

// src/icon/generated/FileEdit.tsx
init_react_import();
function FileEditIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M22.63 14.87L15 22.5l-3.75.75.75-3.75 7.63-7.63a2.114 2.114 0 012.992 0l.008.008a2.114 2.114 0 010 2.992zM3.75 6.75h10.5M3.75 11.25h10.5M3.75 15.75H9M7.5 20.25H2.25a1.5 1.5 0 01-1.5-1.5V2.25a1.5 1.5 0 011.5-1.5h10.629a1.5 1.5 0 011.06.439l2.872 2.872a1.5 1.5 0 01.439 1.06V8.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
FileEditIcon.toString = () => "elephantkit-FileEditIcon";

// src/icon/generated/Filter.tsx
init_react_import();
function FilterIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.2 2.054a.751.751 0 00-.748-.8H1.5a.75.75 0 00-.748.8 11.254 11.254 0 008.972 10.22v9.875a.75.75 0 001.23.576l3-2.5a.748.748 0 00.27-.576v-7.375A11.253 11.253 0 0023.2 2.054z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
FilterIcon.toString = () => "elephantkit-FilterIcon";

// src/icon/generated/Flag.tsx
init_react_import();
function FlagIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75.75v22.5M.75 2.25h12a1.5 1.5 0 011.5 1.5v12H.75M9.75 20.25a4.5 4.5 0 014.5-4.5"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M14.25 6.75h8.25A.75.75 0 0123.059 8l-4 4.505a1.5 1.5 0 000 1.994l4 4.5a.75.75 0 01-.56 1.248H9a1.5 1.5 0 01-1.5-1.5v-3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
FlagIcon.toString = () => "elephantkit-FlagIcon";

// src/icon/generated/FlashOff.tsx
init_react_import();
function FlashOffIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.961 12.747l.887-1.441a1.023 1.023 0 00-.871-1.559H13.5v-9L10.269 6M7.039 11.247l-.887 1.442a1.022 1.022 0 00.871 1.558H10.5v9L13.731 18M2.25 2.247l19.5 19.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
FlashOffIcon.toString = () => "elephantkit-FlashOffIcon";

// src/icon/generated/Flash.tsx
init_react_import();
function FlashIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M17.848 11.306a1.023 1.023 0 00-.871-1.559H13.5v-9L6.152 12.689a1.022 1.022 0 00.871 1.558H10.5v9z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
FlashIcon.toString = () => "elephantkit-FlashIcon";

// src/icon/generated/FloppyDisk.tsx
init_react_import();
function FloppyDiskIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M21.75 23.25H2.25a1.5 1.5 0 01-1.5-1.5V7.243a3 3 0 01.879-2.121l3.492-3.493A3 3 0 017.243.75H21.75a1.5 1.5 0 011.5 1.5v19.5a1.5 1.5 0 01-1.5 1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M8.25.75v6a1.5 1.5 0 001.5 1.5h7.5a1.5 1.5 0 001.5-1.5v-6M15.75 3.75v1.5M17.25 12.75H6.75a1.5 1.5 0 00-1.5 1.5v9h13.5v-9a1.5 1.5 0 00-1.5-1.5zM8.25 15.75h4.5M8.25 18.75h7.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
FloppyDiskIcon.toString = () => "elephantkit-FloppyDiskIcon";

// src/icon/generated/FontSize.tsx
init_react_import();
function FontSizeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 12.749h10.5M15.75 17.249h7.5M15.75 21.749V13.5a3.75 3.75 0 017.5 0v8.25M.75 21.749V7.5a5.25 5.25 0 0110.5 0v14.25"
  }));
}
FontSizeIcon.toString = () => "elephantkit-FontSizeIcon";

// src/icon/generated/GenericEmpty.tsx
init_react_import();
function GenericEmptyIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    width: 200,
    height: 200,
    viewBox: "0 0 150 150"
  }, props), /* @__PURE__ */ React.createElement("defs", null, /* @__PURE__ */ React.createElement("clipPath", {
    id: "generic-empty_svg__a"
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M74.477 0H150v75.523H74.477zm0 0"
  })), /* @__PURE__ */ React.createElement("clipPath", {
    id: "generic-empty_svg__b"
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M74.477 74.477H150V150H74.477zm0 0"
  })), /* @__PURE__ */ React.createElement("clipPath", {
    id: "generic-empty_svg__c"
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M15 18.457h113.004v113.25H15zm0 0"
  }))), /* @__PURE__ */ React.createElement("g", {
    clipPath: "url(#generic-empty_svg__a)"
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M74.477 75.523H150C150 33.813 116.187 0 74.477 0c.343 0 0 33.813 0 75.523zm0 0",
    fillRule: "evenodd",
    fill: "#ba7765"
  })), /* @__PURE__ */ React.createElement("g", {
    clipPath: "url(#generic-empty_svg__b)"
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M74.477 74.477V150C116.187 150 150 116.187 150 74.477c0 .343-33.813 0-75.523 0zm0 0",
    fillRule: "evenodd",
    fill: "#ba7765"
  })), /* @__PURE__ */ React.createElement("g", {
    clipPath: "url(#generic-empty_svg__c)"
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M1210.502 374.005c0 5.82-.286 11.639-.857 17.446a176.582 176.582 0 01-2.572 17.273 176.438 176.438 0 01-10.123 33.4 181.347 181.347 0 01-7.465 15.78 178.104 178.104 0 01-8.98 14.993 179.392 179.392 0 01-10.41 14.03 181.383 181.383 0 01-11.725 12.933 178.642 178.642 0 01-12.943 11.738 179.84 179.84 0 01-14.036 10.405 178.818 178.818 0 01-30.767 16.447 176.35 176.35 0 01-16.459 5.881 177.186 177.186 0 01-16.942 4.254 177.326 177.326 0 01-17.278 2.552c-5.8.58-11.614.863-17.44.863-5.838 0-11.65-.284-17.451-.863a177.326 177.326 0 01-17.278-2.552 178.123 178.123 0 01-16.943-4.254 176.115 176.115 0 01-16.446-5.88 177.394 177.394 0 01-15.8-7.472 177.32 177.32 0 01-29.004-19.381 173.567 173.567 0 01-12.942-11.738 178.627 178.627 0 01-11.738-12.933 179.392 179.392 0 01-10.41-14.03 184.99 184.99 0 01-8.98-14.992 181.347 181.347 0 01-7.465-15.782 180.084 180.084 0 01-5.887-16.447 177.06 177.06 0 01-4.236-16.952c-1.143-5.72-2-11.478-2.571-17.273a178.115 178.115 0 010-34.904 176.582 176.582 0 012.57-17.273 175.904 175.904 0 014.237-16.94 177.478 177.478 0 015.887-16.447 179.89 179.89 0 017.465-15.793 182.665 182.665 0 018.98-14.98 174.87 174.87 0 0110.41-14.03 176.254 176.254 0 0111.738-12.946 173.567 173.567 0 0112.943-11.737 177.32 177.32 0 0114.024-10.406 179.807 179.807 0 0114.98-8.976 177.394 177.394 0 0115.8-7.471 178.061 178.061 0 0133.388-10.122 173.676 173.676 0 0117.278-2.565c5.8-.58 11.613-.863 17.451-.863 5.826 0 11.64.284 17.44.863 5.8.567 11.564 1.418 17.278 2.565a177.127 177.127 0 0116.942 4.24 176.35 176.35 0 0116.458 5.882 178.818 178.818 0 0130.768 16.447 179.84 179.84 0 0114.036 10.406 178.642 178.642 0 0112.943 11.737 178.935 178.935 0 0111.725 12.945 174.87 174.87 0 0110.41 14.03 175.942 175.942 0 018.98 14.98 179.89 179.89 0 017.465 15.794 173.936 173.936 0 015.888 16.447 175.904 175.904 0 014.235 16.94c1.143 5.72 2 11.479 2.572 17.273.571 5.807.857 11.627.857 17.458zm0 0",
    transform: "matrix(.31448 0 0 .31683 -253.2 -43.325)",
    fill: "none",
    strokeWidth: 2,
    stroke: "#e0a961"
  })));
}
GenericEmptyIcon.toString = () => "elephantkit-GenericEmptyIcon";

// src/icon/generated/GestureTapSwipeDown.tsx
init_react_import();
function GestureTapSwipeDownIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 6.108l3.094-3.789a1.637 1.637 0 011.675-.566h0a1.637 1.637 0 011.068 2.321L6 5.248h6.75a1.5 1.5 0 011.5 1.5h0a1.5 1.5 0 01-1.5 1.5h-4.5l-.332 1.994a3 3 0 01-2.959 2.506H.75M15.75 23.248v-7.5M19.5 19.498l-3.75 3.75-3.75-3.75M11.507 10.991a6 6 0 100-8.485",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
GestureTapSwipeDownIcon.toString = () => "elephantkit-GestureTapSwipeDownIcon";

// src/icon/generated/GestureTapSwipeLeft.tsx
init_react_import();
function GestureTapSwipeLeftIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.608 22.248l-3.789-3.093a1.639 1.639 0 01-.566-1.676h0a1.638 1.638 0 012.321-1.068l1.174.589v-6.75a1.5 1.5 0 011.5-1.5h0a1.5 1.5 0 011.5 1.5v4.5l1.993.333a3 3 0 012.507 2.959v4.208M.748 7.248h7.5M4.498 3.498l-3.75 3.75 3.75 3.75M13.005 12.241a6 6 0 118.486 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
GestureTapSwipeLeftIcon.toString = () => "elephantkit-GestureTapSwipeLeftIcon";

// src/icon/generated/GestureTapSwipeRight.tsx
init_react_import();
function GestureTapSwipeRightIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M6.108 22l-3.789-3.095a1.639 1.639 0 01-.566-1.676h0a1.638 1.638 0 012.321-1.068l1.174.587V10a1.5 1.5 0 011.5-1.5h0a1.5 1.5 0 011.5 1.5v4.5l1.993.333a3 3 0 012.507 2.959V22M23.248 6.998h-7.5M19.498 3.248l3.75 3.75-3.75 3.75M10.991 11.991a6 6 0 10-8.485 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
GestureTapSwipeRightIcon.toString = () => "elephantkit-GestureTapSwipeRightIcon";

// src/icon/generated/GestureTapSwipeUp.tsx
init_react_import();
function GestureTapSwipeUpIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M1.5 16.608l3.093-3.789a1.639 1.639 0 011.676-.566h0a1.638 1.638 0 011.068 2.321l-.587 1.174h6.75a1.5 1.5 0 011.5 1.5h0a1.5 1.5 0 01-1.5 1.5H9l-.332 1.994a3 3 0 01-2.96 2.506H1.5M16.498.748v7.5M20.248 4.498l-3.75-3.75-3.75 3.75M12.255 13.006a6 6 0 110 8.485",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
GestureTapSwipeUpIcon.toString = () => "elephantkit-GestureTapSwipeUpIcon";

// src/icon/generated/Gift.tsx
init_react_import();
function GiftIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M21.75 11.25H2.25v10.5a1.5 1.5 0 001.5 1.5h16.5a1.5 1.5 0 001.5-1.5zM21.75 6.75H2.25a1.5 1.5 0 00-1.5 1.5v2.25a.75.75 0 00.75.75h21a.75.75 0 00.75-.75V8.25a1.5 1.5 0 00-1.5-1.5zM11.25 6.75c-3.314 0-6.75-2.686-6.75-6M4.5.75c3.314 0 6.75 2.686 6.75 6M12.75 6.75c3.314 0 6.75-2.686 6.75-6M19.5.75c-3.314 0-6.75 2.686-6.75 6",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M9.75 6.75h4.5v16.5h-4.5z"
  }));
}
GiftIcon.toString = () => "elephantkit-GiftIcon";

// src/icon/generated/Give.tsx
init_react_import();
function GiveIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "var(--gc-colors-rose)",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 1024 1024"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M571.2 455.5c15.4 9.6 33 14.4 50.6 14.4s35.2-4.8 50.6-14.4c59.2-37 159.9-115.7 169.3-227.3 2.7-32-5.3-64.2-22.5-90.7-18.1-27.9-45.5-47.7-76.9-55.8-29.7-7.6-61.6-4.9-89.8 7.6-11.1 4.9-21.5 11.3-30.7 18.8-9.3-7.5-19.6-13.9-30.7-18.8-28.2-12.5-60-15.2-89.8-7.6-31.5 8.1-58.8 27.9-76.9 55.8-17.2 26.5-25.2 58.7-22.5 90.7 9.4 111.6 110.1 190.3 169.3 227.3zm-84-277.1c5.6-8.6 15.7-19.7 32.7-24 5.3-1.4 10.6-2 15.6-2 24 0 44.2 14.2 53.3 31 6.6 12.1 19.2 19.6 33 19.6s26.4-7.5 33-19.6c11.1-20.4 38.3-36.8 68.9-29 16.9 4.3 27.1 15.4 32.7 24 8.2 12.6 11.9 28 10.6 43.5-6.9 82-96.3 146.2-134.3 170.1-6.6 4.1-15.1 4.1-21.7 0-38.1-23.8-127.4-88-134.3-170.1-1.4-15.5 2.3-30.9 10.5-43.5z",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M969.2 523.5c-37.3-26.7-89.3-22.9-132.4 9.7l-56 40.8c-30.2-21.6-71-33-118.2-33h-88.3l-226.9-77.3c-3.9-1.3-8-2-12.1-2H228.4v-22.6c0-20.7-16.8-37.5-37.5-37.5h-137c-20.7 0-37.5 16.8-37.5 37.5V812c0 20.7 16.8 37.5 37.5 37.5h137c20.7 0 37.5-16.8 37.5-37.5v-11.2c28.1 8.9 58.8 29.4 93 52.3 65.3 43.6 146.5 97.9 255.9 97.9 131.8 0 237.9-41.1 315.3-122.2 60.6-63.5 90.1-136.7 109-193.4 14.5-43.5 1.8-87.4-32.4-111.9zm-815.8 251h-62V476.6h62v297.9zm777.1-162.9C914 660.9 888.7 724.2 838.4 777c-28.5 29.9-62.5 53.3-100.8 69.6-46.1 19.5-100 29.4-160.2 29.4-86.6 0-151.5-43.4-214.2-85.3-44.9-30-87.7-58.6-134.7-67.1V536.7h100.7L556 614c3.9 1.3 8 2 12.1 2h94.5c60.3 0 92.9 25 92.9 48.4 0 10.3-6.5 20.5-18.2 28.9-18.1 12.9-46.9 20-81.1 20h-178c-20.7 0-37.5 16.8-37.5 37.5s16.8 37.5 37.5 37.5h178c119.7 0 174.3-64.3 174.3-123.9 0-10.4-1.6-20.6-4.7-30.4l55.4-40.4c.2-.1.4-.3.6-.5 20-15.2 36-14.1 43.7-8.6 7.2 5.2 9 15 5 27.1z",
    fill: "var(--icon-color-2, currentColor)"
  }));
}
GiveIcon.toString = () => "elephantkit-GiveIcon";

// src/icon/generated/Giving.tsx
init_react_import();
function GivingIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    viewBox: "0 0 300 300",
    xmlns: "http://www.w3.org/2000/svg",
    "data-default-colors": "#856189,#BA94BE",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M274.254 165.964l-124.42-124.42a88.044 88.044 0 00-62.228-25.772 88.043 88.043 0 00-63.274 26.836c-33.2 34.338-32.043 89.148 1.082 123.356l1.008-1.008v2.053l112.85 112.868a14.933 14.933 0 0021.125 0l113.838-113.839.019-.074z",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M167.936 27.977l120.165 120.146c20.326-34.922 14.134-79.57-14.93-107.643-28.758-27.843-71.886-31.52-105.235-12.503z",
    fill: "var(--icon-color-2, currentColor)"
  }));
}
GivingIcon.toString = () => "elephantkit-GivingIcon";

// src/icon/generated/GraphStatsCircle.tsx
init_react_import();
function GraphStatsCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M3.75 12.75h3L9.01 7.1a.749.749 0 011.4.029l3.292 9.325a.75.75 0 001.358.123l2.19-3.827h3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
GraphStatsCircleIcon.toString = () => "elephantkit-GraphStatsCircleIcon";

// src/icon/generated/GraphStats.tsx
init_react_import();
function GraphStatsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 11.75h3.5a1.5 1.5 0 001.385-.923l2.6-6.115a.75.75 0 011.4.051l4.734 14.725a.75.75 0 001.4.051l2.595-6.866a1.5 1.5 0 011.385-.923h3.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
GraphStatsIcon.toString = () => "elephantkit-GraphStatsIcon";

// src/icon/generated/GridFour.tsx
init_react_import();
function GridFourIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 0.747,
    width: 9,
    height: 9,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 14.247,
    width: 9,
    height: 9,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 14.25,
    y: 0.747,
    width: 9,
    height: 9,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 14.25,
    y: 14.247,
    width: 9,
    height: 9,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
GridFourIcon.toString = () => "elephantkit-GridFourIcon";

// src/icon/generated/GridNine.tsx
init_react_import();
function GridNineIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 0.747,
    width: 4.5,
    height: 4.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 9.75,
    y: 0.747,
    width: 4.5,
    height: 4.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 18.75,
    y: 0.747,
    width: 4.5,
    height: 4.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 9.747,
    width: 4.5,
    height: 4.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 9.75,
    y: 9.747,
    width: 4.5,
    height: 4.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 18.75,
    y: 9.747,
    width: 4.5,
    height: 4.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 18.747,
    width: 4.5,
    height: 4.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 9.75,
    y: 18.747,
    width: 4.5,
    height: 4.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 18.75,
    y: 18.747,
    width: 4.5,
    height: 4.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
GridNineIcon.toString = () => "elephantkit-GridNineIcon";

// src/icon/generated/Hamburger.tsx
init_react_import();
function HamburgerIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M2.25 18.003h19.5M2.25 12.003h19.5M2.25 6.003h19.5"
  }));
}
HamburgerIcon.toString = () => "elephantkit-HamburgerIcon";

// src/icon/generated/HammerWrench.tsx
init_react_import();
function HammerWrenchIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M8.307 10.422L7.259 9.378A4.543 4.543 0 011.193 3.33l1.425 1.421a1.514 1.514 0 102.144-2.138l-1.424-1.42A4.542 4.542 0 019.4 7.24l.97.967M15.319 13.136l1.422 1.418a4.543 4.543 0 016.066 6.046l-1.425-1.42a1.514 1.514 0 00-2.144 2.138l1.424 1.42a4.542 4.542 0 01-6.062-6.046l-1.422-1.418M1.445 22.6h0a2.233 2.233 0 010-3.167l4.695-4.686a.75.75 0 011.059 0l2.118 2.111a.746.746 0 010 1.056L4.621 22.6a2.251 2.251 0 01-3.176 0zM16.586 1.188l6.221 6.2a1.489 1.489 0 010 2.111l-2.117 2.113a1.5 1.5 0 01-2.118 0l-6.221-6.2a1.489 1.489 0 010-2.111l2.117-2.111a1.5 1.5 0 012.118-.002zM15.527 8.577l-7.369 7.126",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
HammerWrenchIcon.toString = () => "elephantkit-HammerWrenchIcon";

// src/icon/generated/HandshakeCircle.tsx
init_react_import();
function HandshakeCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M18.75 14.004l-4.787.957M14.438 9.531l-2.26.955a1.42 1.42 0 01-1.122-.016 1.478 1.478 0 01-.781-.83 1.525 1.525 0 01.706-1.9l2.259-1.127a1.961 1.961 0 011.594-.094l4.639 1.828"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M5.2 15h1.6l3.049 2.326a.83.83 0 001.15.09l4.26-3.518a.842.842 0 00.129-1.164l-2.347-2.609M10.736 7.9l-.247-.2a1.787 1.787 0 00-1.725-.221L5.194 9",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M1.39 15.75h2.66a1.141 1.141 0 001.2-1.072V9.321a1.141 1.141 0 00-1.2-1.071H1.39M22.61 15.75h-2.66a1.141 1.141 0 01-1.2-1.072V9.321a1.141 1.141 0 011.2-1.071h2.66",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
HandshakeCircleIcon.toString = () => "elephantkit-HandshakeCircleIcon";

// src/icon/generated/Handshake.tsx
init_react_import();
function HandshakeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M20.29 14.34l-5.16.986M14.416 8.478l-3.468 1.146a1.151 1.151 0 01-1.405-.611 1.164 1.164 0 01.529-1.53l3.359-1.689a2.343 2.343 0 011.861-.108l4.973 1.819"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M3.685 14.348H6.13l3.512 3.936A1.342 1.342 0 0012 17.408v-.615l.175.07a1.656 1.656 0 002.271-1.537h.489a1.468 1.468 0 001.174-2.348L12.97 8.956M10.583 7.225l-.358-.295a2.1 2.1 0 00-1.245-.409 2.081 2.081 0 00-.779.151L3.75 8.452",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 6.75h2a.961.961 0 011 .916v6.417a.962.962 0 01-1 .917h-2M23.25 15h-2a.962.962 0 01-1-.917V7.666a.961.961 0 011-.916h2M12 16.793l-.978-.978M14.446 15.326l-1.468-1.468",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
HandshakeIcon.toString = () => "elephantkit-HandshakeIcon";

// src/icon/generated/Hash.tsx
init_react_import();
function HashIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M3.75 8.248h19.5M.75 17.248h19.5M12 .748l-7.5 22.5M19.5.748l-7.5 22.5"
  }));
}
HashIcon.toString = () => "elephantkit-HashIcon";

// src/icon/generated/Headphones.tsx
init_react_import();
function HeadphonesIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M4.5 18.011h-.75a3 3 0 01-3-3v-3a3 3 0 013-3h.75c.414 0 1.5.336 1.5.75v7.5c0 .414-1.086.75-1.5.75zM20.25 18.011h-.75c-.414 0-1.5-.336-1.5-.75v-7.5c0-.414 1.086-.75 1.5-.75h.75a3 3 0 013 3v3a3 3 0 01-3 3zM3.75 9.011A8.25 8.25 0 0112 .761h0a8.25 8.25 0 018.25 8.25M15 21.761h2.25a3 3 0 003-3h0v-.75M13.5 23.261h-3a1.5 1.5 0 01-1.5-1.5h0a1.5 1.5 0 011.5-1.5h3a1.5 1.5 0 011.5 1.5h0a1.5 1.5 0 01-1.5 1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
HeadphonesIcon.toString = () => "elephantkit-HeadphonesIcon";

// src/icon/generated/HelpCallout.tsx
init_react_import();
function HelpCalloutIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M21.75 18.75h-10.5l-6 4.5v-4.5h-3a1.5 1.5 0 01-1.5-1.5v-15a1.5 1.5 0 011.5-1.5h19.5a1.5 1.5 0 011.5 1.5v15a1.5 1.5 0 01-1.5 1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M9 6.75a3 3 0 114 2.829 1.5 1.5 0 00-1 1.415v.256M12 14.25a.375.375 0 10.375.375.375.375 0 00-.375-.375h0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
HelpCalloutIcon.toString = () => "elephantkit-HelpCalloutIcon";

// src/icon/generated/HomeBold.tsx
init_react_import();
function HomeBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.707 11.293l-3.134-3.134a.249.249 0 01-.073-.177V2a1 1 0 00-1-1h-3a1 1 0 00-1 1v.482a.25.25 0 01-.427.177L12.707.293a1 1 0 00-1.414 0l-11 11A1 1 0 001 13h1.25a.25.25 0 01.25.25V23a1 1 0 001 1h5.75a.25.25 0 00.25-.25V19a2.5 2.5 0 015 0v4.75a.25.25 0 00.25.25h5.75a1 1 0 001-1v-9.75a.25.25 0 01.25-.25H23a1 1 0 00.707-1.707z"
  }));
}
HomeBoldIcon.toString = () => "elephantkit-HomeBoldIcon";

// src/icon/generated/Home.tsx
init_react_import();
function HomeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M3.754 13.923v8.25h6v-6a1.5 1.5 0 011.5-1.5h1.5a1.5 1.5 0 011.5 1.5v6h6v-8.25M.754 12.423l10.19-10.189a1.5 1.5 0 012.121 0l10.189 10.189M16.504 5.673v-1.5h3.75v5.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
HomeIcon.toString = () => "elephantkit-HomeIcon";

// src/icon/generated/Hyperlink.tsx
init_react_import();
function HyperlinkIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M10.082 9.5A4.47 4.47 0 006.75 8h-1.5a4.5 4.5 0 000 9h1.5a4.474 4.474 0 003.332-1.5M13.918 9.5A4.469 4.469 0 0117.25 8h1.5a4.5 4.5 0 110 9h-1.5a4.472 4.472 0 01-3.332-1.5M6.75 12.499h10.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
HyperlinkIcon.toString = () => "elephantkit-HyperlinkIcon";

// src/icon/generated/ImageAdd.tsx
init_react_import();
function ImageAddIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    viewBox: "0 0 48 48",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /* @__PURE__ */ React.createElement("g", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }, /* @__PURE__ */ React.createElement("path", {
    d: "M22.5 34.5a12 12 0 1024 0 12 12 0 10-24 0zM34.5 28.5v12M28.5 34.5h12",
    strokeWidth: 3
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M16.5 40.5h-12a3 3 0 01-3-3v-33a3 3 0 013-3h21.258a3 3 0 012.12.878l5.744 5.744a3 3 0 01.878 2.12V16.5",
    strokeWidth: 3
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M10.5 11.25a.75.75 0 11-.75.75.75.75 0 01.75-.75M24.558 19.8L22.5 16.5a1.498 1.498 0 00-2.476-.028l-4 5.702L13.56 20.2a1.5 1.5 0 00-2.186.338L7.5 28.5h9",
    strokeWidth: 3
  })));
}
ImageAddIcon.toString = () => "elephantkit-ImageAddIcon";

// src/icon/generated/IndentDecrease.tsx
init_react_import();
function IndentDecreaseIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M11.25 2.998h12M17.25 7.498h6M17.25 11.998h6M17.25 16.498h6M11.25 20.998h12M8.25 7.5V5.248a.75.75 0 00-1.28-.531l-5.86 6.305a1.5 1.5 0 000 1.949l5.86 6.305a.75.75 0 001.28-.53V16.5h4.5a1.5 1.5 0 001.5-1.5V9a1.5 1.5 0 00-1.5-1.5z"
  }));
}
IndentDecreaseIcon.toString = () => "elephantkit-IndentDecreaseIcon";

// src/icon/generated/IndentIncrease.tsx
init_react_import();
function IndentIncreaseIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12.75 2.998h-12M6.75 7.498h-6M6.75 11.998h-6M6.75 16.498h-6M12.75 20.998h-12M15.75 7.5V5.248a.751.751 0 011.281-.531l5.86 6.305a1.5 1.5 0 010 1.949l-5.86 6.305a.75.75 0 01-1.281-.53V16.5h-4.5a1.5 1.5 0 01-1.5-1.5V9a1.5 1.5 0 011.5-1.5z"
  }));
}
IndentIncreaseIcon.toString = () => "elephantkit-IndentIncreaseIcon";

// src/icon/generated/InformationCircleBold.tsx
init_react_import();
function InformationCircleBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z"
  }));
}
InformationCircleBoldIcon.toString = () => "elephantkit-InformationCircleBoldIcon";

// src/icon/generated/InformationCircle.tsx
init_react_import();
function InformationCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M14.25 16.5h-.75A1.5 1.5 0 0112 15v-3.75a.75.75 0 00-.75-.75h-.75M11.625 6.75a.375.375 0 10.375.375.375.375 0 00-.375-.375h0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
InformationCircleIcon.toString = () => "elephantkit-InformationCircleIcon";

// src/icon/generated/Instagram.tsx
init_react_import();
function InstagramIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.74,
    y: 0.75,
    width: 22.5,
    height: 22.5,
    rx: 6,
    ry: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 11.99,
    cy: 12,
    r: 5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.34 5.15a.5.5 0 11-1 0M18.34 5.15a.5.5 0 011 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
InstagramIcon.toString = () => "elephantkit-InstagramIcon";

// src/icon/generated/InvoiceMail.tsx
init_react_import();
function InvoiceMailIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M19.5 12.88V2.25A1.5 1.5 0 0018 .75H6a1.5 1.5 0 00-1.5 1.5v10.63",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M21.284 11.465a.75.75 0 011.216.587v9.7a1.5 1.5 0 01-1.5 1.5H3a1.5 1.5 0 01-1.5-1.5v-9.7a.75.75 0 011.216-.587l7.431 5.894a3 3 0 003.706 0zM15.808 15.808l2.942 2.942M8.192 15.808L5.25 18.75M12.2 10.094a2.224 2.224 0 001.858.875c1.139 0 2.063-.693 2.063-1.547s-.921-1.546-2.059-1.546S12 7.183 12 6.328s.924-1.547 2.062-1.547a2.221 2.221 0 011.858.875M14.062 10.969V12M14.062 3.75v1.031M7.5 4.5H9M7.5 7.5H9M7.5 10.5H9",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
InvoiceMailIcon.toString = () => "elephantkit-InvoiceMailIcon";

// src/icon/generated/Key.tsx
init_react_import();
function KeyIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12.818 14.517l2.545-2.545 1.752.47a1.572 1.572 0 001.924-1.924l-.47-1.752.784-.784 1.752.47a1.571 1.571 0 001.924-1.924l-.469-1.752a2.356 2.356 0 00-3.333-3.332l-9.741 9.741a6.283 6.283 0 103.332 3.332z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 5.922,
    cy: 18.081,
    r: 1.571,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
KeyIcon.toString = () => "elephantkit-KeyIcon";

// src/icon/generated/KeyboardAlt.tsx
init_react_import();
function KeyboardAltIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M18 14.997v-6M16.5 8.997h3M12 9v4.5a1.5 1.5 0 001.5 1.5H15M6 15v-4.5a1.5 1.5 0 013 0V15M6 11.997h3"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 1.5,
    y: 1.497,
    width: 21,
    height: 21,
    rx: 3,
    ry: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
KeyboardAltIcon.toString = () => "elephantkit-KeyboardAltIcon";

// src/icon/generated/KeyboardAsterisk.tsx
init_react_import();
function KeyboardAsteriskIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 1.497v21M22.5 11.997h-21M19.424 4.572L4.576 19.421M19.424 19.421L4.576 4.572"
  }));
}
KeyboardAsteriskIcon.toString = () => "elephantkit-KeyboardAsteriskIcon";

// src/icon/generated/KeyboardCommand.tsx
init_react_import();
function KeyboardCommandIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M19.5 15.747a3.75 3.75 0 11-3.75 3.75V4.5a3.75 3.75 0 113.75 3.75h-15A3.75 3.75 0 118.25 4.5v15a3.75 3.75 0 11-3.75-3.75z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
KeyboardCommandIcon.toString = () => "elephantkit-KeyboardCommandIcon";

// src/icon/generated/KeyboardDelete.tsx
init_react_import();
function KeyboardDeleteIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 1.5,
    y: 1.497,
    width: 21,
    height: 21,
    rx: 3,
    ry: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M16.5 9.747l-4.5 4.5M12 9.747l4.5 4.5M11.121 6H18a1.5 1.5 0 011.5 1.5v9A1.5 1.5 0 0118 18h-6.879a1.5 1.5 0 01-1.06-.439L4.72 12.527a.749.749 0 010-1.06l5.341-5.031A1.5 1.5 0 0111.121 6z"
  }));
}
KeyboardDeleteIcon.toString = () => "elephantkit-KeyboardDeleteIcon";

// src/icon/generated/KeyboardOption.tsx
init_react_import();
function KeyboardOptionIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 1.5,
    y: 1.497,
    width: 21,
    height: 21,
    rx: 3,
    ry: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M18 10.497h-4.5M6 10.497h3l3 4.5h6"
  }));
}
KeyboardOptionIcon.toString = () => "elephantkit-KeyboardOptionIcon";

// src/icon/generated/KeyboardShift.tsx
init_react_import();
function KeyboardShiftIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 1.5,
    y: 1.497,
    width: 21,
    height: 21,
    rx: 3,
    ry: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M16.5 12h2.248a.75.75 0 00.531-1.28l-6.3-5.86a1.5 1.5 0 00-1.948 0L4.72 10.717A.75.75 0 005.25 12H7.5v6A1.5 1.5 0 009 19.5h6a1.5 1.5 0 001.5-1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
KeyboardShiftIcon.toString = () => "elephantkit-KeyboardShiftIcon";

// src/icon/generated/Keyboard.tsx
init_react_import();
function KeyboardIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 11.25,
    width: 22.5,
    height: 12,
    rx: 3,
    ry: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M6.75 14.25h1.5M15.75 14.25h1.5M11.25 14.25h1.5M4.5 17.25H6M9 17.25h1.5M13.5 17.25H15M18 17.25h1.5M6.75 20.25h10.5M6.75 11.25v-1.5a4.5 4.5 0 014.5-4.5H15a4.5 4.5 0 004.5-4.5h0"
  }));
}
KeyboardIcon.toString = () => "elephantkit-KeyboardIcon";

// src/icon/generated/Kneeling.tsx
init_react_import();
function KneelingIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 11.75,
    cy: 4.168,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.25 21.043a1.5 1.5 0 01-1.5 1.5h-9a1.5 1.5 0 01-.806-2.766l7.223-4.6-1.135-3.03-2.528 1.8a3.007 3.007 0 01-4.047-.521L4.6 10a1.5 1.5 0 112.3-1.918l2.859 3.43 4.116-2.94a1.5 1.5 0 012.277.7l1.822 4.86a3.014 3.014 0 01-1.2 3.585L13.9 19.543h3.85a1.5 1.5 0 011.5 1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
KneelingIcon.toString = () => "elephantkit-KneelingIcon";

// src/icon/generated/LayoutArray.tsx
init_react_import();
function LayoutArrayIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 6.75,
    y: 0.747,
    width: 10.5,
    height: 22.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 3.747,
    width: 3,
    height: 16.5,
    rx: 0.75,
    ry: 0.75,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 20.25,
    y: 3.747,
    width: 3,
    height: 16.5,
    rx: 0.75,
    ry: 0.75,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LayoutArrayIcon.toString = () => "elephantkit-LayoutArrayIcon";

// src/icon/generated/Layout.tsx
init_react_import();
function LayoutIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 1.5,
    y: 1.497,
    width: 21,
    height: 21,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M1.5 7.497h21M9 22.497v-15"
  }));
}
LayoutIcon.toString = () => "elephantkit-LayoutIcon";

// src/icon/generated/LegalCertificate.tsx
init_react_import();
function LegalCertificateIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 20.25,
    cy: 3.75,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M4.814 1.018a.489.489 0 01.872 0L6.7 3.06a.485.485 0 00.365.263l2.273.328a.484.484 0 01.39.325.474.474 0 01-.121.489l-1.65 1.6a.476.476 0 00-.138.421l.389 2.255a.475.475 0 01-.194.468.49.49 0 01-.511.034L5.477 8.185a.486.486 0 00-.454 0L3 9.243a.49.49 0 01-.511-.034.475.475 0 01-.194-.468l.389-2.255a.476.476 0 00-.138-.421L.9 4.465a.474.474 0 01-.121-.489.483.483 0 01.39-.325l2.272-.328A.485.485 0 003.8 3.06zM20.25.75H9.75M17.25 3.75v15a4.5 4.5 0 01-4.5 4.5h-12a4.5 4.5 0 004.5-4.5v-6M8.25 17.25h6M8.25 14.25h6M11.25 11.25h3M11.25 8.25h3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LegalCertificateIcon.toString = () => "elephantkit-LegalCertificateIcon";

// src/icon/generated/LegalScale.tsx
init_react_import();
function LegalScaleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 23.25v-18M7.5 23.25h9M13.5 3.75h5.25M5.25 3.75h5.25"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 3.75,
    r: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M9 14.25a3.75 3.75 0 01-7.5 0zM5.25 3.75l-3.75 7.5M5.25 3.75L9 11.25M22.5 14.25a3.75 3.75 0 01-7.5 0zM18.75 3.75L15 11.25M18.75 3.75l3.75 7.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LegalScaleIcon.toString = () => "elephantkit-LegalScaleIcon";

// src/icon/generated/LightBulb.tsx
init_react_import();
function LightBulbIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M10.5 22.5h3M18 12a6 6 0 10-7.5 5.788V19.5h3v-1.712A5.986 5.986 0 0018 12zM12 3V1.5M21 10.5h1.5M1.5 12H3M18.364 17.614l1.061 1.061M4.575 3.825l1.061 1.061M18.364 4.886l1.061-1.061M4.575 18.675l1.061-1.061"
  }));
}
LightBulbIcon.toString = () => "elephantkit-LightBulbIcon";

// src/icon/generated/LikeCircle.tsx
init_react_import();
function LikeCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M7.5 16.4a3.576 3.576 0 01.909.13l2.12.588a3.581 3.581 0 00.961.131h2.849a3.464 3.464 0 003.483-3.062L18 11.3a2.561 2.561 0 00-1.985-2.6l-.849-.181a.854.854 0 01-.663-.824V5.772a1.313 1.313 0 00-2.625 0v.88A4.314 4.314 0 017.5 10.9zM5.8 9.75h1.7v7.5H5.8",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LikeCircleIcon.toString = () => "elephantkit-LikeCircleIcon";

// src/icon/generated/LikeRibbon.tsx
init_react_import();
function LikeRibbonIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M4.807 13.042L.75 18l3.75.75 1.5 4.5 3.944-6.258M19.193 13.042L23.25 18l-3.75.75-1.5 4.5-3.944-6.258"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 9,
    r: 8.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M7.5 12.15v-4.2h.6a3 3 0 003-3 1.2 1.2 0 011.2-1.2 1.629 1.629 0 011.629 1.629v.771a.6.6 0 00.6.6h.171a1.8 1.8 0 011.791 1.979l-.186 1.86a2.4 2.4 0 01-2.388 2.161h-2.481a2.4 2.4 0 01-.659-.092l-1.454-.416a2.4 2.4 0 00-.659-.092H7.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LikeRibbonIcon.toString = () => "elephantkit-LikeRibbonIcon";

// src/icon/generated/Like.tsx
init_react_import();
function LikeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M5.25 21.751a6 6 0 011.558.23l3.634 1.038a6 6 0 001.647.231h4.885a6 6 0 005.97-5.4l.3-5.1a4.5 4.5 0 00-3.4-4.594l-1.455-.318a1.5 1.5 0 01-1.139-1.456V3a2.25 2.25 0 00-4.5 0v1.554a7.5 7.5 0 01-7.5 7.5zM.75 9.75h4.5v13.5H.75z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LikeIcon.toString = () => "elephantkit-LikeIcon";

// src/icon/generated/LinkBroken.tsx
init_react_import();
function LinkBrokenIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.5 15.749h1.875A3.963 3.963 0 0022.5 12h0a3.962 3.962 0 00-4.125-3.75H16.5M7.5 15.749H5.625A3.963 3.963 0 011.5 12h0a3.963 3.963 0 014.125-3.75H7.5M12 5.249v-4.5M9 5.249l-1.5-1.5M15 5.249l1.5-1.5M12 18.749v4.5M9 18.749l-1.5 1.5M15 18.749l1.5 1.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LinkBrokenIcon.toString = () => "elephantkit-LinkBrokenIcon";

// src/icon/generated/ListAdd.tsx
init_react_import();
function ListAddIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.123,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 14.123v6M14.25 17.123h6M5.25 2.123h15M5.25 8.123h15M5.25 14.123h3M1.125 1.748a.375.375 0 11-.375.375.375.375 0 01.375-.375M1.125 7.748a.375.375 0 11-.375.375.375.375 0 01.375-.375M1.125 13.748a.375.375 0 11-.375.375.375.375 0 01.375-.375"
  }));
}
ListAddIcon.toString = () => "elephantkit-ListAddIcon";

// src/icon/generated/ListBullets.tsx
init_react_import();
function ListBulletsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 3,
    cy: 2.998,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 3,
    cy: 11.998,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 3,
    cy: 20.998,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M8.25 3.748h15M8.25 12.748h15M8.25 21.748h15"
  }));
}
ListBulletsIcon.toString = () => "elephantkit-ListBulletsIcon";

// src/icon/generated/ListNumbers.tsx
init_react_import();
function ListNumbersIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M8.25 3.748h15M8.25 12.748h15M8.25 21.748h15M.8 18.36a1.5 1.5 0 111.45 1.888 1.5 1.5 0 11-1.445 1.9M.75 11.248a1.5 1.5 0 011.5-1.5h0a1.5 1.5 0 011.5 1.5h0a2.139 2.139 0 01-.468 1.336L.75 14.248h3M.75.748h.75a.75.75 0 01.75.75v5.25M.75 6.748h3"
  }));
}
ListNumbersIcon.toString = () => "elephantkit-ListNumbersIcon";

// src/icon/generated/ListRemove.tsx
init_react_import();
function ListRemoveIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M5.25 2.123h15M5.25 8.123h15M5.25 14.123h3M1.125 1.748a.375.375 0 11-.375.375.375.375 0 01.375-.375M1.125 7.748a.375.375 0 11-.375.375.375.375 0 01.375-.375M1.125 13.748a.375.375 0 11-.375.375.375.375 0 01.375-.375"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.123,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M14.25 17.123h6"
  }));
}
ListRemoveIcon.toString = () => "elephantkit-ListRemoveIcon";

// src/icon/generated/LocationChurch.tsx
init_react_import();
function LocationChurchIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M14.75 11.754v4h-6v-4"
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M7.25 12.754l4.5-3 4.5 3M11.75 5.254v4.5M10.25 6.754h3"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M20.75 9.754c0 7.9-6.932 12.331-8.629 13.3a.749.749 0 01-.743 0c-1.7-.967-8.628-5.4-8.628-13.3a9 9 0 0118 0z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LocationChurchIcon.toString = () => "elephantkit-LocationChurchIcon";

// src/icon/generated/LocationCircle.tsx
init_react_import();
function LocationCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M9.58 14.42l1.853 3.336a.75.75 0 001.36-.108l3.132-8.612a.75.75 0 00-.961-.961l-8.612 3.132a.75.75 0 00-.108 1.36z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LocationCircleIcon.toString = () => "elephantkit-LocationCircleIcon";

// src/icon/generated/LocationPin.tsx
init_react_import();
function LocationPinIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 8.25,
    r: 3.75,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12 .75a7.5 7.5 0 017.5 7.5c0 3.407-5.074 11.95-6.875 14.665a.75.75 0 01-1.25 0C9.574 20.2 4.5 11.657 4.5 8.25A7.5 7.5 0 0112 .75z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LocationPinIcon.toString = () => "elephantkit-LocationPinIcon";

// src/icon/generated/Location.tsx
init_react_import();
function LocationIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M20.463 3.016a.75.75 0 01.98.98l-7.377 17.791a.75.75 0 01-1.428-.14L11 13.459l-8.188-1.638a.75.75 0 01-.14-1.428z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LocationIcon.toString = () => "elephantkit-LocationIcon";

// src/icon/generated/Lock.tsx
init_react_import();
function LockIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 3.75,
    y: 9.75,
    width: 16.5,
    height: 13.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M6.75 9.75V6a5.25 5.25 0 0110.5 0v3.75M12 15v3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LockIcon.toString = () => "elephantkit-LockIcon";

// src/icon/generated/Login.tsx
init_react_import();
function LoginIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25 12.004H7.5M11.25 15.754l-3.75-3.75 3.75-3.75M20.693 16.6a10.5 10.5 0 11-.179-9.542"
  }));
}
LoginIcon.toString = () => "elephantkit-LoginIcon";

// src/icon/generated/Logout.tsx
init_react_import();
function LogoutIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 12.004H16.5M12.75 15.754l3.75-3.75-3.75-3.75M3.306 16.6a10.5 10.5 0 10.179-9.542"
  }));
}
LogoutIcon.toString = () => "elephantkit-LogoutIcon";

// src/icon/generated/LoveBold.tsx
init_react_import();
function LoveBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.3 5.076a6.582 6.582 0 00-10.446-1.71L12 4.147l-.827-.753a6.522 6.522 0 00-5.688-1.806A6.472 6.472 0 00.7 5.075a6.4 6.4 0 001.21 7.469l9.373 9.656a1 1 0 001.434 0l9.36-9.638A6.414 6.414 0 0023.3 5.076z"
  }));
}
LoveBoldIcon.toString = () => "elephantkit-LoveBoldIcon";

// src/icon/generated/Love.tsx
init_react_import();
function LoveIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 21.844l-9.588-10a5.672 5.672 0 01-1.063-6.551h0a5.673 5.673 0 019.085-1.474L12 5.384l1.566-1.565a5.673 5.673 0 019.085 1.474h0a5.673 5.673 0 01-1.062 6.548z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
LoveIcon.toString = () => "elephantkit-LoveIcon";

// src/icon/generated/MapsPin.tsx
init_react_import();
function MapsPinIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.25 9V4.65a1.5 1.5 0 00-.943-1.393l-6-2.4a1.5 1.5 0 00-1.114 0L8.807 3.412a1.5 1.5 0 01-1.114 0L1.779 1.046a.75.75 0 00-1.029.7v14.373a1.5 1.5 0 00.943 1.393l6 2.4a1.5 1.5 0 001.114 0l2.881-1.153M8.25 3.519v16.5M15.75.75v7.5M18.75 15.449a.375.375 0 01.375.375M18.375 15.824a.375.375 0 01.375-.375M18.75 16.2a.375.375 0 01-.375-.375M19.125 15.824a.375.375 0 01-.375.375",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M18.75 11.324a4.5 4.5 0 014.5 4.5c0 1.921-2.688 5.576-3.909 7.138a.75.75 0 01-1.182 0c-1.221-1.561-3.909-5.217-3.909-7.138a4.5 4.5 0 014.5-4.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MapsPinIcon.toString = () => "elephantkit-MapsPinIcon";

// src/icon/generated/Maps.tsx
init_react_import();
function MapsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.307 2.838a1.5 1.5 0 00-1.114 0L8.807 5.393a1.5 1.5 0 01-1.114 0L1.779 3.027a.75.75 0 00-1.029.7V18.1a1.5 1.5 0 00.943 1.393l6 2.4a1.5 1.5 0 001.114 0l6.386-2.555a1.5 1.5 0 011.114 0l5.914 2.362a.75.75 0 001.029-.7V6.631a1.5 1.5 0 00-.943-1.393zM8.25 5.5V22M15.75 2.731v16.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MapsIcon.toString = () => "elephantkit-MapsIcon";

// src/icon/generated/MegaphoneBadge.tsx
init_react_import();
function MegaphoneBadgeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M3.132 12.8l.448-1.175-1.046-2.744a.929.929 0 01.36-1.107l2.458-1.605.767-2.834a.928.928 0 01.942-.684l2.932.149L12.279.955a.928.928 0 011.165 0L15.73 2.8l2.932-.146a.928.928 0 01.942.684l.767 2.834 2.458 1.605a.928.928 0 01.36 1.107l-1.045 2.744 1.045 2.743a.929.929 0 01-.36 1.108l-2.458 1.6-.771 2.835a.927.927 0 01-.942.685l-2.932-.146-2.286 1.841M.75 19.769l1.656 2.609M9.908 8.147l6.294 9.916",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M15.871 17.541L2.075 21.857l-.994-1.566 9.158-11.622 5.632 8.872z"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M5.056 20.924l.876 1.346a2.041 2.041 0 002.906.614 2.256 2.256 0 00.587-3.04l-.163-.236",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MegaphoneBadgeIcon.toString = () => "elephantkit-MegaphoneBadgeIcon";

// src/icon/generated/MessagesAdd.tsx
init_react_import();
function MessagesAddIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.223 10.5a10.5 10.5 0 10-19.39 6.275L.749 23.25l6.475-3.084A10.614 10.614 0 009 21.05",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.249,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 14.249v6M14.25 17.249h6"
  }));
}
MessagesAddIcon.toString = () => "elephantkit-MessagesAddIcon";

// src/icon/generated/MessagesBubble.tsx
init_react_import();
function MessagesBubbleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12.75.75a10.485 10.485 0 00-8.917 16.025L.75 23.25l6.474-3.083A10.5 10.5 0 1012.75.75z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MessagesBubbleIcon.toString = () => "elephantkit-MessagesBubbleIcon";

// src/icon/generated/MessagesCheck.tsx
init_react_import();
function MessagesCheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M22.968 9.006a10.5 10.5 0 10-19.177 7.769L.708 23.25l6.475-3.084a10.576 10.576 0 001.772.884M23.208 17.248a6 6 0 11-6-6",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M23.208 12.748l-5.47 5.47a.751.751 0 01-1.06 0l-1.72-1.72",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MessagesCheckIcon.toString = () => "elephantkit-MessagesCheckIcon";

// src/icon/generated/MessagesDisable.tsx
init_react_import();
function MessagesDisableIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.248,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M13.008 21.489l8.484-8.484M23.223 10.5a10.5 10.5 0 10-19.39 6.275L.75 23.25l6.474-3.084A10.652 10.652 0 009 21.05"
  }));
}
MessagesDisableIcon.toString = () => "elephantkit-MessagesDisableIcon";

// src/icon/generated/MessagesSubtract.tsx
init_react_import();
function MessagesSubtractIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.224 10.5a10.5 10.5 0 10-19.391 6.275L.75 23.25l6.475-3.084A10.576 10.576 0 009 21.05",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M14.25 17.25h6"
  }));
}
MessagesSubtractIcon.toString = () => "elephantkit-MessagesSubtractIcon";

// src/icon/generated/Microphone.tsx
init_react_import();
function MicrophoneIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 17.25v6M9 23.25h6M4.5 8.25v3a6 6 0 006 6h3a6 6 0 006-6v-3"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M13.5 14.25h-3a3.2 3.2 0 01-3-3.375v-6.75a3.2 3.2 0 013-3.375h3a3.2 3.2 0 013 3.375v6.75a3.2 3.2 0 01-3 3.375zM7.5 5.25h3M13.5 5.25h3M7.5 8.25h3M13.5 8.25h3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MicrophoneIcon.toString = () => "elephantkit-MicrophoneIcon";

// src/icon/generated/Microsoft.tsx
init_react_import();
function MicrosoftIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M15 22.17a9.38 9.38 0 01-3.83-1.35L13 14.33a6.35 6.35 0 004.06 1.32 10.53 10.53 0 003.57-.65l-1.8 6.31a10.15 10.15 0 01-3.84.9M8 19.89a6.35 6.35 0 00-3.72-1.3 9.48 9.48 0 00-3.52.8l1.86-6.49a10.68 10.68 0 013.71-.9 6.71 6.71 0 013.59 1.24zM12.43 3h0l-1.9 6.51a6.32 6.32 0 00-3.59-1.24 9.75 9.75 0 00-3.63.84l1.84-6.47a9.74 9.74 0 013.48-.82A6.61 6.61 0 0112.43 3zM17.77 11.94a7.21 7.21 0 01-4-1.26h0l1.9-6.57a6.46 6.46 0 004 1.34 9 9 0 003.63-.83l-1.87 6.45h0a8.39 8.39 0 01-3.6.87",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MicrosoftIcon.toString = () => "elephantkit-MicrosoftIcon";

// src/icon/generated/ModeDark.tsx
init_react_import();
function ModeDarkIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M20.25 15.418l2.357-2.357a1.5 1.5 0 000-2.121L20.25 8.583V5.25a1.5 1.5 0 00-1.5-1.5h-3.333l-2.356-2.357a1.5 1.5 0 00-2.122 0L8.583 3.75H5.25a1.5 1.5 0 00-1.5 1.5v3.333L1.393 10.94a1.5 1.5 0 000 2.121l2.357 2.357v3.332a1.5 1.5 0 001.5 1.5h3.333l2.356 2.357a1.5 1.5 0 002.122 0l2.356-2.357h3.333a1.5 1.5 0 001.5-1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12 6.75a5.194 5.194 0 00-2.25.525 5.222 5.222 0 010 9.451A5.243 5.243 0 1012 6.75z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ModeDarkIcon.toString = () => "elephantkit-ModeDarkIcon";

// src/icon/generated/ModeLight.tsx
init_react_import();
function ModeLightIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M20.25 15.372l2.357-2.357a1.5 1.5 0 000-2.121L20.25 8.537V5.2a1.5 1.5 0 00-1.5-1.5h-3.333l-2.356-2.353a1.5 1.5 0 00-2.122 0L8.583 3.7H5.25a1.5 1.5 0 00-1.5 1.5v3.337l-2.357 2.357a1.5 1.5 0 000 2.121l2.357 2.357V18.7a1.5 1.5 0 001.5 1.5h3.333l2.356 2.357a1.5 1.5 0 002.122 0l2.356-2.357h3.333a1.5 1.5 0 001.5-1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 11.954,
    r: 5.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ModeLightIcon.toString = () => "elephantkit-ModeLightIcon";

// src/icon/generated/MoreCircleBold.tsx
init_react_import();
function MoreCircleBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zM8.5 12a2 2 0 11-2-2 2 2 0 012 2zm3.5-2a2 2 0 11-2 2 2 2 0 012-2zm5.5 4a2 2 0 112-2 2 2 0 01-2 2z"
  }));
}
MoreCircleBoldIcon.toString = () => "elephantkit-MoreCircleBoldIcon";

// src/icon/generated/MoreHorizontalBold.tsx
init_react_import();
function MoreHorizontalBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 3.25,
    cy: 12,
    r: 3.25
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 3.25
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 20.75,
    cy: 12,
    r: 3.25
  }));
}
MoreHorizontalBoldIcon.toString = () => "elephantkit-MoreHorizontalBoldIcon";

// src/icon/generated/MoreHorizontal.tsx
init_react_import();
function MoreHorizontalIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 3.375,
    cy: 12.023,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 20.625,
    cy: 12.023,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12.023,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MoreHorizontalIcon.toString = () => "elephantkit-MoreHorizontalIcon";

// src/icon/generated/MoreVerticalBold.tsx
init_react_import();
function MoreVerticalBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 3.25,
    r: 3.25
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 3.25
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 20.75,
    r: 3.25
  }));
}
MoreVerticalBoldIcon.toString = () => "elephantkit-MoreVerticalBoldIcon";

// src/icon/generated/MoreVertical.tsx
init_react_import();
function MoreVerticalIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 11.987,
    cy: 20.628,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 11.987,
    cy: 3.378,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 11.987,
    cy: 12.003,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MoreVerticalIcon.toString = () => "elephantkit-MoreVerticalIcon";

// src/icon/generated/Mouse.tsx
init_react_import();
function MouseIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M6.75 23.25h0a6 6 0 01-6-6v-6a6 6 0 016-6h0a6 6 0 016 6v6a6 6 0 01-6 6zM.75 12.75h12",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M6.75 12.75v-7.5h0a4.5 4.5 0 014.5-4.5h0a4.5 4.5 0 014.5 4.5V7.5a3.75 3.75 0 003.75 3.75h0a3.75 3.75 0 003.75-3.75V.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MouseIcon.toString = () => "elephantkit-MouseIcon";

// src/icon/generated/MoveDown.tsx
init_react_import();
function MoveDownIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 23.248v-10.5M8.25 19.498l3.75 3.75 3.75-3.75"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 0.748,
    width: 22.5,
    height: 7.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MoveDownIcon.toString = () => "elephantkit-MoveDownIcon";

// src/icon/generated/MoveLeft.tsx
init_react_import();
function MoveLeftIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 11.998h10.5M4.5 8.248l-3.75 3.75 3.75 3.75"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 15.75,
    y: 0.748,
    width: 7.5,
    height: 22.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MoveLeftIcon.toString = () => "elephantkit-MoveLeftIcon";

// src/icon/generated/MoveRight.tsx
init_react_import();
function MoveRightIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25 11.998h-10.5M19.5 15.748l3.75-3.75-3.75-3.75"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 0.748,
    width: 7.5,
    height: 22.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MoveRightIcon.toString = () => "elephantkit-MoveRightIcon";

// src/icon/generated/MoveUp.tsx
init_react_import();
function MoveUpIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 .748v10.5M8.25 4.498L12 .748l3.75 3.75"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 15.748,
    width: 22.5,
    height: 7.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MoveUpIcon.toString = () => "elephantkit-MoveUpIcon";

// src/icon/generated/MultipleUsersBody.tsx
init_react_import();
function MultipleUsersBodyIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 4.5,
    cy: 6,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M4.5 9.75A3.75 3.75 0 00.75 13.5v2.25h1.5l.75 6h3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 19.5,
    cy: 6,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.5 9.75a3.75 3.75 0 013.75 3.75v2.25h-1.5l-.75 6h-3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 3.75,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 13.5a5.25 5.25 0 00-10.5 0v2.25H9l.75 7.5h4.5l.75-7.5h2.25z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
MultipleUsersBodyIcon.toString = () => "elephantkit-MultipleUsersBodyIcon";

// src/icon/generated/NavigationDownCircle.tsx
init_react_import();
function NavigationDownCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12.001 16.497v-9M15.751 12.747l-3.75 3.75-3.75-3.75"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12.001,
    cy: 11.997,
    r: 10.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
NavigationDownCircleIcon.toString = () => "elephantkit-NavigationDownCircleIcon";

// src/icon/generated/NavigationLeftCircle.tsx
init_react_import();
function NavigationLeftCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M7.501 11.997h9M11.251 15.747l-3.75-3.75 3.75-3.75"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12.001,
    cy: 11.997,
    r: 10.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
NavigationLeftCircleIcon.toString = () => "elephantkit-NavigationLeftCircleIcon";

// src/icon/generated/NavigationRightCircle.tsx
init_react_import();
function NavigationRightCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M16.501 11.997h-9M12.751 8.247l3.75 3.75-3.75 3.75"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12.001,
    cy: 11.997,
    r: 10.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
NavigationRightCircleIcon.toString = () => "elephantkit-NavigationRightCircleIcon";

// src/icon/generated/NavigationUpCircle.tsx
init_react_import();
function NavigationUpCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12.001 7.497v9M8.251 11.247l3.75-3.75 3.75 3.75"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12.001,
    cy: 11.997,
    r: 10.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
NavigationUpCircleIcon.toString = () => "elephantkit-NavigationUpCircleIcon";

// src/icon/generated/NetworkLive.tsx
init_react_import();
function NetworkLiveIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M3 5.25a11.252 11.252 0 0118 0M7.8 5.25c.958-2.732 2.482-4.5 4.2-4.5s3.243 1.768 4.2 4.5M23.25 18.75H.75M.75 5.25h22.5M21 18.75a11.252 11.252 0 01-18 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M16.2 18.75c-.957 2.733-2.482 4.5-4.2 4.5s-3.242-1.767-4.2-4.5M9.75 15.75v-7.5M12.75 8.25v2.55a8.932 8.932 0 001.5 4.954 8.932 8.932 0 001.5-4.954V8.25M3.75 8.25v6a1.5 1.5 0 001.5 1.5h1.5M21.75 15.75h-1.5a1.5 1.5 0 01-1.5-1.5v-4.5a1.5 1.5 0 011.5-1.5h1.5M18.75 12.75h3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
NetworkLiveIcon.toString = () => "elephantkit-NetworkLiveIcon";

// src/icon/generated/NetworkWarning.tsx
init_react_import();
function NetworkWarningIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M8.236 22.605A11.251 11.251 0 1123.25 12M9.289 1.079C7.768 3.312 6.75 7.367 6.75 12a24.573 24.573 0 001.515 8.961M.775 11.25H12.75M2.999 5.25H21M2.048 17.25H9.75M14.711 1.079a16.978 16.978 0 012.3 7.137M17.25 20.25a.375.375 0 11-.375.375.375.375 0 01.375-.375M17.25 18v-3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M23.063 20.683a1.774 1.774 0 01-1.587 2.567h-8.452a1.774 1.774 0 01-1.587-2.567l4.226-8.452a1.774 1.774 0 013.174 0z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
NetworkWarningIcon.toString = () => "elephantkit-NetworkWarningIcon";

// src/icon/generated/NetworkWww.tsx
init_react_import();
function NetworkWwwIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M3 5.25a11.252 11.252 0 0118 0M7.8 5.25c.958-2.732 2.482-4.5 4.2-4.5s3.243 1.768 4.2 4.5M23.25 18.75H.75M.75 5.25h22.5M21 18.75a11.252 11.252 0 01-18 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M16.2 18.75c-.957 2.733-2.482 4.5-4.2 4.5s-3.242-1.767-4.2-4.5M2.25 8.25v2.859a9.014 9.014 0 00.175 1.765L3 15.75l1.5-4.5 1.5 4.5.575-2.876a8.938 8.938 0 00.175-1.765V8.25M9.75 8.25v2.859a9.014 9.014 0 00.175 1.765l.575 2.876 1.5-4.5 1.5 4.5.575-2.876a8.938 8.938 0 00.175-1.765V8.25M17.25 8.25v2.859a9.014 9.014 0 00.175 1.765L18 15.75l1.5-4.5 1.5 4.5.575-2.876a8.938 8.938 0 00.175-1.765V8.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
NetworkWwwIcon.toString = () => "elephantkit-NetworkWwwIcon";

// src/icon/generated/NewspaperBold.tsx
init_react_import();
function NewspaperBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M22 0H2a2 2 0 00-2 2v20a2 2 0 002 2h20a2 2 0 002-2V2a2 2 0 00-2-2zm0 21.5a.5.5 0 01-.5.5h-19a.5.5 0 01-.5-.5v-19a.5.5 0 01.5-.5h19a.5.5 0 01.5.5z"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 4.25,
    y: 4,
    width: 15.5,
    height: 5,
    rx: 1.25,
    ry: 1.25
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 4.25,
    y: 11,
    width: 7,
    height: 2,
    rx: 0.75,
    ry: 0.75
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 4.25,
    y: 14.5,
    width: 7,
    height: 2,
    rx: 0.75,
    ry: 0.75
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 4.25,
    y: 18,
    width: 7,
    height: 2,
    rx: 0.75,
    ry: 0.75
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 12.75,
    y: 18,
    width: 7,
    height: 2,
    rx: 0.75,
    ry: 0.75
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 12.75,
    y: 11,
    width: 7,
    height: 2,
    rx: 0.75,
    ry: 0.75
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 12.75,
    y: 14.5,
    width: 7,
    height: 2,
    rx: 0.75,
    ry: 0.75
  }));
}
NewspaperBoldIcon.toString = () => "elephantkit-NewspaperBoldIcon";

// src/icon/generated/NewspaperFoldBold.tsx
init_react_import();
function NewspaperFoldBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 4.252,
    y: 4.5,
    width: 5.75,
    height: 7.25,
    rx: 1.25,
    ry: 1.25
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M24 10a3 3 0 00-3-3h-2V2.5a2 2 0 00-2-2H2a2 2 0 00-2 2V20a3.5 3.5 0 003.5 3.5h17A3.5 3.5 0 0024 20zM3.5 21.5A1.5 1.5 0 012 20V3a.5.5 0 01.5-.5h14a.5.5 0 01.5.5v17a3.494 3.494 0 00.11.874.5.5 0 01-.484.625zM22 20a1.5 1.5 0 11-3 0V9.5a.5.5 0 01.5-.5H21a1 1 0 011 1z"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12.751 6.047h2a.75.75 0 01.75.75v.5a.75.75 0 01-.75.75h-2A.749.749 0 0112 7.3v-.5a.751.751 0 01.751-.753zM12.751 10.047h2a.75.75 0 01.75.75v.5a.75.75 0 01-.75.75h-2A.75.75 0 0112 11.3v-.5a.751.751 0 01.751-.753zM4.751 14.047h10a.75.75 0 01.75.75v.5a.75.75 0 01-.75.75h-10A.75.75 0 014 15.3v-.5a.751.751 0 01.751-.753zM4.75 18.047h7.5a.75.75 0 01.75.75v.5a.75.75 0 01-.75.75h-7.5A.749.749 0 014 19.3v-.5a.75.75 0 01.75-.753z"
  }));
}
NewspaperFoldBoldIcon.toString = () => "elephantkit-NewspaperFoldBoldIcon";

// src/icon/generated/NewspaperFold.tsx
init_react_import();
function NewspaperFoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.25 6v14.25a2.25 2.25 0 01-4.5 0V3a1.5 1.5 0 00-1.5-1.5h-15A1.5 1.5 0 00.75 3v17.25A2.25 2.25 0 003 22.5h18M4.5 15H15M4.5 18h6",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 4.5,
    y: 5.25,
    width: 10.5,
    height: 6,
    rx: 0.75,
    ry: 0.75,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
NewspaperFoldIcon.toString = () => "elephantkit-NewspaperFoldIcon";

// src/icon/generated/Newspaper.tsx
init_react_import();
function NewspaperIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 0.75,
    width: 22.5,
    height: 22.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M13.5 13.5h6M13.5 16.5h6M13.5 19.5h3.75M3.75 13.5h6M3.75 16.5h6M3.75 19.5H7.5"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 3.75,
    y: 3.75,
    width: 16.5,
    height: 6,
    rx: 0.75,
    ry: 0.75,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
NewspaperIcon.toString = () => "elephantkit-NewspaperIcon";

// src/icon/generated/OpenId.tsx
init_react_import();
function OpenIdIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M21.06 9.78a18.15 18.15 0 00-6.61-2.22V1.73l-3.9 2.45v3.3C.26 8.2-5.22 19.13 11 22.27L14.45 20v-9.29a18.27 18.27 0 014.42 1.39l-2 1.24 6.34 1.23V8.32zm-10.51.91v8.15c-10.31-1.4-6.55-8.15 0-8.15z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
OpenIdIcon.toString = () => "elephantkit-OpenIdIcon";

// src/icon/generated/OpenQuote.tsx
init_react_import();
function OpenQuoteIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 5.25,
    cy: 14.998,
    r: 4.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 15a10.5 10.5 0 0110.5-10.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 14.998,
    r: 4.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12.75 15a10.5 10.5 0 0110.5-10.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
OpenQuoteIcon.toString = () => "elephantkit-OpenQuoteIcon";

// src/icon/generated/Paragraph.tsx
init_react_import();
function ParagraphIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M11.25.748v22.5M17.25.748v22.5M11.25 14.248H7.5a6.75 6.75 0 010-13.5h15.75"
  }));
}
ParagraphIcon.toString = () => "elephantkit-ParagraphIcon";

// src/icon/generated/PasswordLock.tsx
init_react_import();
function PasswordLockIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 14.25,
    y: 10.5,
    width: 9,
    height: 7.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 10.5V9a3 3 0 013-3h0a3 3 0 013 3v1.5M18.75 13.875a.375.375 0 10.375.375.374.374 0 00-.375-.375h0M4.125 13.875a.375.375 0 10.375.375.374.374 0 00-.375-.375h0M7.875 13.875a.375.375 0 10.375.375.374.374 0 00-.375-.375h0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M11.25 18h-9a1.5 1.5 0 01-1.5-1.5v-6A1.5 1.5 0 012.25 9h9",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PasswordLockIcon.toString = () => "elephantkit-PasswordLockIcon";

// src/icon/generated/Paypal.tsx
init_react_import();
function PaypalIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 -144 1296 1008"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "currentColor",
    d: "M1296 144v720c0 39-33 72-72 72H72c-39 0-72-33-72-72V144c0-39 33-72 72-72h1152c39 0 72 33 72 72zM221 434c-5 29-24 32-49 32l-18 1 9-60c1-4 4-7 7-7h11c25 0 44 4 40 34zm966 155l37-230v-1c0-4-3-8-7-8h-42c-3 0-7 3-7 7l-37 234v1c0 4 3 8 8 8h37c5 0 10-5 11-11zm-86 0l23-147c1-4-2-9-7-9h-43c-8 0-9 12-9 19-13-19-32-23-54-23-55 0-97 49-97 102 0 44 28 73 72 73 20 0 46-9 59-25 0 3-2 8-2 12 0 5 2 9 7 9h39c6 0 11-5 12-11zM928 413c0-47-37-63-79-63h-89c-6 0-11 5-12 11l-37 230c-1 4 3 9 7 9h46c5 0 8-4 9-8l11-65c2-16 29-11 40-11 64 0 104-38 104-103zm-214 28c0-4-4-8-7-8h-44c-4 0-8 2-10 6l-60 87-24-84c-2-5-7-9-13-9h-42c-4 0-7 4-7 8 0 3 44 130 48 142-7 8-47 61-47 67 0 4 4 8 8 8h43c4 0 8-3 10-6l144-207c1-1 1-2 1-4zM462 589l23-147c1-4-2-9-7-9h-43c-8 0-9 12-9 19-13-19-32-23-54-23-55 0-97 49-97 102 0 44 28 73 72 73 20 0 45-9 59-25-1 3-2 8-2 12 0 5 2 9 7 9h39c6 0 11-5 12-11zM289 413c0-47-37-63-79-63h-90c-5 0-10 5-11 11L72 591c-1 4 3 9 7 9h43c6 0 11-5 12-11l11-62c2-16 29-11 40-11 64 0 104-38 104-103zm769 97c0 27-22 48-49 48-21 0-36-12-36-34 0-27 21-49 49-49 20 0 36 13 36 35zm-197-84c0 34-21 39-50 40l-18 1 10-60c0-4 3-7 7-7h10c19 0 41 2 41 26zm-442 84c0 27-22 48-49 48-21 0-36-12-36-34 0-27 21-49 48-49 21 0 37 13 37 35z"
  }));
}
PaypalIcon.toString = () => "elephantkit-PaypalIcon";

// src/icon/generated/PdfFile.tsx
init_react_import();
function PdfFileIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M5.246 23.248h-3a1.5 1.5 0 01-1.5-1.5v-19.5a1.5 1.5 0 011.5-1.5h10.629a1.5 1.5 0 011.061.44l5.871 5.871a1.5 1.5 0 01.439 1.061v4.628",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M20.246 8.248h-6a1.5 1.5 0 01-1.5-1.5v-6M8.246 23.248v-7.5M8.246 15.748H9a2.25 2.25 0 010 4.5h-.75M14.246 23.248a3 3 0 003-3v-1.5a3 3 0 00-3-3zM20.246 23.248v-6a1.5 1.5 0 011.5-1.5h1.5M20.246 20.248h2.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PdfFileIcon.toString = () => "elephantkit-PdfFileIcon";

// src/icon/generated/PencilCircle.tsx
init_react_import();
function PencilCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M9.746 17.435l-3.712.531.53-3.713 7.561-7.561a2.25 2.25 0 013.182 3.182z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PencilCircleIcon.toString = () => "elephantkit-PencilCircleIcon";

// src/icon/generated/Pencil.tsx
init_react_import();
function PencilIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M22.19 1.81a3.639 3.639 0 00-5.17.035l-14.5 14.5L.75 23.25l6.905-1.771 14.5-14.5a3.637 3.637 0 00.035-5.169zM16.606 2.26l5.134 5.134M2.521 16.344l5.139 5.13",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PencilIcon.toString = () => "elephantkit-PencilIcon";

// src/icon/generated/People.tsx
init_react_import();
function PeopleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#619286,#396766",
    viewBox: "0 0 300 300",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 100.31,
    cy: 112.18,
    r: 33.23,
    fill: "var(--icon-color-2, currentColor)",
    transform: "translate(-121.325 -121.32) scale(1.8088)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.095 158.61h.018C80.88 158.61 135 212.73 135 278.497v.018H29.565c-7.939 0-14.47-6.531-14.47-14.47V158.61z",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 199.85,
    cy: 112.18,
    r: 33.08,
    fill: "var(--icon-color-1, currentColor)",
    transform: "translate(-121.325 -121.32) scale(1.8088)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M284.895 158.61h-.018c-65.768 0-119.887 54.12-119.887 119.887v.018h105.435c7.939 0 14.47-6.531 14.47-14.47V158.61z",
    fill: "var(--icon-color-2, currentColor)"
  }));
}
PeopleIcon.toString = () => "elephantkit-PeopleIcon";

// src/icon/generated/PhoneAdd.tsx
init_react_import();
function PhoneAddIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12.37 22.54l.01.007a4.5 4.5 0 005.6-.615l.629-.629a1.5 1.5 0 000-2.122l-2.653-2.651a1.5 1.5 0 00-2.122 0h0a1.5 1.5 0 01-2.121 0l-4.242-4.243a1.5 1.5 0 010-2.121h0a1.5 1.5 0 000-2.122L4.819 5.393a1.5 1.5 0 00-2.121 0l-.63.629a4.5 4.5 0 00-.614 5.6l.006.01A40.606 40.606 0 0012.37 22.54z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 18,
    cy: 6,
    r: 5.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M18 3.75v4.5M15.75 6h4.5"
  }));
}
PhoneAddIcon.toString = () => "elephantkit-PhoneAddIcon";

// src/icon/generated/PhoneBook.tsx
init_react_import();
function PhoneBookIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 2.25,
    y: 0.763,
    width: 18,
    height: 22.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25 3.013v3M23.25 9.013v3M23.25 15.013v3M11.972 17.148h.005a2.591 2.591 0 003.2.526l.447-.251a.864.864 0 00.328-1.176l-1.06-1.877a.864.864 0 00-1.176-.328h0a.863.863 0 01-1.176-.329L10.845 10.7a.864.864 0 01.328-1.176h0A.864.864 0 0011.5 8.35l-1.057-1.881a.864.864 0 00-1.176-.329l-.447.252A2.591 2.591 0 007.612 9.4v.006a23.393 23.393 0 004.36 7.742zM.75 5.263h3M.75 14.263h3M.75 9.763h3M.75 18.763h3"
  }));
}
PhoneBookIcon.toString = () => "elephantkit-PhoneBookIcon";

// src/icon/generated/PhoneSubtract.tsx
init_react_import();
function PhoneSubtractIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12.37 22.54l.01.007a4.5 4.5 0 005.6-.615l.629-.629a1.5 1.5 0 000-2.122l-2.653-2.651a1.5 1.5 0 00-2.122 0h0a1.5 1.5 0 01-2.121 0l-4.242-4.243a1.5 1.5 0 010-2.121h0a1.5 1.5 0 000-2.122L4.819 5.393a1.5 1.5 0 00-2.121 0l-.63.629a4.5 4.5 0 00-.614 5.6l.006.01A40.606 40.606 0 0012.37 22.54z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 18,
    cy: 6,
    r: 5.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M15.75 6h4.5"
  }));
}
PhoneSubtractIcon.toString = () => "elephantkit-PhoneSubtractIcon";

// src/icon/generated/Phone.tsx
init_react_import();
function PhoneIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M15.04 22.39l.012.007a5.533 5.533 0 006.884-.755l.774-.774a1.846 1.846 0 000-2.609L19.449 15a1.846 1.846 0 00-2.609 0h0a1.843 1.843 0 01-2.608 0L9.014 9.781a1.846 1.846 0 010-2.609h0a1.843 1.843 0 000-2.608L5.754 1.3a1.846 1.846 0 00-2.609 0l-.774.774a5.535 5.535 0 00-.756 6.884l.008.012A49.935 49.935 0 0015.04 22.39z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PhoneIcon.toString = () => "elephantkit-PhoneIcon";

// src/icon/generated/PictureFlower.tsx
init_react_import();
function PictureFlowerIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 0.75,
    width: 22.5,
    height: 22.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 15.75v7.5M13.688 13.821a.752.752 0 01.936-.541 2.221 2.221 0 002.49-.511 2.224 2.224 0 00-.8-2.413.749.749 0 010-1.08 2.22 2.22 0 00.8-2.412 2.221 2.221 0 00-2.49-.512.75.75 0 01-.936-.54c-.267-1.079-.983-1.9-1.688-1.9s-1.421.822-1.688 1.9a.75.75 0 01-.936.54 2.221 2.221 0 00-2.49.512 2.222 2.222 0 00.8 2.412.75.75 0 010 1.081 2.22 2.22 0 00-.8 2.412 2.221 2.221 0 002.49.511.75.75 0 01.936.541c.267 1.078.983 1.9 1.688 1.9s1.421-.821 1.688-1.9z"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 9.75,
    r: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M8.711 20.619a4.433 4.433 0 01-1.668-.68c-1.766-1.083-3.177-3.948-3.177-3.948a9.278 9.278 0 015.2 1.2M15.352 20.619a4.443 4.443 0 001.669-.68c1.765-1.083 3.176-3.948 3.176-3.948a9.281 9.281 0 00-5.2 1.2",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PictureFlowerIcon.toString = () => "elephantkit-PictureFlowerIcon";

// src/icon/generated/PictureLandscape.tsx
init_react_import();
function PictureLandscapeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 0.75,
    width: 22.5,
    height: 22.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M5.25 17.25l3.462-4.616a1.5 1.5 0 012.261-.161L12 13.5l3.3-4.4a1.5 1.5 0 012.4 0l2.67 3.56",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 6.375,
    cy: 6.375,
    r: 1.875,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 17.25h22.5"
  }));
}
PictureLandscapeIcon.toString = () => "elephantkit-PictureLandscapeIcon";

// src/icon/generated/PictureStack.tsx
init_react_import();
function PictureStackIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18.75 5.25v-.978a2.011 2.011 0 00-2-2.022h-14a2.011 2.011 0 00-2 2.022v9.456a2.011 2.011 0 002 2.022M11.339 21.75l4.439-6.307a1.5 1.5 0 012.357-.128l4.938 5.643M10.875 12.75a.375.375 0 11-.375.375.375.375 0 01.375-.375",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 6,
    y: 8.25,
    width: 17.25,
    height: 13.5,
    rx: 1,
    ry: 1,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PictureStackIcon.toString = () => "elephantkit-PictureStackIcon";

// src/icon/generated/PinChurch.tsx
init_react_import();
function PinChurchIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M15 10.25v4H9v-4"
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M7.5 11.25l4.5-3 4.5 3M12 3.75v4.5M10.5 5.25h3"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M21 9.75a9 9 0 10-10.8 8.82l1.8 4.68 1.8-4.68A9 9 0 0021 9.75z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PinChurchIcon.toString = () => "elephantkit-PinChurchIcon";

// src/icon/generated/Pin.tsx
init_react_import();
function PinIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M4.949 8.783a1.5 1.5 0 00-.3 2.356l8.213 8.213a1.5 1.5 0 002.356-.3 7.522 7.522 0 00.81-5.54l6.529-4.155a1.5 1.5 0 00.256-2.326L16.97 1.188a1.5 1.5 0 00-2.326.255l-4.155 6.53a7.522 7.522 0 00-5.54.81zM8.753 15.246L.75 23.249",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PinIcon.toString = () => "elephantkit-PinIcon";

// src/icon/generated/PlayStore.tsx
init_react_import();
function PlayStoreIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M3.69 1.51A2.06 2.06 0 00.75 3.38v17.24a2.06 2.06 0 002.94 1.87l18.37-8.62a2.06 2.06 0 000-3.74zM4.32 1.8l14.63 13.53M4.55 22.09L18.88 8.64",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PlayStoreIcon.toString = () => "elephantkit-PlayStoreIcon";

// src/icon/generated/Podcast.tsx
init_react_import();
function PodcastIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M7.13 13a5.75 5.75 0 119.74 0M5.13 16.38a9.32 9.32 0 1113.76 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.19 16.6a2 2 0 00-2-2.18h-2.43a2 2 0 00-2 2.18l.55 4.91a2 2 0 002 1.75h1.39a2 2 0 002-1.75z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 10.04,
    r: 2.45,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
PodcastIcon.toString = () => "elephantkit-PodcastIcon";

// src/icon/generated/Printer.tsx
init_react_import();
function PrinterIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 15.75H6.75l-1.5 7.5h13.5l-1.5-7.5z"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.85 18.75h3.9a1.5 1.5 0 001.5-1.5v-6H.75v6a1.5 1.5 0 001.5 1.5h3.9M6.75 5.25H4.677a1.5 1.5 0 00-1.342.829L.75 11.25h22.5l-2.585-5.171a1.5 1.5 0 00-1.342-.829H17.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M6.75.75h10.5v7.5H6.75zM20.625 14.25a.375.375 0 10.375.375.375.375 0 00-.375-.375h0M9.75 20.25h4.5"
  }));
}
PrinterIcon.toString = () => "elephantkit-PrinterIcon";

// src/icon/generated/ProgrammingFlag.tsx
init_react_import();
function ProgrammingFlagIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 23.253V.753M.75 18.373L3.9 17.4a9.607 9.607 0 017.864 1 9.615 9.615 0 007.679 1.056l2.987-.854a1.125 1.125 0 00.816-1.082V4.651a1.126 1.126 0 00-1.434-1.082l-2.369.677a9.611 9.611 0 01-7.675-1.056 9.614 9.614 0 00-7.864-1L.75 3.16z"
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M15.424 7.601l2.935 2.935-2.935 2.935M8.576 7.601l-2.935 2.935 2.935 2.935M12.978 7.601l-1.956 5.87"
  }));
}
ProgrammingFlagIcon.toString = () => "elephantkit-ProgrammingFlagIcon";

// src/icon/generated/QrCode.tsx
init_react_import();
function QrCodeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M5.25 5.25h3v3h-3zM5.25 15.75h3v3h-3zM15.75 5.25h3v3h-3zM5.25 12.75h6v1.5M14.25 14.25v4.5h4.5v-4.5h-1.5M11.25 17.25v1.5M11.25 5.25v4.5h1.5M15.75 11.25h3M.75 6V2.25a1.5 1.5 0 011.5-1.5H6M18 .75h3.75a1.5 1.5 0 011.5 1.5V6M23.25 18v3.75a1.5 1.5 0 01-1.5 1.5H18M6 23.25H2.25a1.5 1.5 0 01-1.5-1.5V18"
  }));
}
QrCodeIcon.toString = () => "elephantkit-QrCodeIcon";

// src/icon/generated/QuestionCircleBold.tsx
init_react_import();
function QuestionCircleBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm0 19a1.5 1.5 0 111.5-1.5A1.5 1.5 0 0112 19zm1.6-6.08a1 1 0 00-.6.917 1 1 0 11-2 0 3 3 0 011.8-2.75A2 2 0 1010 9.255a1 1 0 11-2 0 4 4 0 115.6 3.666z"
  }));
}
QuestionCircleBoldIcon.toString = () => "elephantkit-QuestionCircleBoldIcon";

// src/icon/generated/QuestionCircle.tsx
init_react_import();
function QuestionCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M9 9a3 3 0 114 2.829 1.5 1.5 0 00-1 1.415v1.006M12 17.25a.375.375 0 10.375.375.375.375 0 00-.375-.375h0",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    strokeMiterlimit: 10,
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5
  }));
}
QuestionCircleIcon.toString = () => "elephantkit-QuestionCircleIcon";

// src/icon/generated/Receipt.tsx
init_react_import();
function ReceiptIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M6 6.75h6M6 11.25h3.75M6 15.75h3.75M16.5 6.75H18M13.892 16.564a2.221 2.221 0 001.858.875c1.139 0 2.062-.693 2.062-1.547s-.923-1.547-2.062-1.547-2.063-.693-2.063-1.548.924-1.547 2.063-1.547a2.223 2.223 0 011.858.875M15.75 17.439v1.03M15.75 10.22v1.03"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M16.5 23.25a2.605 2.605 0 014.5 0V.75a2.614 2.614 0 01-2.25 1.293A2.613 2.613 0 0116.5.75a2.614 2.614 0 01-2.25 1.293A2.613 2.613 0 0112 .75a2.614 2.614 0 01-2.25 1.293A2.613 2.613 0 017.5.75a2.614 2.614 0 01-2.25 1.293A2.613 2.613 0 013 .75v22.5a2.605 2.605 0 014.5 0 2.605 2.605 0 014.5 0M12 23.25a2.605 2.605 0 014.5 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ReceiptIcon.toString = () => "elephantkit-ReceiptIcon";

// src/icon/generated/Redo.tsx
init_react_import();
function RedoIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25.748v7.5h-7.5M12 23.248a11.25 11.25 0 1110.6-15"
  }));
}
RedoIcon.toString = () => "elephantkit-RedoIcon";

// src/icon/generated/RemoveCircle.tsx
init_react_import();
function RemoveCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 11.999,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M7.5 16.499l9-9M16.5 16.499l-9-9"
  }));
}
RemoveCircleIcon.toString = () => "elephantkit-RemoveCircleIcon";

// src/icon/generated/RemoveSmall.tsx
init_react_import();
function RemoveSmallIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 1024 1024"
  }, props), /* @__PURE__ */ React.createElement("style", null), /* @__PURE__ */ React.createElement("path", {
    d: "M565.03 512l105.92-105.92c14.64-14.65 14.64-38.39 0-53.03-14.64-14.65-38.39-14.64-53.03 0L512 458.97 406.08 353.05c-14.65-14.64-38.39-14.65-53.03 0-14.64 14.64-14.64 38.39 0 53.03L458.97 512 353.05 617.92c-14.64 14.65-14.64 38.39 0 53.03 7.32 7.32 16.92 10.98 26.52 10.98s19.19-3.66 26.52-10.98L512 565.03l105.92 105.92c7.32 7.32 16.92 10.98 26.52 10.98 9.6 0 19.2-3.66 26.52-10.98 14.64-14.65 14.64-38.39 0-53.03L565.03 512z"
  }));
}
RemoveSmallIcon.toString = () => "elephantkit-RemoveSmallIcon";

// src/icon/generated/ResizeExpand.tsx
init_react_import();
function ResizeExpandIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M11.25 18.75h10.5a1.5 1.5 0 001.5-1.5v-15a1.5 1.5 0 00-1.5-1.5h-15a1.5 1.5 0 00-1.5 1.5v10.5M.75 18.75v-1.5M.75 14.25a1.5 1.5 0 011.5-1.5M11.25 18.75v-1.5M11.25 14.25a1.5 1.5 0 00-1.5-1.5M.75 21.75a1.5 1.5 0 001.5 1.5M11.25 21.75a1.5 1.5 0 01-1.5 1.5M5.25 12.75h1.5M5.25 23.25h1.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 3.75h3.75a.75.75 0 01.75.75v3.75M20.031 3.97L13.5 10.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ResizeExpandIcon.toString = () => "elephantkit-ResizeExpandIcon";

// src/icon/generated/ResizeShrink.tsx
init_react_import();
function ResizeShrinkIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M11.25 18.75h10.5a1.5 1.5 0 001.5-1.5v-15a1.5 1.5 0 00-1.5-1.5h-15a1.5 1.5 0 00-1.5 1.5v10.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 11.25H13.5a.75.75 0 01-.75-.75V6.75M20.25 3.75l-7.28 7.28M.75 18.75v-1.5M.75 14.25a1.5 1.5 0 011.5-1.5M11.25 18.75v-1.5M11.25 14.25a1.5 1.5 0 00-1.5-1.5M.75 21.75a1.5 1.5 0 001.5 1.5M11.25 21.75a1.5 1.5 0 01-1.5 1.5M5.25 12.75h1.5M5.25 23.25h1.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ResizeShrinkIcon.toString = () => "elephantkit-ResizeShrinkIcon";

// src/icon/generated/Rocket.tsx
init_react_import();
function RocketIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M22.5 1.567l-2.158.24a7.5 7.5 0 00-4.475 2.151L6.06 13.765l4.24 4.242L20.109 8.2a7.494 7.494 0 002.151-4.475zM6.06 13.765l-3.622-1.208a.749.749 0 01-.293-1.241l.232-.232a6 6 0 016.14-1.45l1.255.418z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M6.06 13.765l-3.622-1.208a.749.749 0 01-.293-1.241l.232-.232a6 6 0 016.14-1.45l1.255.418zM10.3 18.007l1.208 3.622a.749.749 0 001.241.293l.233-.232a6 6 0 001.449-6.14l-.416-1.25z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M10.3 18.007l1.208 3.622a.749.749 0 001.241.293l.233-.232a6 6 0 001.449-6.14l-.416-1.25zM7.779 18.538a2.243 2.243 0 01-.659 1.591c-.878.878-5.3 2.121-5.3 2.121s1.243-4.425 2.121-5.3a2.246 2.246 0 011.444-.655",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
RocketIcon.toString = () => "elephantkit-RocketIcon";

// src/icon/generated/RotateBack.tsx
init_react_import();
function RotateBackIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12.75 7.5l-3-3 3-3M3.031 12.75c-.02.247-.031.5-.031.75a8.973 8.973 0 00.284 2.25M5.106 7.715a8.968 8.968 0 00-1.229 1.906M5.128 19.312q.24.284.508.552a8.979 8.979 0 001.792 1.39"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M11.25 22.469c.247.02.5.031.75.031a9 9 0 000-18H9.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
RotateBackIcon.toString = () => "elephantkit-RotateBackIcon";

// src/icon/generated/RotateForward.tsx
init_react_import();
function RotateForwardIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M11.25 7.5l3-3-3-3M20.969 12.75c.02.247.031.5.031.75a8.973 8.973 0 01-.284 2.25M18.894 7.715a8.968 8.968 0 011.229 1.906M18.872 19.312q-.24.284-.508.552a8.979 8.979 0 01-1.792 1.39"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12.75 22.469c-.247.02-.5.031-.75.031a9 9 0 010-18h2.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
RotateForwardIcon.toString = () => "elephantkit-RotateForwardIcon";

// src/icon/generated/RssFeed.tsx
init_react_import();
function RssFeedIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 4.5,
    cy: 19.497,
    r: 3.75,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 8.844a11.328 11.328 0 0114.4 14.4M.75 1.113a18.777 18.777 0 0122.139 22.123",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
RssFeedIcon.toString = () => "elephantkit-RssFeedIcon";

// src/icon/generated/SacramentsBold.tsx
init_react_import();
function SacramentsBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.5 12A11.5 11.5 0 1012 .5 11.513 11.513 0 00.5 12zm5-.5a1 1 0 011-1h3.75a.25.25 0 00.25-.25V6.5a1 1 0 011-1h1a1 1 0 011 1v3.75a.25.25 0 00.25.25h3.75a1 1 0 011 1v1a1 1 0 01-1 1h-3.75a.25.25 0 00-.25.25v3.75a1 1 0 01-1 1h-1a1 1 0 01-1-1v-3.75a.25.25 0 00-.25-.25H6.5a1 1 0 01-1-1z"
  }));
}
SacramentsBoldIcon.toString = () => "elephantkit-SacramentsBoldIcon";

// src/icon/generated/SearchCircle.tsx
init_react_import();
function SearchCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 11.125,
    cy: 11.125,
    r: 4.375,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M14.219 14.218l3.031 3.032"
  }));
}
SearchCircleIcon.toString = () => "elephantkit-SearchCircleIcon";

// src/icon/generated/Search.tsx
init_react_import();
function SearchIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 9.813,
    cy: 9.812,
    r: 9.063,
    transform: "rotate(-23.025 9.813 9.812)",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M16.221 16.22l7.029 7.03"
  }));
}
SearchIcon.toString = () => "elephantkit-SearchIcon";

// src/icon/generated/Send.tsx
init_react_import();
function SendIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M1.4 3.743a1.5 1.5 0 011.973-2.077l19.014 9.659a.75.75 0 010 1.337L3.373 22.334A1.5 1.5 0 011.4 20.257l5.058-8.264zM22.797 11.993H6.453",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
SendIcon.toString = () => "elephantkit-SendIcon";

// src/icon/generated/Settings.tsx
init_react_import();
function SettingsIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#637592,#455B72",
    viewBox: "0 0 300 300",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M289.972 179.1l-14.49-5.91c-6.102-2.48-9.916-8.772-9.534-15.254.38-5.53.38-11.25-.191-16.78-.572-6.673 3.05-12.775 9.152-15.444l14.3-6.102c7.818-3.24 11.44-12.203 8.009-20.02l-8.39-19.83c-3.241-7.818-12.203-11.44-20.02-8.008l-14.3 6.101c-6.102 2.67-13.157.954-17.543-4.004-3.813-4.195-7.817-8.199-12.012-11.821-5.148-4.386-6.864-11.25-4.385-17.542l5.91-14.491c3.242-7.818-.572-16.78-8.39-19.83L198.26 2.157c-7.818-3.242-16.78.572-19.83 8.39l-5.91 14.49c-2.48 6.102-8.772 9.915-15.254 9.534-5.53-.382-11.25-.382-16.78.19-6.673.572-12.775-3.05-15.444-9.152l-6.102-14.3C115.698 3.49 106.736-.131 98.92 3.3l-19.83 8.39c-7.818 3.24-11.44 12.202-8.008 20.02l6.101 14.3c2.098 4.767 1.335 10.296-1.525 14.491l52.244 52.244c1.525-.953 3.05-1.716 4.767-2.478 22.5-9.534 48.24.953 57.773 23.262 5.53 13.156 4.195 27.647-2.478 39.278l51.863 51.863c4.385-4.004 10.486-5.148 16.016-3.051l14.491 5.91c7.818 3.242 16.78-.571 19.83-8.389l8.008-19.83c3.432-8.199-.381-17.16-8.199-20.21z",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M222.665 255.369c-2.097-4.767-1.335-10.296 1.525-14.491l-52.244-52.244c-1.525.953-3.05 1.716-4.767 2.478-22.499 9.534-48.24-.953-57.773-23.261-5.53-13.157-4.195-27.648 2.479-39.279L60.022 76.71c-4.386 4.004-10.487 5.148-16.017 3.051l-14.49-5.91c-7.818-3.242-16.78.571-19.83 8.389l-8.009 19.83c-3.241 7.817.572 16.779 8.39 19.83l14.49 5.91c6.102 2.48 9.916 8.771 9.534 15.254-.38 5.53-.38 11.25.191 16.78.572 6.673-3.05 12.774-9.152 15.444l-14.3 6.101c-7.818 3.242-11.44 12.203-8.009 20.02l8.39 19.83c3.241 7.818 12.203 11.441 20.02 8.009l14.3-6.102c6.102-2.669 13.157-.953 17.543 4.005 3.813 4.194 7.817 8.198 12.012 11.821 5.148 4.386 6.864 11.25 4.385 17.542l-5.91 14.491c-3.242 7.818.572 16.78 8.39 19.83l19.829 8.008c7.818 3.242 16.78-.572 19.83-8.39l5.91-14.49c2.48-6.102 8.772-9.915 15.254-9.534 5.53.381 11.25.381 16.78-.19 6.673-.573 12.775 3.05 15.444 9.152l6.102 14.3c3.241 7.817 12.203 11.44 20.02 8.008l19.83-8.39c7.818-3.24 11.44-12.202 8.008-20.02l-6.292-13.919z",
    fill: "var(--icon-color-2, currentColor)"
  }));
}
SettingsIcon.toString = () => "elephantkit-SettingsIcon";

// src/icon/generated/Share.tsx
init_react_import();
function ShareIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 8.25h1.5a1.5 1.5 0 011.5 1.5v12a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5v-12a1.5 1.5 0 011.5-1.5h1.5M12 .75v10.5M8.25 4.5L12 .75l3.75 3.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ShareIcon.toString = () => "elephantkit-ShareIcon";

// src/icon/generated/ShieldCheck.tsx
init_react_import();
function ShieldCheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M2.25 3.923v7.614A11.907 11.907 0 009.882 22.65l1.041.4a3 3 0 002.154 0l1.041-.4a11.907 11.907 0 007.632-11.113V3.923a1.487 1.487 0 00-.868-1.362A21.7 21.7 0 0012 .75a21.7 21.7 0 00-8.882 1.811 1.487 1.487 0 00-.868 1.362zM17.2 11.25a5.25 5.25 0 11-5.2-6",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 6.562l-4.786 4.786a.657.657 0 01-.928 0l-1.5-1.505",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ShieldCheckIcon.toString = () => "elephantkit-ShieldCheckIcon";

// src/icon/generated/ShieldCross.tsx
init_react_import();
function ShieldCrossIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M16.763 9a.75.75 0 00-.75-.75h-1.5a.75.75 0 01-.75-.75V6a.75.75 0 00-.75-.75h-1.5a.75.75 0 00-.75.75v1.5a.75.75 0 01-.75.75h-1.5a.75.75 0 00-.75.75v1.5a.75.75 0 00.75.75h1.5a.75.75 0 01.75.75v4.5a.75.75 0 00.75.75h1.5a.75.75 0 00.75-.75V12a.75.75 0 01.75-.75h1.5a.75.75 0 00.75-.75z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M3.263 3.953v7.471a12 12 0 007.011 11.22l.964.4a2.567 2.567 0 002 0l.963-.4a12.043 12.043 0 007.067-11.22V3.953a1.514 1.514 0 00-.8-1.374A18.713 18.713 0 0012.235.75a18.406 18.406 0 00-8.168 1.829 1.514 1.514 0 00-.804 1.374z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ShieldCrossIcon.toString = () => "elephantkit-ShieldCrossIcon";

// src/icon/generated/ShieldWarning.tsx
init_react_import();
function ShieldWarningIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M2.25 3.923v7.614A11.907 11.907 0 009.882 22.65l1.041.4a3 3 0 002.154 0l1.041-.4a11.907 11.907 0 007.632-11.113V3.923a1.487 1.487 0 00-.868-1.362A21.7 21.7 0 0012 .75a21.7 21.7 0 00-8.882 1.811 1.487 1.487 0 00-.868 1.362z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12 13.5a.375.375 0 11-.375.375A.375.375 0 0112 13.5M12 11.25v-4.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ShieldWarningIcon.toString = () => "elephantkit-ShieldWarningIcon";

// src/icon/generated/Shrink.tsx
init_react_import();
function ShrinkIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25.748l-9 9M9.75 20.998v-6.75H3M14.25 2.998v6.75H21M9.75 14.248l-9 9"
  }));
}
ShrinkIcon.toString = () => "elephantkit-ShrinkIcon";

// src/icon/generated/SlidersHorizontal.tsx
init_react_import();
function SlidersHorizontalIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.751,
    y: 0.75,
    width: 22.5,
    height: 22.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12.751 15.75h6M5.251 15.75h3M12.751 15.75A2.25 2.25 0 1110.5 13.5a2.25 2.25 0 012.251 2.25zM14.251 8.25h-9M18.751 8.25A2.25 2.25 0 1016.5 10.5a2.251 2.251 0 002.251-2.25z"
  }));
}
SlidersHorizontalIcon.toString = () => "elephantkit-SlidersHorizontalIcon";

// src/icon/generated/SlidersVertical.tsx
init_react_import();
function SlidersVerticalIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 0.75,
    width: 22.5,
    height: 22.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M15.75 11.265v-6M15.75 18.765v-3M18 13.515a2.25 2.25 0 11-2.25-2.25 2.25 2.25 0 012.25 2.25zM8.25 9.765v9M10.5 7.515a2.25 2.25 0 10-2.25 2.25 2.25 2.25 0 002.25-2.25z"
  }));
}
SlidersVerticalIcon.toString = () => "elephantkit-SlidersVerticalIcon";

// src/icon/generated/Snapchat.tsx
init_react_import();
function SnapchatIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 23.25a4.8 4.8 0 01-3-1.67 2.91 2.91 0 00-2.54-.81l-.64.11a1.31 1.31 0 01-1.52-1.62.84.84 0 00-.58-1l-2-.41a.85.85 0 01-.11-1.59 12.2 12.2 0 002.57-1.44 1.36 1.36 0 00-.09-2.24l-1.23-.78a1.52 1.52 0 01-.46-2.1 1.6 1.6 0 012.17-.45l1.32.84v-3.2a6.14 6.14 0 0112.27 0v3.19l1.32-.84a1.6 1.6 0 012.17.45 1.52 1.52 0 01-.46 2.1l-1.23.78a1.36 1.36 0 00-.09 2.24 12.2 12.2 0 002.57 1.44.85.85 0 01-.11 1.59l-2 .41a.84.84 0 00-.58 1 1.31 1.31 0 01-1.49 1.61l-.64-.11a2.91 2.91 0 00-2.54.81A4.8 4.8 0 0112 23.25z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
SnapchatIcon.toString = () => "elephantkit-SnapchatIcon";

// src/icon/generated/SpellingCheck.tsx
init_react_import();
function SpellingCheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M2.25 9.748h9M2.25 15.748v-10.5a4.5 4.5 0 019 0v10.5M9.22 20.028l3 3a.749.749 0 001.06 0l8.47-8.47v-.086"
  }));
}
SpellingCheckIcon.toString = () => "elephantkit-SpellingCheckIcon";

// src/icon/generated/StarAdd.tsx
init_react_import();
function StarAddIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 14.25v6M14.25 17.25h6M22.732 10.112l.278-.275a.805.805 0 00-.5-1.374l-6.44-.638L12.729 1.2a.819.819 0 00-1.458 0L7.925 7.825l-6.44.638a.805.805 0 00-.5 1.374l5.3 5.253-1.956 7.138a.813.813 0 001.151.935l3.737-1.851"
  }));
}
StarAddIcon.toString = () => "elephantkit-StarAddIcon";

// src/icon/generated/StarCircle.tsx
init_react_import();
function StarCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12.593 6.8l1.4 2.95h2.377a.651.651 0 01.469 1.114l-2.187 1.946 1.209 2.778a.658.658 0 01-.938.823L12 14.767l-2.923 1.644a.658.658 0 01-.938-.823l1.209-2.778-2.183-1.946a.651.651 0 01.469-1.114h2.377l1.4-2.95a.665.665 0 011.182 0z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
StarCircleIcon.toString = () => "elephantkit-StarCircleIcon";

// src/icon/generated/StarSubtract.tsx
init_react_import();
function StarSubtractIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M14.25 17.25h6M22.732 10.112l.278-.275a.805.805 0 00-.5-1.374l-6.44-.638L12.729 1.2a.819.819 0 00-1.458 0L7.925 7.825l-6.44.638a.805.805 0 00-.5 1.374l5.3 5.253-1.956 7.138a.813.813 0 001.151.935l3.737-1.851"
  }));
}
StarSubtractIcon.toString = () => "elephantkit-StarSubtractIcon";

// src/icon/generated/Star.tsx
init_react_import();
function StarIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12.729 1.2l3.346 6.629 6.44.638a.805.805 0 01.5 1.374l-5.3 5.253 1.965 7.138a.813.813 0 01-1.151.935L12 19.934l-6.52 3.229a.813.813 0 01-1.151-.935l1.965-7.138L.99 9.837a.805.805 0 01.5-1.374l6.44-.638L11.271 1.2a.819.819 0 011.458 0z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
StarIcon.toString = () => "elephantkit-StarIcon";

// src/icon/generated/Stopwatch.tsx
init_react_import();
function StopwatchIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 14.25,
    r: 9,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M18 7.5l1.875-1.875M19.5 5.25l.75.75M12 5.25V.75M14.25.75h-4.5M12 15l-3.75-4.151"
  }));
}
StopwatchIcon.toString = () => "elephantkit-StopwatchIcon";

// src/icon/generated/SubtractBold.tsx
init_react_import();
function SubtractBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.5,
    y: 8.5,
    width: 23,
    height: 7,
    rx: 1.5,
    ry: 1.5
  }));
}
SubtractBoldIcon.toString = () => "elephantkit-SubtractBoldIcon";

// src/icon/generated/SubtractCircle.tsx
init_react_import();
function SubtractCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M7.5 12h9"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
SubtractCircleIcon.toString = () => "elephantkit-SubtractCircleIcon";

// src/icon/generated/Subtract.tsx
init_react_import();
function SubtractIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 12.038h22.5"
  }));
}
SubtractIcon.toString = () => "elephantkit-SubtractIcon";

// src/icon/generated/Tap.tsx
init_react_import();
function TapIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18 23.25v-3.458a3 3 0 00-2.507-2.96L13.5 16.5v-3a1.5 1.5 0 00-3 0v5.25l-1.174-.587a1.638 1.638 0 00-1.755 2.744L10.5 23.25M6.386 15.749A6.75 6.75 0 1118.048 15M23.25 9.75L21 12l2.25 2.25M9.75.75L12 3 14.25.75M.75 14.25L3 12 .75 9.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
TapIcon.toString = () => "elephantkit-TapIcon";

// src/icon/generated/TextBold.tsx
init_react_import();
function TextBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M3.75 23.248h9.75a6.75 6.75 0 000-13.5h.75a4.5 4.5 0 100-9H3.75M6.75.748v22.5M13.5 9.748H6.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
TextBoldIcon.toString = () => "elephantkit-TextBoldIcon";

// src/icon/generated/TextItalic.tsx
init_react_import();
function TextItalicIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M23.25.748h-10.5M11.25 23.248H.75M6 23.248l12-22.5"
  }));
}
TextItalicIcon.toString = () => "elephantkit-TextItalicIcon";

// src/icon/generated/TextStrikeThrough.tsx
init_react_import();
function TextStrikeThroughIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18.75.748h-7.023c-2.485 0-4.977 2.014-4.977 4.5 0 6.75 12 6.75 12 13.5a4.5 4.5 0 01-4.5 4.5h-7.5M.75 12.748h22.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
TextStrikeThroughIcon.toString = () => "elephantkit-TextStrikeThroughIcon";

// src/icon/generated/TextUnderline.tsx
init_react_import();
function TextUnderlineIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75 23.248h22.5M3.75.748h3M17.25.748h3M18.75.748V12a6.75 6.75 0 01-13.5 0V.748"
  }));
}
TextUnderlineIcon.toString = () => "elephantkit-TextUnderlineIcon";

// src/icon/generated/TilmaPay.tsx
init_react_import();
function TilmaPayIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#D17464,#E0A961",
    viewBox: "0 0 54 26",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /* @__PURE__ */ React.createElement("g", {
    transform: "translate(1 1)",
    fill: "none",
    fillRule: "evenodd"
  }, /* @__PURE__ */ React.createElement("rect", {
    stroke: "#EEE",
    fill: "var(--gc-colors-background, white)",
    fillRule: "nonzero",
    width: 52.286,
    height: 24,
    rx: 4
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M16.588 9.506a4.08 4.08 0 01-4.078 4.082 4.08 4.08 0 01-4.078-4.082 4.08 4.08 0 014.078-4.082 4.08 4.08 0 014.078 4.082",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "var(--icon-color-2, currentColor)",
    d: "M12.54 17.977H7.07l2.735-4.741 2.735-4.742 2.735 4.742 2.735 4.741z"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M24.603 11.816c.541 0 .959-.13 1.253-.388.294-.26.441-.631.441-1.118 0-.478-.149-.845-.447-1.1-.298-.255-.714-.382-1.247-.382h-1.517v2.988h1.517zM21.91 7.77h2.776c.832 0 1.505.218 2.018.653.514.435.77 1.069.77 1.9 0 .541-.119 1.004-.358 1.388-.24.385-.567.675-.982.87a3.239 3.239 0 01-1.4.295h-1.647v3.13h-1.177V7.768zm12.953 5.094l-1.318-3.54-1.306 3.54h2.624zm.388 1.059h-3.412l-.765 2.082h-1.211l3.082-8.235h1.212l3.082 8.235h-1.212l-.776-2.082zm6.659-1.2l-2.824-4.953h1.282l2.118 3.788 2.13-3.788h1.282l-2.812 4.953v3.282H41.91v-3.282z",
    fill: "#2d2d2d"
  })));
}
TilmaPayIcon.toString = () => "elephantkit-TilmaPayIcon";

// src/icon/generated/TimeClockCircle.tsx
init_react_import();
function TimeClockCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 10.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 12V8.25M12 12l4.687 4.688"
  }));
}
TimeClockCircleIcon.toString = () => "elephantkit-TimeClockCircleIcon";

// src/icon/generated/Translate.tsx
init_react_import();
function TranslateIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M19.652.748l-3.75 2.25 2.25 3.75M23.25 8.187a6.749 6.749 0 00-6.884-4.417M4.348 23.248l3.75-2.25-2.25-3.75M.75 15.808a6.749 6.749 0 006.884 4.417"
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 0.748,
    width: 12,
    height: 12,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 11.248h6a1.5 1.5 0 011.5 1.5v9a1.5 1.5 0 01-1.5 1.5h-9a1.5 1.5 0 01-1.5-1.5v-6",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 20.248v-4.5a1.5 1.5 0 013 0v4.5M15.75 18.748h3M6.75 3.748v1.5M3.75 5.248h6M8.25 5.248s-1.5 4.5-4.5 4.5M6.749 8.014a3.933 3.933 0 003 1.734",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
TranslateIcon.toString = () => "elephantkit-TranslateIcon";

// src/icon/generated/Trash.tsx
init_react_import();
function TrashIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M17.25 21H6.75a1.5 1.5 0 01-1.5-1.5V6h13.5v13.5a1.5 1.5 0 01-1.5 1.5zM9.75 16.5v-6M14.25 16.5v-6M2.25 6h19.5M14.25 3h-4.5a1.5 1.5 0 00-1.5 1.5V6h7.5V4.5a1.5 1.5 0 00-1.5-1.5z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
TrashIcon.toString = () => "elephantkit-TrashIcon";

// src/icon/generated/Twitter.tsx
init_react_import();
function TwitterIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.18 6.71l-2.1-.9 1.1-2.4-2.56.85a4.47 4.47 0 00-3-1.2 4.51 4.51 0 00-4.5 4.5v1c-3.54.73-6.63-1.2-9.5-4.5q-.75 4 1.5 6l-3.29-.5a4.55 4.55 0 004.25 4l-2.75 1c1 2 2.82 2.31 5.25 2.5a11.52 11.52 0 01-6.75 2c12.76 5.67 20.25-2.66 20.25-10v-.83z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
TwitterIcon.toString = () => "elephantkit-TwitterIcon";

// src/icon/generated/UiWebpageCheck.tsx
init_react_import();
function UiWebpageCheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M3.75 19.5H2.571a1.038 1.038 0 01-1.071-1V1.725A1.027 1.027 0 012.571.75h18.858a1.027 1.027 0 011.071.975V18.5a1.038 1.038 0 01-1.071 1H20.25M5.25 4.5h13.5M5.217 8.25H15",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 17.625,
    r: 5.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M14.259 16.134l-2.438 3.251a.631.631 0 01-.949.068l-1.261-1.261",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UiWebpageCheckIcon.toString = () => "elephantkit-UiWebpageCheckIcon";

// src/icon/generated/UiWebpageRemove.tsx
init_react_import();
function UiWebpageRemoveIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M3.75 19.5H2.571a1.038 1.038 0 01-1.071-1V1.725A1.027 1.027 0 012.571.75h18.858a1.027 1.027 0 011.071.975V18.5a1.038 1.038 0 01-1.071 1H20.25M5.25 4.5h13.5M5.217 8.25H15",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 17.625,
    r: 5.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M10.125 19.5l3.75-3.75M10.125 15.75l3.75 3.75"
  }));
}
UiWebpageRemoveIcon.toString = () => "elephantkit-UiWebpageRemoveIcon";

// src/icon/generated/Undo.tsx
init_react_import();
function UndoIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M.75.748v7.5h7.5M12 23.248a11.25 11.25 0 10-10.6-15"
  }));
}
UndoIcon.toString = () => "elephantkit-UndoIcon";

// src/icon/generated/Unlock.tsx
init_react_import();
function UnlockIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 9.75V6a5.25 5.25 0 0110.5 0v3.75",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 6.75,
    y: 9.75,
    width: 16.5,
    height: 13.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M15 15v3"
  }));
}
UnlockIcon.toString = () => "elephantkit-UnlockIcon";

// src/icon/generated/UploadCircle.tsx
init_react_import();
function UploadCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M15.75 9.75L12 6 8.25 9.75M12 17.25V6"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UploadCircleIcon.toString = () => "elephantkit-UploadCircleIcon";

// src/icon/generated/UploadSquare.tsx
init_react_import();
function UploadSquareIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 18.751v3a1.5 1.5 0 001.5 1.5h3M.75 5.251v-3a1.5 1.5 0 011.5-1.5h3M.75 14.251v-4.5M23.25 18.751v3a1.5 1.5 0 01-1.5 1.5h-3M23.25 5.251v-3a1.5 1.5 0 00-1.5-1.5h-3M23.25 14.251v-4.5M14.25.751h-4.5M14.25 23.251h-4.5M12 18.001v-12M7.5 10.501l4.5-4.5 4.5 4.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UploadSquareIcon.toString = () => "elephantkit-UploadSquareIcon";

// src/icon/generated/Upload.tsx
init_react_import();
function UploadIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 1024 1024"
  }, props), /* @__PURE__ */ React.createElement("style", null), /* @__PURE__ */ React.createElement("path", {
    d: "M629.8 554.1c7.3 7.3 16.9 11 26.5 11s19.2-3.7 26.5-11c14.6-14.6 14.6-38.4 0-53L539 357.3c-14.6-14.6-38.4-14.6-53 0L342.2 501.1c-14.6 14.6-14.6 38.4 0 53s38.4 14.6 53 0l79.8-79.8v360.3c0 20.7 16.8 37.5 37.5 37.5s37.5-16.8 37.5-37.5V474.4l79.8 79.7z"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M827.3 432.2c-7.7-71.6-39.3-137.9-91-189.5-59.8-59.8-139.4-92.8-224.1-92.8-37.1 0-73.5 6.4-108.1 18.9-33.4 12.1-64.4 29.8-92.1 52.3-47.8 39-83.2 91.4-101.8 149.6-104.2 10.7-185.8 99-185.8 206.1 0 54.9 21.2 106.6 59.8 145.6 37.1 37.5 86 59.1 138.4 61.3 2.2.4 4.5.6 6.8.6h168c20.7 0 37.5-16.8 37.5-37.5s-16.8-37.5-37.5-37.5H235.3c-1.7-.3-3.5-.4-5.3-.4-34.9-.4-67.7-14.4-92.3-39.2-24.6-24.9-38.2-57.9-38.2-92.9 0-72.9 59.3-132.1 132.1-132.1 1.9 0 3.8 0 6 .1 18.2.8 34.4-11.7 38.3-29.5 11.5-53.1 41.2-101.4 83.6-136 43-35.1 97.2-54.4 152.8-54.4 64.6 0 125.3 25.2 171 70.8s70.8 106.4 70.8 171c0 1.7 0 3.6-.1 5.8-.3 11.6 4.9 22.7 13.9 30 9 7.3 20.9 10 32.2 7.4 7.6-1.8 15.5-2.7 23.3-2.7 55.6 0 100.9 45.3 100.9 100.9 0 55.6-45.3 100.9-100.9 100.9-1.9 0-3.7.1-5.5.4H627.5c-20.7 0-37.5 16.8-37.5 37.5s16.8 37.5 37.5 37.5h196.1c2.1 0 4.2-.2 6.3-.5 94.1-3.3 169.6-80.9 169.6-175.8 0-95.8-76.9-173.9-172.2-175.9z"
  }));
}
UploadIcon.toString = () => "elephantkit-UploadIcon";

// src/icon/generated/UserAdd.tsx
init_react_import();
function UserAddIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 14.25v6M14.25 17.25h6M.75 17.25a6.753 6.753 0 019.4-6.208"
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.5,
    cy: 4.875,
    r: 4.125,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UserAddIcon.toString = () => "elephantkit-UserAddIcon";

// src/icon/generated/UserBlock.tsx
init_react_import();
function UserBlockIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 17.251a6.753 6.753 0 019.4-6.208",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.5,
    cy: 4.876,
    r: 4.125,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.249,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M13.008 21.49l8.484-8.484"
  }));
}
UserBlockIcon.toString = () => "elephantkit-UserBlockIcon";

// src/icon/generated/UserBold.tsx
init_react_import();
function UserBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 6.25,
    r: 5.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12 13.25a9.511 9.511 0 00-9.5 9.5.5.5 0 00.5.5h18a.5.5 0 00.5-.5 9.511 9.511 0 00-9.5-9.5z"
  }));
}
UserBoldIcon.toString = () => "elephantkit-UserBoldIcon";

// src/icon/generated/UserCheck.tsx
init_react_import();
function UserCheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 17.25a6.753 6.753 0 019.4-6.208",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.5,
    cy: 4.875,
    r: 4.125,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M23.25 17.25a6 6 0 11-6-6M23.25 12.749l-5.47 5.47a.749.749 0 01-1.06 0L15 16.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UserCheckIcon.toString = () => "elephantkit-UserCheckIcon";

// src/icon/generated/UserCircleBold.tsx
init_react_import();
function UserCircleBoldIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm6.134 17.9a.749.749 0 01-.634.35h-11a.75.75 0 01-.677-1.072 6.834 6.834 0 0112.354 0 .748.748 0 01-.043.722zM12 4.35a3.7 3.7 0 11-3.7 3.7 3.7 3.7 0 013.7-3.7z"
  }));
}
UserCircleBoldIcon.toString = () => "elephantkit-UserCircleBoldIcon";

// src/icon/generated/UserCircle.tsx
init_react_import();
function UserCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 9.75,
    r: 5.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M18.913 20.876a9.746 9.746 0 00-13.826 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 11.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UserCircleIcon.toString = () => "elephantkit-UserCircleIcon";

// src/icon/generated/UserDirectory.tsx
init_react_import();
function UserDirectoryIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12.75,
    cy: 9.375,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M8.25 17.25a4.5 4.5 0 019 0M5.25.75v22.5M23.25 3v3M23.25 9v3M23.25 15v3",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 0.75,
    width: 19.5,
    height: 22.5,
    rx: 1.5,
    ry: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UserDirectoryIcon.toString = () => "elephantkit-UserDirectoryIcon";

// src/icon/generated/UserInformation.tsx
init_react_import();
function UserInformationIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 17.25a6.753 6.753 0 019.4-6.208",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.5,
    cy: 4.875,
    r: 4.125,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M17.25 20.25v-3M17.25 14.25a.375.375 0 10.375.375.374.374 0 00-.375-.375"
  }));
}
UserInformationIcon.toString = () => "elephantkit-UserInformationIcon";

// src/icon/generated/UserKey.tsx
init_react_import();
function UserKeyIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.5,
    cy: 4.875,
    r: 4.125,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M12.21 12.426A6.742 6.742 0 00.75 17.25M15.575 18.925a.375.375 0 11-.531 0 .375.375 0 01.531 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.086 17.71l3.688-3.688a1.624 1.624 0 10-2.3-2.3l-3.684 3.691a4.061 4.061 0 102.3 2.3z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UserKeyIcon.toString = () => "elephantkit-UserKeyIcon";

// src/icon/generated/UserNotification.tsx
init_react_import();
function UserNotificationIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 17.249a6.753 6.753 0 019.4-6.208",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.5,
    cy: 4.874,
    r: 4.125,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M18 12a3.75 3.75 0 013.75 3.75v3a1.5 1.5 0 001.5 1.5h-10.5a1.5 1.5 0 001.5-1.5v-3A3.75 3.75 0 0118 12zM18 22.5a.375.375 0 11-.375.375A.375.375 0 0118 22.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UserNotificationIcon.toString = () => "elephantkit-UserNotificationIcon";

// src/icon/generated/UserRemove.tsx
init_react_import();
function UserRemoveIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 17.251a6.753 6.753 0 019.4-6.208",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.5,
    cy: 4.876,
    r: 4.125,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.249,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M19.5 14.998l-4.5 4.5M15 14.998l4.5 4.5"
  }));
}
UserRemoveIcon.toString = () => "elephantkit-UserRemoveIcon";

// src/icon/generated/UserSubtract.tsx
init_react_import();
function UserSubtractIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 17.25a6.753 6.753 0 019.4-6.208",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.5,
    cy: 4.875,
    r: 4.125,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.249,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M14.25 17.249h6"
  }));
}
UserSubtractIcon.toString = () => "elephantkit-UserSubtractIcon";

// src/icon/generated/UserTime.tsx
init_react_import();
function UserTimeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 17.25a6.753 6.753 0 019.4-6.208",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.5,
    cy: 4.875,
    r: 4.125,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 17.25,
    r: 6,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M19.901 17.25H17.25v-2.652"
  }));
}
UserTimeIcon.toString = () => "elephantkit-UserTimeIcon";

// src/icon/generated/User.tsx
init_react_import();
function UserIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 6,
    r: 5.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M2.25 23.25a9.75 9.75 0 0119.5 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UserIcon.toString = () => "elephantkit-UserIcon";

// src/icon/generated/UsersCheck.tsx
init_react_import();
function UsersCheckIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.25 17.25a6 6 0 11-6-6M23.25 12.749l-5.47 5.47a.749.749 0 01-1.06 0L15 16.5M10.782 10.513A6.052 6.052 0 006.75 9a6 6 0 00-6 5.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 6.75,
    cy: 4.125,
    r: 3.375,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 16.5,
    cy: 3.375,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M20.4 9a4.5 4.5 0 00-7.285-.71",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UsersCheckIcon.toString = () => "elephantkit-UsersCheckIcon";

// src/icon/generated/UsersCircle.tsx
init_react_import();
function UsersCircleIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 3.75,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 14.25V12a3.75 3.75 0 00-7.5 0v2.25h1.5l.75 6h3l.75-6z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 4.5,
    cy: 6,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M5.7 9.947A3.753 3.753 0 00.75 13.5v.75h1.5l.75 4.5h3l.376-2.256",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 19.5,
    cy: 6,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M18.3 9.947a3.753 3.753 0 014.95 3.553v.75h-1.5l-.75 4.5h-3l-.376-2.256M23.25 21c0 1.243-5.037 2.25-11.25 2.25S.75 22.243.75 21",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UsersCircleIcon.toString = () => "elephantkit-UsersCircleIcon";

// src/icon/generated/UsersCog.tsx
init_react_import();
function UsersCogIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.25,
    cy: 16.5,
    r: 1.5,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M18.524 10.7l.442 1.453a.993.993 0 001.173.681l1.473-.342a1.339 1.339 0 011.274 2.219l-1.03 1.111a1 1 0 000 1.362l1.03 1.111a1.338 1.338 0 01-1.274 2.218l-1.473-.341a.992.992 0 00-1.173.681l-.442 1.447a1.331 1.331 0 01-2.549 0l-.442-1.452a.992.992 0 00-1.173-.681l-1.473.341a1.338 1.338 0 01-1.274-2.218l1.03-1.111a1 1 0 000-1.362l-1.03-1.111a1.339 1.339 0 011.274-2.219l1.473.342a.993.993 0 001.173-.681l.442-1.453a1.331 1.331 0 012.549.005zM10.256 10.1A6.067 6.067 0 006.75 9a6 6 0 00-6 5.25",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 6.75,
    cy: 4.125,
    r: 3.375,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 16.5,
    cy: 3.375,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M19.526 7.921a4.5 4.5 0 00-6.414.369",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UsersCogIcon.toString = () => "elephantkit-UsersCogIcon";

// src/icon/generated/Users.tsx
init_react_import();
function UsersIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 7.5,
    cy: 7.875,
    r: 4.125,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M.75 20.25a6.75 6.75 0 0113.5 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("circle", {
    cx: 17.727,
    cy: 10.125,
    r: 3.375,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.813 15.068a5.526 5.526 0 017.437 5.182",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
UsersIcon.toString = () => "elephantkit-UsersIcon";

// src/icon/generated/VideoCamera.tsx
init_react_import();
function VideoCameraIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("rect", {
    x: 0.75,
    y: 5.261,
    width: 15,
    height: 13.5,
    rx: 3,
    ry: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M18.75 15.011l3.415 1.707a.75.75 0 001.085-.671V7.974a.749.749 0 00-1.085-.67L18.75 9.011",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
VideoCameraIcon.toString = () => "elephantkit-VideoCameraIcon";

// src/icon/generated/ViewOff.tsx
init_react_import();
function ViewOffIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M2.783 21l18.75-18M8.964 19.051A9.985 9.985 0 0012 19.5c4.1.069 8.258-2.813 10.824-5.637a1.663 1.663 0 000-2.226A20.568 20.568 0 0019.75 8.88M14.413 6.282A9.549 9.549 0 0012 6c-4.031-.067-8.2 2.752-10.821 5.635a1.663 1.663 0 000 2.226 20.8 20.8 0 002.6 2.4M8.25 12.75A3.749 3.749 0 0112 9"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 12.749h0A3.75 3.75 0 0112 16.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ViewOffIcon.toString = () => "elephantkit-ViewOffIcon";

// src/icon/generated/View.tsx
init_react_import();
function ViewIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M12 5.251C7.969 5.183 3.8 8 1.179 10.885a1.663 1.663 0 000 2.226C3.743 15.935 7.9 18.817 12 18.748c4.1.069 8.258-2.813 10.824-5.637a1.663 1.663 0 000-2.226C20.2 8 16.031 5.183 12 5.251z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M15.75 12A3.75 3.75 0 1112 8.249 3.749 3.749 0 0115.75 12z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ViewIcon.toString = () => "elephantkit-ViewIcon";

// src/icon/generated/Website.tsx
init_react_import();
function WebsiteIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    "data-default-colors": "#637592,#33506E",
    viewBox: "0 0 300 300",
    xmlns: "http://www.w3.org/2000/svg",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 2
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M207.03.04H24.055C15.669.04 8.77 6.939 8.77 15.325v246.463c0 8.386 6.9 15.285 15.285 15.285H77.55v-101.26c0-18.867 15.523-34.39 34.39-34.39h110.374V15.324c0-8.386-6.9-15.285-15.285-15.285zm-42.51 97.439c0 4.192-3.45 7.642-7.642 7.642H47.975c-4.192 0-7.642-3.45-7.642-7.642v-7.642c0-4.192 3.45-7.643 7.642-7.643h108.903c4.191 0 7.642 3.451 7.642 7.643v7.642zm26.29-45.854c0 4.192-3.451 7.643-7.643 7.643H47.917c-4.191 0-7.642-3.45-7.642-7.643v-7.642c0-4.192 3.451-7.642 7.643-7.642h135.249c4.192 0 7.642 3.45 7.642 7.642v7.642z",
    fill: "var(--icon-color-1, currentColor)"
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M275.944 164.349H115.762c-8.385 0-15.284 6.9-15.284 15.285v105.08c0 8.386 6.899 15.285 15.284 15.285h160.182c8.386 0 15.285-6.899 15.285-15.284V179.634c0-8.386-6.9-15.285-15.285-15.285zm-50.897 74.512l-44.134 24.532a7.648 7.648 0 01-3.707.959c-4.186 0-7.635-3.44-7.642-7.627v-49.178c.002-4.19 3.452-7.638 7.642-7.638 1.305 0 2.587.334 3.726.97l44.134 24.646a7.65 7.65 0 013.9 6.663 7.654 7.654 0 01-3.92 6.673z",
    fill: "var(--icon-color-2, currentColor)"
  }));
}
WebsiteIcon.toString = () => "elephantkit-WebsiteIcon";

// src/icon/generated/Wheelchair.tsx
init_react_import();
function WheelchairIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 11.25,
    cy: 3.56,
    r: 2.625,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.408 22.231l-1.836-3.671H11.25a1.5 1.5 0 01-1.5-1.5v-7.5a1.5 1.5 0 013 0v6h3.75a1.5 1.5 0 011.342.829l2.25 4.5a1.5 1.5 0 01-2.684 1.342zM12.75 22.257a6 6 0 01-6-10.394",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
WheelchairIcon.toString = () => "elephantkit-WheelchairIcon";

// src/icon/generated/WifiSignal.tsx
init_react_import();
function WifiSignalIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 10.319,
    r: 2.25,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5,
    d: "M12 12.569v9.684M19.286 18.89a11.249 11.249 0 000-17.143M16.371 15.462a6.749 6.749 0 000-10.286M4.714 18.89a11.249 11.249 0 010-17.143M7.629 15.462a6.749 6.749 0 010-10.286"
  }));
}
WifiSignalIcon.toString = () => "elephantkit-WifiSignalIcon";

// src/icon/generated/Wifi.tsx
init_react_import();
function WifiIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("circle", {
    cx: 12,
    cy: 18.75,
    r: 3,
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /* @__PURE__ */ React.createElement("path", {
    d: "M17.3 13.447a7.5 7.5 0 00-10.606 0M20.485 10.265a12 12 0 00-16.97 0M23.25 6.681a16.5 16.5 0 00-22.5 0",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
WifiIcon.toString = () => "elephantkit-WifiIcon";

// src/icon/generated/Wrench.tsx
init_react_import();
function WrenchIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 1024 1024"
  }, props), /* @__PURE__ */ React.createElement("style", null), /* @__PURE__ */ React.createElement("path", {
    d: "M996.1 248.3c-2.7-16.7-16.2-29.5-32.9-31.3-16.8-1.8-32.7 7.8-38.9 23.5-5.4 13.7-13.5 26-24.1 36.6-20.4 20.4-47.8 31.5-77.3 31.3-29.5-.2-56.8-11.7-76.9-32.3-20-20.5-30.8-47.6-30.7-76.2.2-28.7 11.4-55.6 31.7-75.9 10.5-10.5 22.8-18.6 36.6-24.1 15.7-6.2 25.3-22.2 23.5-38.9-1.8-16.8-14.7-30.3-31.3-32.9-40.7-6.5-83-3.5-122.3 8.8-40.6 12.7-78.1 35.5-108.4 65.8-69 69-94.3 169.6-67.6 262.1L76.6 765.5c-18.1 18.1-28 42.1-28 67.6s9.9 49.6 28 67.6l46.7 46.7c18.6 18.6 43.1 28 67.6 28s49-9.3 67.6-28l400.9-400.9c92.5 26.7 193.1 1.5 262.1-67.6 30.3-30.3 53-67.8 65.8-108.4 12.3-39.2 15.4-81.5 8.8-122.2zM868.5 425.9c-36.6 36.6-85.4 56-135.3 56-23.6 0-47.3-4.4-70.1-13.3-13.9-5.5-29.7-2.2-40.3 8.4L205.5 894.4c-8 8-21.1 8-29.2 0l-46.7-46.7c-8-8-8-21.1 0-29.2L547 401.1c10.6-10.6 13.8-26.4 8.4-40.3-27.9-70.9-11.1-151.5 42.7-205.4 18.6-18.6 40.2-32.9 64.3-42.4-14.2 26.2-21.9 55.6-22.1 86.2-.3 48.5 18.1 94.3 51.9 129 34.2 35.2 80.4 54.7 130.1 55 31.6.2 61.9-7.4 88.6-21.8-9.4 24.2-23.7 45.8-42.4 64.5z"
  }));
}
WrenchIcon.toString = () => "elephantkit-WrenchIcon";

// src/icon/generated/Youtube.tsx
init_react_import();
function YoutubeIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M23.25 7.44A3.44 3.44 0 0019.81 4H4.19A3.44 3.44 0 00.75 7.44v9.12A3.44 3.44 0 004.19 20h15.62a3.44 3.44 0 003.44-3.44zM9.5 15.94V7.28l6.77 4.33z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
YoutubeIcon.toString = () => "elephantkit-YoutubeIcon";

// src/icon/generated/ZoomIn.tsx
init_react_import();
function ZoomInIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18.875 9.811A9.063 9.063 0 119.813.749a9.063 9.063 0 019.062 9.062zM5.25 9.749h9M9.75 14.249v-9M16.221 16.219l7.029 7.03",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ZoomInIcon.toString = () => "elephantkit-ZoomInIcon";

// src/icon/generated/ZoomOut.tsx
init_react_import();
function ZoomOutIcon(props) {
  return /* @__PURE__ */ React.createElement(Icon, __spreadValues({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M18.875 9.811A9.063 9.063 0 119.812.749a9.063 9.063 0 019.063 9.062zM5.25 9.749h9M16.221 16.219l7.029 7.03",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
}
ZoomOutIcon.toString = () => "elephantkit-ZoomOutIcon";

// src/popover/Popover.tsx
init_react_import();
import { AnimatePresence as AnimatePresence2, motion as motion3 } from "framer-motion";
import { cloneElement, useEffect as useEffect2, useState as useState2 } from "react";
import { DismissButton, FocusScope, OverlayContainer as OverlayContainer2 } from "react-aria";
import { useLayer } from "react-laag";

// src/typography/Code.tsx
init_react_import();
var Code = styled("code", {
  backgroundColor: "hsl($hsl_primary / 0.1)",
  padding: "calc($1 / 2) $1",
  borderRadius: "calc($1 / 2)",
  fontSize: "80%",
  fontWeight: "$medium",
  lineHeight: "2",
  margin: "$1 0",
  fontFamily: "$mono",
  color: "$primary",
  border: "1px solid hsl($hsl_primary / 0.3)"
});

// src/typography/Heading.tsx
init_react_import();
import { forwardRef as forwardRef3 } from "react";
var HeadingFactory = styled("h1", {
  margin: 0,
  fontFamily: "$sans",
  capsize: {
    metrics: "Modern Era",
    lineGap: 0
  },
  variants: {
    size: {
      groupHeadline: {
        fontWeight: "$regular",
        letterSpacing: "0.6px",
        textTransform: "uppercase",
        capsize: {
          fontSize: fontPxToNum(1)
        }
      },
      subHeadline: {
        fontWeight: "$medium",
        capsize: {
          fontSize: fontPxToNum(4)
        }
      },
      headline: {
        fontWeight: "$medium",
        capsize: {
          fontSize: fontPxToNum(5)
        }
      },
      title3: {
        fontWeight: "$medium",
        capsize: {
          fontSize: fontPxToNum(6)
        }
      },
      title2: {
        fontWeight: "$medium",
        capsize: {
          fontSize: fontPxToNum(7)
        }
      },
      title1: {
        fontWeight: "$medium",
        capsize: {
          fontSize: fontPxToNum(8)
        }
      },
      largeTitle: {
        fontWeight: "$bold",
        capsize: {
          fontSize: fontPxToNum(9)
        }
      },
      extraLargeTitle: {
        fontWeight: "$bold",
        capsize: {
          fontSize: fontPxToNum(10)
        }
      }
    }
  },
  defaultVariants: {
    size: "headline"
  }
});
var headingLevels = {
  subHeadline: "h6",
  headline: "h5",
  title3: "h4",
  title2: "h3",
  title1: "h2",
  largeTitle: "h1",
  extraLargeTitle: "h1"
};
var Heading = forwardRef3((_a2, forwardedRef) => {
  var _b = _a2, { size = "headline" } = _b, props = __objRest(_b, ["size"]);
  return /* @__PURE__ */ React.createElement(HeadingFactory, __spreadValues({
    as: headingLevels[size],
    size,
    ref: forwardedRef
  }, props));
});
Heading.displayName = "Heading";

// src/typography/Label.tsx
init_react_import();
var Label = styled("label", {
  fontWeight: "$medium",
  margin: 0,
  fontSize: "$root",
  fontFamily: "$sans",
  capsize: {
    metrics: "Modern Era",
    lineGap: 0
  },
  variants: {
    size: {
      extraSmall: {
        capsize: {
          fontSize: fontPxToNum(1),
          lineGap: lineHeightPxToNum(1)
        }
      },
      footnote: {
        capsize: {
          fontSize: fontPxToNum(2),
          lineGap: lineHeightPxToNum(1)
        }
      },
      caption2: {
        capsize: {
          fontSize: fontPxToNum(2),
          lineGap: lineHeightPxToNum(1)
        }
      },
      caption1: {
        capsize: {
          fontSize: fontPxToNum(3),
          lineGap: lineHeightPxToNum(1)
        }
      },
      body: {
        capsize: {
          fontSize: fontPxToNum(4),
          lineGap: lineHeightPxToNum(1)
        }
      },
      small: {
        capsize: {
          fontSize: 12.5,
          lineGap: lineHeightPxToNum(1)
        }
      },
      regular: {
        capsize: {
          fontSize: fontPxToNum(3),
          lineGap: lineHeightPxToNum(1)
        }
      },
      large: {
        capsize: {
          fontSize: fontPxToNum(4),
          lineGap: lineHeightPxToNum(1)
        }
      }
    },
    appearance: {
      default: {},
      group: {
        color: "$gray1",
        fontWeight: "$regular",
        letterSpacing: "0.6px",
        textTransform: "uppercase",
        capsize: {
          fontSize: fontPxToNum(1),
          lineGap: lineHeightPxToNum(1)
        }
      }
    },
    disabled: {
      true: {
        color: "$disabled"
      }
    }
  },
  defaultVariants: {
    size: "regular",
    appearance: "default",
    disabled: false
  },
  compoundVariants: [
    { size: "small", appearance: "group", css: { fontSize: 11, lineGap: lineHeightPxToNum(1) } },
    { size: "regular", appearance: "group", css: { fontSize: 11, lineGap: lineHeightPxToNum(1) } },
    { size: "large", appearance: "group", css: { fontSize: fontPxToNum(2), lineGap: lineHeightPxToNum(1) } }
  ]
});

// src/typography/Link.tsx
init_react_import();
import { forwardRef as forwardRef4, useRef as useRef3 } from "react";
import { useLink } from "react-aria";
import { mergeRefs as mergeRefs2 } from "react-laag";

// src/theme/dark.ts
init_react_import();
var hsl2 = {
  slate: "210 21% 58%",
  blue: "214 23% 48%",
  navy: "216 37% 25%",
  steel: "210 31% 43%",
  jade: "174 18% 33%",
  green: "83 19% 49%",
  yellow: "34 68% 62%",
  coral: "9 71% 62%",
  red: "354 37% 51%",
  pink: "356 55% 76%",
  rose: "338 17% 50%",
  purple: "263 24% 55%",
  black: "0 0% 0%",
  gray1: "258 7% 38%",
  gray2: "258 8% 26%",
  gray3: "249 6% 23%",
  gray4: "252 8% 15%",
  gray5: "255 7% 13%",
  gray6: "260 8% 10%",
  gray7: "260 8% 6%",
  white: "0 0% 100%",
  danger: "3 63% 57%",
  success: "135 21% 44%",
  warning: "24 68% 57%"
};
var colors2 = initThemeColors(hsl2);
var semanticColors2 = {
  secondary: "$gray1",
  background: "$gray7",
  secondaryBackground: "$gray5",
  tertiaryBackground: "$gray4",
  overlay: "hsl($hsl_primary / 0.85)",
  label: "$white",
  secondaryLabel: "$gray1",
  placeholderText: "$gray1"
};
var darkTheme = createTheme("gc-dark", {
  colors: __spreadValues(__spreadValues({}, colors2), semanticColors2)
});

// src/typography/Link.tsx
var LinkFactory = styled(TextFactory, {
  all: "unset",
  textDecoration: "none",
  cursor: "pointer",
  color: "$primary",
  display: "inline",
  transition: "$fast",
  "&:hover, &:active": {
    filter: "brightness(80%) contrast(110%)"
  },
  [`.${darkTheme} &`]: {
    "&:hover, &:active": {
      filter: "brightness(110%) contrast(110%)"
    }
  },
  "&:focus": {
    outline: "none",
    backgroundColor: "$gray5"
  },
  variants: {
    underline: {
      true: {
        textDecoration: "underline",
        textDecorationThickness: "1.5px",
        textUnderlineOffset: "2px"
      }
    },
    isPressed: {
      true: {
        backgroundColor: "$pressedColor"
      }
    }
  }
});
var Link = forwardRef4((props, forwardedRef) => {
  const ref = useRef3();
  const { linkProps, isPressed } = useLink(__spreadProps(__spreadValues({}, props), { isDisabled: props.disabled }), ref);
  return /* @__PURE__ */ React.createElement(LinkFactory, __spreadProps(__spreadValues(__spreadValues({
    as: "a",
    isPressed
  }, props), linkProps), {
    ref: mergeRefs2(ref, forwardedRef)
  }));
});
Link.displayName = "Link";

// src/typography/Paragraph.tsx
init_react_import();
var Paragraph = styled("p", {
  margin: 0,
  variants: {
    size: {
      caption2: {
        fontSize: "$caption2",
        fontWeight: "$regular",
        lineHeight: "1.15",
        letterSpacing: "0px"
      },
      caption1: {
        fontSize: "$caption1",
        fontWeight: "$regular",
        lineHeight: "1.15",
        letterSpacing: "0px"
      },
      body: {
        fontSize: "$body",
        fontWeight: "$regular",
        lineHeight: "1.25",
        letterSpacing: "-0.05px"
      },
      large: {
        fontSize: "$large",
        fontWeight: "$regular",
        lineHeight: "1.35",
        letterSpacing: "-0.05px"
      }
    }
  },
  defaultVariants: {
    size: "body"
  }
});

// src/typography/Pre.tsx
init_react_import();
var Pre = styled("pre", Paragraph, { fontFamily: "$mono" });
Pre.defaultProps = {
  size: "caption1"
};

// src/typography/Strong.tsx
init_react_import();
var Strong = styled("strong", TextFactory, { fontWeight: "$bold" });

// src/popover/Popover.tsx
function Popover(_a2) {
  var _b = _a2, {
    children,
    content,
    showDelay = 0,
    hideDelay = 125,
    placement = "bottom-start",
    triggerOffset = 10,
    containerOffset = 15,
    isShown = false,
    closeOnClickOutside = true,
    closeOnLeaveViewport = true,
    automaticPlacement = true,
    onClose
  } = _b, props = __objRest(_b, [
    "children",
    "content",
    "showDelay",
    "hideDelay",
    "placement",
    "triggerOffset",
    "containerOffset",
    "isShown",
    "closeOnClickOutside",
    "closeOnLeaveViewport",
    "automaticPlacement",
    "onClose"
  ]);
  const [isOpen, setOpen] = useState2(isShown);
  function close() {
    onClose == null ? void 0 : onClose();
    setOpen(false);
  }
  function open() {
    setOpen(!isOpen);
  }
  function toggle() {
    setOpen(!isOpen);
  }
  useEffect2(() => setOpen(isShown), [isShown]);
  const { renderLayer, triggerProps, layerProps, layerSide } = useLayer({
    isOpen,
    container: document == null ? void 0 : document.querySelector('[data-overlay-container="true"]'),
    onOutsideClick: closeOnClickOutside && close,
    onDisappear: closeOnLeaveViewport && close,
    overflowContainer: true,
    auto: automaticPlacement,
    placement,
    triggerOffset,
    containerOffset,
    arrowOffset: 16
  });
  return /* @__PURE__ */ React.createElement(React.Fragment, null, typeof children === "function" ? children({ triggerProps, isOpen, setOpen, toggle, open, close }) : cloneElement(children, __spreadProps(__spreadValues({}, triggerProps), { isPressed: isOpen, onClick: open })), /* @__PURE__ */ React.createElement(StackingProvider, {
    value: 10 /* POSITIONER */
  }, (zIndex) => renderLayer(/* @__PURE__ */ React.createElement(AnimatePresence2, null, isOpen && /* @__PURE__ */ React.createElement(OverlayContainer2, null, /* @__PURE__ */ React.createElement(FocusScope, {
    restoreFocus: true
  }, /* @__PURE__ */ React.createElement(Card, __spreadProps(__spreadValues(__spreadValues({}, props), layerProps), {
    border: true,
    elevation: 2,
    role: "dialog",
    as: motion3.div,
    initial: {
      opacity: 0,
      y: layerSide === "center" ? 0 : layerSide === "top" ? triggerOffset : -triggerOffset,
      scale: layerSide === "center" ? 0.8 : 1
    },
    animate: { opacity: 1, y: 0, scale: 1 },
    exit: {
      opacity: 0,
      scale: layerSide === "center" ? 0.8 : 1,
      y: layerSide === "center" ? 0 : layerSide === "top" ? triggerOffset : -triggerOffset
    },
    transition: {
      type: "spring",
      stiffness: 800,
      damping: 25,
      opacity: { type: "tween", duration: 0.1 }
    },
    css: __spreadValues({
      backgroundColor: "$background",
      overflow: "hidden",
      minWidth: "200px",
      borderRadius: "$2",
      zIndex
    }, (props == null ? void 0 : props.css) || {})
  }), typeof content === "string" ? /* @__PURE__ */ React.createElement(Paragraph, null, content) : typeof content === "function" ? content({ close, isOpen }) : content, /* @__PURE__ */ React.createElement(DismissButton, {
    onDismiss: close
  }))))))));
}

// src/button/SplitButton.tsx
var SplitButtonFactory = styled(Button, {
  "&&": {
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0
  }
});
var SplitButtonDropDownFactory = styled(Button, {
  borderTopLeftRadius: 0,
  borderBottomLeftRadius: 0,
  width: "$6",
  svg: {
    marginInline: "4px"
  }
});
var SplitButton = forwardRef5((_a2, forwardedRef) => {
  var _b = _a2, { children, content } = _b, props = __objRest(_b, ["children", "content"]);
  if (props.appearance === "minimal") {
    delete props.appearance;
  }
  return /* @__PURE__ */ React.createElement(Box, {
    css: { display: "flex" }
  }, /* @__PURE__ */ React.createElement(SplitButtonFactory, __spreadProps(__spreadValues({}, props), {
    ref: forwardedRef
  }), children), /* @__PURE__ */ React.createElement(Popover, {
    content
  }, /* @__PURE__ */ React.createElement(SplitButtonDropDownFactory, {
    split: true,
    appearance: props.appearance,
    color: props.color,
    size: props.size,
    icon: ChevronDownIcon
  })));
});

// src/alert/Alert.tsx
var AlertFactory = styled(Pane, {
  $$intentColor: "$colors$info",
  backgroundColor: "$background",
  border: "1px solid $gray4",
  overflow: "hidden",
  position: "relative",
  padding: "$2 $2 $2 $4",
  variants: {
    appearance: {
      minimal: {
        border: "none",
        backgroundColor: "transparent"
      },
      toast: {
        backdropFilter: "blur(10px) saturate(180%)",
        backgroundColor: "hsl($hsl_background / 0.7)",
        backfaceVisibility: "hidden",
        transform: "translate3d(0, 0, 0)",
        border: "1px solid hsl($colors$gray3 / 0.8)",
        "&::before": {
          content: '""',
          width: "$1",
          height: "calc(100% - $2)",
          position: "absolute",
          top: "$1",
          left: "$1",
          backgroundColor: "$$intentColor",
          borderRadius: "$5"
        }
      },
      card: {
        borderRadius: "$1",
        "&::before": {
          content: '""',
          width: "$1",
          height: "100%",
          position: "absolute",
          top: 0,
          left: 0,
          backgroundColor: "$$intentColor"
        }
      }
    },
    intent: {
      info: {
        $$intentColor: "$colors$info"
      },
      success: {
        $$intentColor: "$colors$success"
      },
      danger: {
        $$intentColor: "$colors$danger"
      },
      warning: {
        $$intentColor: "$colors$warning"
      }
    }
  },
  defaultVariants: {
    appearance: "card",
    intent: "info"
  }
});
var ICONS = {
  info: InformationCircleBoldIcon,
  warning: AlertTriangleBoldIcon,
  success: CheckCircleBoldIcon,
  danger: AlertCircleBoldIcon
};
function Alert(_a2) {
  var _b = _a2, { icon = "default", children, title, isRemoveable = false, onRemove } = _b, props = __objRest(_b, ["icon", "children", "title", "isRemoveable", "onRemove"]);
  const { intent = "info" } = props;
  const Icon3 = (() => {
    if (icon === "none")
      return null;
    if (icon === "default")
      return ICONS[intent];
    if (typeof icon === "function")
      return icon;
    return null;
  })();
  return /* @__PURE__ */ React.createElement(AlertFactory, __spreadValues({
    role: "alert"
  }, props), /* @__PURE__ */ React.createElement(Box, {
    css: { display: "flex", width: "100%", alignItems: children ? "flex-start" : "center" }
  }, typeof Icon3 === "function" && /* @__PURE__ */ React.createElement(Icon3, {
    css: { color: `$${intent}`, marginRight: "$2" },
    size: "$3"
  }), /* @__PURE__ */ React.createElement(Box, null, /* @__PURE__ */ React.createElement(Text, {
    css: { fontWeight: "$medium" },
    size: "body"
  }, title), children && /* @__PURE__ */ React.createElement(Box, {
    css: { display: "flex", paddingTop: "$1" }
  }, typeof children === "string" ? /* @__PURE__ */ React.createElement(Text, {
    size: "caption1",
    css: { color: "$gray2" }
  }, children) : children)), isRemoveable && /* @__PURE__ */ React.createElement(Box, {
    css: { marginLeft: "auto", paddingLeft: "$10" }
  }, /* @__PURE__ */ React.createElement(Button, {
    appearance: "minimal",
    icon: CloseIcon,
    css: { color: "$label", path: { strokeWidth: "3px" } },
    onClick: onRemove,
    size: "small"
  }))));
}

// src/amountSelector/AmountSelector.tsx
init_react_import();

// node_modules/@react-stately/radio/dist/module.js
init_react_import();

// node_modules/@react-stately/utils/dist/module.js
init_react_import();
import { useState as $11sjw$useState, useRef as $11sjw$useRef, useCallback as $11sjw$useCallback } from "react";
function $parcel$export(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $bfee1151ccb0650f$exports = {};
$parcel$export($bfee1151ccb0650f$exports, "useControlledState", () => $bfee1151ccb0650f$export$40bfa8c7b0832715);
function $bfee1151ccb0650f$export$40bfa8c7b0832715(value1, defaultValue, onChange) {
  let [stateValue, setStateValue] = $11sjw$useState(value1 || defaultValue);
  let ref = $11sjw$useRef(value1 !== void 0);
  let wasControlled = ref.current;
  let isControlled = value1 !== void 0;
  let stateRef = $11sjw$useRef(stateValue);
  if (wasControlled !== isControlled)
    console.warn(`WARN: A component changed from ${wasControlled ? "controlled" : "uncontrolled"} to ${isControlled ? "controlled" : "uncontrolled"}.`);
  ref.current = isControlled;
  let setValue = $11sjw$useCallback((value2, ...args) => {
    let onChangeCaller = (value, ...onChangeArgs) => {
      if (onChange) {
        if (!Object.is(stateRef.current, value))
          onChange(value, ...onChangeArgs);
      }
      if (!isControlled)
        stateRef.current = value;
    };
    if (typeof value2 === "function") {
      console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320");
      let updateFunction = (oldValue, ...functionArgs) => {
        let interceptedValue = value2(isControlled ? stateRef.current : oldValue, ...functionArgs);
        onChangeCaller(interceptedValue, ...args);
        if (!isControlled)
          return interceptedValue;
        return oldValue;
      };
      setStateValue(updateFunction);
    } else {
      if (!isControlled)
        setStateValue(value2);
      onChangeCaller(value2, ...args);
    }
  }, [
    isControlled,
    onChange
  ]);
  if (isControlled)
    stateRef.current = value1;
  else
    value1 = stateValue;
  return [
    value1,
    setValue
  ];
}
var $48d9f1d165180307$exports = {};
$parcel$export($48d9f1d165180307$exports, "clamp", () => $48d9f1d165180307$export$7d15b64cf5a3a4c4);
$parcel$export($48d9f1d165180307$exports, "snapValueToStep", () => $48d9f1d165180307$export$cb6e0bb50bc19463);
$parcel$export($48d9f1d165180307$exports, "toFixedNumber", () => $48d9f1d165180307$export$b6268554fba451f);
function $48d9f1d165180307$export$7d15b64cf5a3a4c4(value, min2 = -Infinity, max2 = Infinity) {
  let newValue = Math.min(Math.max(value, min2), max2);
  return newValue;
}
function $48d9f1d165180307$export$cb6e0bb50bc19463(value, min2, max2, step) {
  let remainder = (value - (isNaN(min2) ? 0 : min2)) % step;
  let snappedValue = Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder;
  if (!isNaN(min2)) {
    if (snappedValue < min2)
      snappedValue = min2;
    else if (!isNaN(max2) && snappedValue > max2)
      snappedValue = min2 + Math.floor((max2 - min2) / step) * step;
  } else if (!isNaN(max2) && snappedValue > max2)
    snappedValue = Math.floor(max2 / step) * step;
  let string = step.toString();
  let index2 = string.indexOf(".");
  let precision = index2 >= 0 ? string.length - index2 : 0;
  if (precision > 0) {
    let pow = Math.pow(10, precision);
    snappedValue = Math.round(snappedValue * pow) / pow;
  }
  return snappedValue;
}
function $48d9f1d165180307$export$b6268554fba451f(value, digits, base = 10) {
  const pow = Math.pow(base, digits);
  return Math.round(value * pow) / pow;
}

// node_modules/@react-stately/radio/dist/module.js
import { useMemo as $fQ2SF$useMemo, useState as $fQ2SF$useState } from "react";
function $parcel$export2(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $a54cdc5c1942b639$exports = {};
$parcel$export2($a54cdc5c1942b639$exports, "useRadioGroupState", () => $a54cdc5c1942b639$export$bca9d026f8e704eb);
var $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 1e10);
var $a54cdc5c1942b639$var$i = 0;
function $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {
  let name = $fQ2SF$useMemo(() => props.name || `radio-group-${$a54cdc5c1942b639$var$instance}-${++$a54cdc5c1942b639$var$i}`, [
    props.name
  ]);
  let [selectedValue, setSelected] = $bfee1151ccb0650f$export$40bfa8c7b0832715(props.value, props.defaultValue, props.onChange);
  let [lastFocusedValue, setLastFocusedValue] = $fQ2SF$useState(null);
  let setSelectedValue = (value) => {
    if (!props.isReadOnly && !props.isDisabled)
      setSelected(value);
  };
  return {
    name,
    selectedValue,
    setSelectedValue,
    lastFocusedValue,
    setLastFocusedValue,
    isDisabled: props.isDisabled || false,
    isReadOnly: props.isReadOnly || false
  };
}

// src/amountSelector/AmountSelector.tsx
import { createContext as createContext2, useContext as useContext2, useEffect as useEffect4, useMemo as useMemo2, useRef as useRef5, useState as useState3 } from "react";
import { mergeProps as mergeProps2, useFocusRing, useRadio, useRadioGroup, VisuallyHidden } from "react-aria";
import { useIntl } from "react-intl";

// src/form/Form.tsx
init_react_import();
var Form = styled("form", {});

// src/form/FieldElements.tsx
init_react_import();

// src/form/helpers/useCustomValidity.ts
init_react_import();
import { useEffect as useEffect3 } from "react";
var DEFAULT_VALIDITY_MESSAGES = {
  spelling: "Spelling is invalid",
  grammar: "Grammar is invalid",
  true: "Field is invalid"
};
function useCustomValidity(ref, { invalid, errorMessage }) {
  useEffect3(() => {
    var _a2;
    ref == null ? void 0 : ref.current.setCustomValidity(!!invalid ? (_a2 = errorMessage == null ? void 0 : errorMessage.toString()) != null ? _a2 : DEFAULT_VALIDITY_MESSAGES[String(invalid)] : "");
  }, [invalid]);
  return {
    "aria-invalid": !!invalid
  };
}

// src/form/FieldElements.tsx
var FieldWrapper = styled("div", {
  width: "100%",
  display: "flex",
  flexDirection: "column",
  gap: "8px"
});
var LabelDescriptionWrapper = styled(VStack, {
  width: "100%",
  defaultVariants: { space: "extraSmall" }
});
function FieldDescription(_a2) {
  var _b = _a2, { description } = _b, props = __objRest(_b, ["description"]);
  return description ? /* @__PURE__ */ React.createElement(Box, __spreadValues({
    css: { padding: "calc($1 / 2) 0" }
  }, props), /* @__PURE__ */ React.createElement(Text, {
    css: { color: "$gray1" },
    size: "caption2"
  }, description)) : null;
}
function FieldLabelAndDescription({
  description,
  label,
  labelProps,
  descriptionProps
}) {
  if (!label && !description)
    return null;
  return /* @__PURE__ */ React.createElement(VStack, {
    space: "extraSmall"
  }, label && /* @__PURE__ */ React.createElement(Label, __spreadValues({
    size: "regular"
  }, labelProps), label), /* @__PURE__ */ React.createElement(FieldDescription, __spreadValues({
    description
  }, descriptionProps)));
}
function FieldErrorMessage(_a2) {
  var _b = _a2, { errorMessage, invalid } = _b, props = __objRest(_b, ["errorMessage", "invalid"]);
  return errorMessage || invalid ? /* @__PURE__ */ React.createElement(HStack, __spreadValues({
    css: { color: "$danger" },
    align: "center",
    space: "extraSmall"
  }, props), /* @__PURE__ */ React.createElement(AlertCircleIcon, {
    size: "12.5px"
  }), /* @__PURE__ */ React.createElement(Text, {
    css: { capsize: { fontSize: fontPxToNum(2), lineGap: 5 } }
  }, errorMessage || DEFAULT_VALIDITY_MESSAGES[String(invalid)])) : null;
}
var FieldHelpText = styled("span", {
  color: "$gray1",
  capsize: { fontSize: fontPxToNum(2), lineGap: 5 }
});
function FieldErrorAndHelpText({
  helpText,
  helpTextProps,
  invalid,
  errorMessage,
  errorMessageProps
}) {
  if (!helpText && !invalid && !errorMessage)
    return null;
  return /* @__PURE__ */ React.createElement(VStack, {
    css: { paddingTop: "$1", width: "100%" },
    space: "small"
  }, (errorMessage || invalid) && /* @__PURE__ */ React.createElement(FieldErrorMessage, __spreadProps(__spreadValues({}, errorMessageProps), {
    errorMessage,
    invalid
  })), helpText && /* @__PURE__ */ React.createElement(FieldHelpText, __spreadValues({}, helpTextProps), helpText));
}

// src/numberinput/NumberInput.tsx
init_react_import();

// node_modules/@react-stately/numberfield/dist/module.js
init_react_import();

// node_modules/@react-stately/numberfield/node_modules/@internationalized/number/dist/module.js
init_react_import();
var $81812865b3bb9d70$var$formatterCache = /* @__PURE__ */ new Map();
var $81812865b3bb9d70$var$supportsSignDisplay = false;
try {
  $81812865b3bb9d70$var$supportsSignDisplay = new Intl.NumberFormat("de-DE", {
    signDisplay: "exceptZero"
  }).resolvedOptions().signDisplay === "exceptZero";
} catch (e2) {
}
var $81812865b3bb9d70$var$supportsUnit = false;
try {
  $81812865b3bb9d70$var$supportsUnit = new Intl.NumberFormat("de-DE", {
    style: "unit",
    unit: "degree"
  }).resolvedOptions().style === "unit";
} catch (e1) {
}
var $81812865b3bb9d70$var$UNITS = {
  degree: {
    narrow: {
      default: "\xB0",
      "ja-JP": " \u5EA6",
      "zh-TW": "\u5EA6",
      "sl-SI": " \xB0"
    }
  }
};
var $81812865b3bb9d70$export$cc77c4ff7e8673c5 = class {
  format(value) {
    let res = "";
    if (!$81812865b3bb9d70$var$supportsSignDisplay && this.options.signDisplay != null)
      res = $81812865b3bb9d70$export$711b50b3c525e0f2(this.numberFormatter, this.options.signDisplay, value);
    else
      res = this.numberFormatter.format(value);
    if (this.options.style === "unit" && !$81812865b3bb9d70$var$supportsUnit) {
      var ref;
      let { unit, unitDisplay = "short", locale } = this.resolvedOptions();
      let values = (ref = $81812865b3bb9d70$var$UNITS[unit]) === null || ref === void 0 ? void 0 : ref[unitDisplay];
      res += values[locale] || values.default;
    }
    return res;
  }
  formatToParts(value) {
    return this.numberFormatter.formatToParts(value);
  }
  resolvedOptions() {
    let options = this.numberFormatter.resolvedOptions();
    if (!$81812865b3bb9d70$var$supportsSignDisplay && this.options.signDisplay != null)
      options = __spreadProps(__spreadValues({}, options), {
        signDisplay: this.options.signDisplay
      });
    if (!$81812865b3bb9d70$var$supportsUnit && this.options.style === "unit")
      options = __spreadProps(__spreadValues({}, options), {
        style: "unit",
        unit: this.options.unit,
        unitDisplay: this.options.unitDisplay
      });
    return options;
  }
  constructor(locale, options = {}) {
    this.numberFormatter = $81812865b3bb9d70$var$getCachedNumberFormatter(locale, options);
    this.options = options;
  }
};
function $81812865b3bb9d70$var$getCachedNumberFormatter(locale, options = {}) {
  let { numberingSystem } = options;
  if (numberingSystem && locale.indexOf("-u-nu-") === -1)
    locale = `${locale}-u-nu-${numberingSystem}`;
  if (options.style === "unit" && !$81812865b3bb9d70$var$supportsUnit) {
    var ref;
    let { unit, unitDisplay = "short" } = options;
    if (!unit)
      throw new Error('unit option must be provided with style: "unit"');
    if (!((ref = $81812865b3bb9d70$var$UNITS[unit]) === null || ref === void 0 ? void 0 : ref[unitDisplay]))
      throw new Error(`Unsupported unit ${unit} with unitDisplay = ${unitDisplay}`);
    options = __spreadProps(__spreadValues({}, options), {
      style: "decimal"
    });
  }
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  if ($81812865b3bb9d70$var$formatterCache.has(cacheKey))
    return $81812865b3bb9d70$var$formatterCache.get(cacheKey);
  let numberFormatter = new Intl.NumberFormat(locale, options);
  $81812865b3bb9d70$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
function $81812865b3bb9d70$export$711b50b3c525e0f2(numberFormat, signDisplay, num) {
  if (signDisplay === "auto")
    return numberFormat.format(num);
  else if (signDisplay === "never")
    return numberFormat.format(Math.abs(num));
  else {
    let needsPositiveSign = false;
    if (signDisplay === "always")
      needsPositiveSign = num > 0 || Object.is(num, 0);
    else if (signDisplay === "exceptZero") {
      if (Object.is(num, -0) || Object.is(num, 0))
        num = Math.abs(num);
      else
        needsPositiveSign = num > 0;
    }
    if (needsPositiveSign) {
      let negative = numberFormat.format(-num);
      let noSign = numberFormat.format(num);
      let minus = negative.replace(noSign, "").replace(/\u200e|\u061C/, "");
      if ([
        ...minus
      ].length !== 1)
        console.warn("@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case");
      let positive = negative.replace(noSign, "!!!").replace(minus, "+").replace("!!!", noSign);
      return positive;
    } else
      return numberFormat.format(num);
  }
}
var $ad41ad2a9f71fc3e$var$CURRENCY_SIGN_REGEX = new RegExp("^.*\\(.*\\).*$");
var $ad41ad2a9f71fc3e$var$NUMBERING_SYSTEMS = [
  "latn",
  "arab",
  "hanidec"
];
var $ad41ad2a9f71fc3e$export$cd11ab140839f11d = class {
  parse(value) {
    return $ad41ad2a9f71fc3e$var$getNumberParserImpl(this.locale, this.options, value).parse(value);
  }
  isValidPartialNumber(value, minValue, maxValue) {
    return $ad41ad2a9f71fc3e$var$getNumberParserImpl(this.locale, this.options, value).isValidPartialNumber(value, minValue, maxValue);
  }
  getNumberingSystem(value) {
    return $ad41ad2a9f71fc3e$var$getNumberParserImpl(this.locale, this.options, value).options.numberingSystem;
  }
  constructor(locale, options = {}) {
    this.locale = locale;
    this.options = options;
  }
};
var $ad41ad2a9f71fc3e$var$numberParserCache = /* @__PURE__ */ new Map();
function $ad41ad2a9f71fc3e$var$getNumberParserImpl(locale, options, value) {
  let defaultParser = $ad41ad2a9f71fc3e$var$getCachedNumberParser(locale, options);
  if (!locale.includes("-nu-") && !defaultParser.isValidPartialNumber(value)) {
    for (let numberingSystem of $ad41ad2a9f71fc3e$var$NUMBERING_SYSTEMS)
      if (numberingSystem !== defaultParser.options.numberingSystem) {
        let parser = $ad41ad2a9f71fc3e$var$getCachedNumberParser(locale + (locale.includes("-u-") ? "-nu-" : "-u-nu-") + numberingSystem, options);
        if (parser.isValidPartialNumber(value))
          return parser;
      }
  }
  return defaultParser;
}
function $ad41ad2a9f71fc3e$var$getCachedNumberParser(locale, options) {
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  let parser = $ad41ad2a9f71fc3e$var$numberParserCache.get(cacheKey);
  if (!parser) {
    parser = new $ad41ad2a9f71fc3e$var$NumberParserImpl(locale, options);
    $ad41ad2a9f71fc3e$var$numberParserCache.set(cacheKey, parser);
  }
  return parser;
}
var $ad41ad2a9f71fc3e$var$NumberParserImpl = class {
  parse(value) {
    let fullySanitizedValue = this.sanitize(value);
    fullySanitizedValue = $ad41ad2a9f71fc3e$var$replaceAll(fullySanitizedValue, this.symbols.group, "").replace(this.symbols.decimal, ".").replace(this.symbols.minusSign, "-").replace(this.symbols.numeral, this.symbols.index);
    let newValue = fullySanitizedValue ? +fullySanitizedValue : NaN;
    if (isNaN(newValue))
      return NaN;
    if (this.options.currencySign === "accounting" && $ad41ad2a9f71fc3e$var$CURRENCY_SIGN_REGEX.test(value))
      newValue = -1 * newValue;
    if (this.options.style === "percent") {
      newValue /= 100;
      var _maximumFractionDigits;
      newValue = +newValue.toFixed(((_maximumFractionDigits = this.options.maximumFractionDigits) !== null && _maximumFractionDigits !== void 0 ? _maximumFractionDigits : 0) + 2);
    }
    return newValue;
  }
  sanitize(value) {
    value = value.replace(this.symbols.literals, "");
    value = value.replace("-", this.symbols.minusSign);
    if (this.options.numberingSystem === "arab") {
      value = value.replace(",", this.symbols.decimal);
      value = value.replace(String.fromCharCode(1548), this.symbols.decimal);
      value = $ad41ad2a9f71fc3e$var$replaceAll(value, ".", this.symbols.group);
    }
    if (this.options.locale === "fr-FR")
      value = $ad41ad2a9f71fc3e$var$replaceAll(value, ".", String.fromCharCode(8239));
    return value;
  }
  isValidPartialNumber(value, minValue = -Infinity, maxValue = Infinity) {
    value = this.sanitize(value);
    if (value.startsWith(this.symbols.minusSign) && minValue < 0)
      value = value.slice(this.symbols.minusSign.length);
    else if (this.symbols.plusSign && value.startsWith(this.symbols.plusSign) && maxValue > 0)
      value = value.slice(this.symbols.plusSign.length);
    if (value.startsWith(this.symbols.group))
      return false;
    value = $ad41ad2a9f71fc3e$var$replaceAll(value, this.symbols.group, "").replace(this.symbols.numeral, "").replace(this.symbols.decimal, "");
    return value.length === 0;
  }
  constructor(locale, options = {}) {
    this.formatter = new Intl.NumberFormat(locale, options);
    this.options = this.formatter.resolvedOptions();
    this.symbols = $ad41ad2a9f71fc3e$var$getSymbols(this.formatter, this.options, options);
  }
};
var $ad41ad2a9f71fc3e$var$nonLiteralParts = /* @__PURE__ */ new Set([
  "decimal",
  "fraction",
  "integer",
  "minusSign",
  "plusSign",
  "group"
]);
function $ad41ad2a9f71fc3e$var$getSymbols(formatter, intlOptions, originalOptions) {
  var ref, ref1, ref2, ref3;
  let allParts = formatter.formatToParts(-10000.111);
  let posAllParts = formatter.formatToParts(10000.111);
  let singularParts = formatter.formatToParts(1);
  var ref4;
  let minusSign = (ref4 = (ref = allParts.find((p) => p.type === "minusSign")) === null || ref === void 0 ? void 0 : ref.value) !== null && ref4 !== void 0 ? ref4 : "-";
  let plusSign = (ref1 = posAllParts.find((p) => p.type === "plusSign")) === null || ref1 === void 0 ? void 0 : ref1.value;
  if (!plusSign && ((originalOptions === null || originalOptions === void 0 ? void 0 : originalOptions.signDisplay) === "exceptZero" || (originalOptions === null || originalOptions === void 0 ? void 0 : originalOptions.signDisplay) === "always"))
    plusSign = "+";
  let decimal = (ref2 = allParts.find((p) => p.type === "decimal")) === null || ref2 === void 0 ? void 0 : ref2.value;
  let group = (ref3 = allParts.find((p) => p.type === "group")) === null || ref3 === void 0 ? void 0 : ref3.value;
  let pluralLiterals = allParts.filter((p) => !$ad41ad2a9f71fc3e$var$nonLiteralParts.has(p.type)).map((p) => $ad41ad2a9f71fc3e$var$escapeRegex(p.value));
  let singularLiterals = singularParts.filter((p) => !$ad41ad2a9f71fc3e$var$nonLiteralParts.has(p.type)).map((p) => $ad41ad2a9f71fc3e$var$escapeRegex(p.value));
  let sortedLiterals = [
    .../* @__PURE__ */ new Set([
      ...singularLiterals,
      ...pluralLiterals
    ])
  ].sort((a, b) => b.length - a.length);
  let literals = new RegExp(`${sortedLiterals.join("|")}|[\\p{White_Space}]`, "gu");
  let numerals = [
    ...new Intl.NumberFormat(intlOptions.locale, {
      useGrouping: false
    }).format(9876543210)
  ].reverse();
  let indexes = new Map(numerals.map((d, i) => [
    d,
    i
  ]));
  let numeral = new RegExp(`[${numerals.join("")}]`, "g");
  let index2 = (d) => String(indexes.get(d));
  return {
    minusSign,
    plusSign,
    decimal,
    group,
    literals,
    numeral,
    index: index2
  };
}
function $ad41ad2a9f71fc3e$var$replaceAll(str, find, replace) {
  if (str.replaceAll)
    return str.replaceAll(find, replace);
  return str.split(find).join(replace);
}
function $ad41ad2a9f71fc3e$var$escapeRegex(string) {
  return string.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
}

// node_modules/@react-stately/numberfield/dist/module.js
import { useState as $vhjCi$useState, useMemo as $vhjCi$useMemo, useCallback as $vhjCi$useCallback, useRef as $vhjCi$useRef } from "react";
function $parcel$export3(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $de67e98908f0c6ee$exports = {};
$parcel$export3($de67e98908f0c6ee$exports, "useNumberFieldState", () => $de67e98908f0c6ee$export$7f629e9dc1ecf37c);
function $de67e98908f0c6ee$export$7f629e9dc1ecf37c(props) {
  let { minValue, maxValue, step, formatOptions, value: value1, defaultValue, onChange, locale, isDisabled, isReadOnly } = props;
  let [numberValue, setNumberValue] = $bfee1151ccb0650f$export$40bfa8c7b0832715(value1, isNaN(defaultValue) ? NaN : defaultValue, onChange);
  let [inputValue, setInputValue] = $vhjCi$useState(() => isNaN(numberValue) ? "" : new $81812865b3bb9d70$export$cc77c4ff7e8673c5(locale, formatOptions).format(numberValue));
  let numberParser = $vhjCi$useMemo(() => new $ad41ad2a9f71fc3e$export$cd11ab140839f11d(locale, formatOptions), [
    locale,
    formatOptions
  ]);
  let numberingSystem = $vhjCi$useMemo(() => numberParser.getNumberingSystem(inputValue), [
    numberParser,
    inputValue
  ]);
  let formatter = $vhjCi$useMemo(() => new $81812865b3bb9d70$export$cc77c4ff7e8673c5(locale, __spreadProps(__spreadValues({}, formatOptions), {
    numberingSystem
  })), [
    locale,
    formatOptions,
    numberingSystem
  ]);
  let intlOptions = $vhjCi$useMemo(() => formatter.resolvedOptions(), [
    formatter
  ]);
  let format = $vhjCi$useCallback((value) => isNaN(value) ? "" : formatter.format(value), [
    formatter
  ]);
  let clampStep = !isNaN(step) ? step : 1;
  if (intlOptions.style === "percent" && isNaN(step))
    clampStep = 0.01;
  let prevValue = $vhjCi$useRef(numberValue);
  let prevLocale = $vhjCi$useRef(locale);
  let prevFormatOptions = $vhjCi$useRef(formatOptions);
  if (!Object.is(numberValue, prevValue.current) || locale !== prevLocale.current || formatOptions !== prevFormatOptions.current) {
    setInputValue(format(numberValue));
    prevValue.current = numberValue;
    prevLocale.current = locale;
    prevFormatOptions.current = formatOptions;
  }
  let parsedValue = $vhjCi$useMemo(() => numberParser.parse(inputValue), [
    numberParser,
    inputValue
  ]);
  let parsed = $vhjCi$useRef(0);
  parsed.current = parsedValue;
  let commit = () => {
    if (!inputValue.length) {
      setNumberValue(NaN);
      setInputValue(value1 === void 0 ? "" : format(numberValue));
      return;
    }
    if (isNaN(parsed.current)) {
      setInputValue(format(numberValue));
      return;
    }
    let clampedValue;
    if (isNaN(step))
      clampedValue = $48d9f1d165180307$export$7d15b64cf5a3a4c4(parsed.current, minValue, maxValue);
    else
      clampedValue = $48d9f1d165180307$export$cb6e0bb50bc19463(parsed.current, minValue, maxValue, step);
    clampedValue = numberParser.parse(format(clampedValue));
    setNumberValue(clampedValue);
    setInputValue(format(value1 === void 0 ? clampedValue : numberValue));
  };
  let safeNextStep = (operation, minMax2) => {
    let prev = parsed.current;
    if (isNaN(prev)) {
      let newValue = isNaN(minMax2) ? 0 : minMax2;
      return $48d9f1d165180307$export$cb6e0bb50bc19463(newValue, minValue, maxValue, clampStep);
    } else {
      let newValue = $48d9f1d165180307$export$cb6e0bb50bc19463(prev, minValue, maxValue, clampStep);
      if (operation === "+" && newValue > prev || operation === "-" && newValue < prev)
        return newValue;
      return $48d9f1d165180307$export$cb6e0bb50bc19463($de67e98908f0c6ee$var$handleDecimalOperation(operation, prev, clampStep), minValue, maxValue, clampStep);
    }
  };
  let increment = () => {
    let newValue = safeNextStep("+", minValue);
    if (newValue === numberValue)
      setInputValue(format(newValue));
    setNumberValue(newValue);
  };
  let decrement = () => {
    let newValue = safeNextStep("-", maxValue);
    if (newValue === numberValue)
      setInputValue(format(newValue));
    setNumberValue(newValue);
  };
  let incrementToMax = () => {
    if (maxValue != null)
      setNumberValue($48d9f1d165180307$export$cb6e0bb50bc19463(maxValue, minValue, maxValue, clampStep));
  };
  let decrementToMin = () => {
    if (minValue != null)
      setNumberValue(minValue);
  };
  let canIncrement = $vhjCi$useMemo(() => !isDisabled && !isReadOnly && (isNaN(parsedValue) || isNaN(maxValue) || $48d9f1d165180307$export$cb6e0bb50bc19463(parsedValue, minValue, maxValue, clampStep) > parsedValue || $de67e98908f0c6ee$var$handleDecimalOperation("+", parsedValue, clampStep) <= maxValue), [
    isDisabled,
    isReadOnly,
    minValue,
    maxValue,
    clampStep,
    parsedValue
  ]);
  let canDecrement = $vhjCi$useMemo(() => !isDisabled && !isReadOnly && (isNaN(parsedValue) || isNaN(minValue) || $48d9f1d165180307$export$cb6e0bb50bc19463(parsedValue, minValue, maxValue, clampStep) < parsedValue || $de67e98908f0c6ee$var$handleDecimalOperation("-", parsedValue, clampStep) >= minValue), [
    isDisabled,
    isReadOnly,
    minValue,
    maxValue,
    clampStep,
    parsedValue
  ]);
  let validate = (value) => numberParser.isValidPartialNumber(value, minValue, maxValue);
  return {
    validate,
    increment,
    incrementToMax,
    decrement,
    decrementToMin,
    canIncrement,
    canDecrement,
    minValue,
    maxValue,
    numberValue: parsedValue,
    setInputValue,
    inputValue,
    commit
  };
}
function $de67e98908f0c6ee$var$handleDecimalOperation(operator, value1, value2) {
  let result = operator === "+" ? value1 + value2 : value1 - value2;
  if (value1 % 1 !== 0 || value2 % 1 !== 0) {
    const value1Decimal = value1.toString().split(".");
    const value2Decimal = value2.toString().split(".");
    const value1DecimalLength = value1Decimal[1] && value1Decimal[1].length || 0;
    const value2DecimalLength = value2Decimal[1] && value2Decimal[1].length || 0;
    const multiplier = Math.pow(10, Math.max(value1DecimalLength, value2DecimalLength));
    value1 = Math.round(value1 * multiplier);
    value2 = Math.round(value2 * multiplier);
    result = operator === "+" ? value1 + value2 : value1 - value2;
    result /= multiplier;
  }
  return result;
}

// src/numberinput/NumberInput.tsx
import { pick } from "lodash-es";
import { forwardRef as forwardRef6, useRef as useRef4 } from "react";
import { useButton as useButton2, useLocale, useNumberField } from "react-aria";
import { mergeRefs as mergeRefs3 } from "react-laag";

// src/textinput/TextInputFactory.tsx
init_react_import();
var TextInputFactory = styled("input", {
  $$shadowColor: "$colors$gray3",
  WebkitAppearance: "none",
  MozAppearance: "none",
  border: "none",
  boxShadow: "0 0 0 1px $$shadowColor",
  borderRadius: "$1",
  color: "$label",
  backgroundColor: "$background",
  width: "100%",
  padding: "$2 $3",
  transition: "box-shadow 125ms",
  "&::placeholder": {
    color: "$placeholderText"
  },
  "&[disabled]": {
    cursor: "not-allowed"
  },
  "&:focus": {
    $$shadowColor: "$colors$primary",
    outline: "none",
    backgroundColor: "$background",
    boxShadow: `0 0 0 1px $$shadowColor, 0 0 0 1px $$shadowColor inset`
  },
  "&:disabled": {
    $$shadowColor: "$colors$gray3",
    color: "$gray2",
    backgroundColor: "$gray4"
  },
  "&:invalid": {
    $$shadowColor: "$colors$danger",
    backgroundColor: "hsl($hsl_danger / 0.15)",
    "&::placeholder": {
      color: "hsl($hsl_danger / 0.65)"
    },
    "&:focus": {
      boxShadow: `0 0 0 2px $$shadowColor`
    }
  },
  variants: {
    size: {
      small: {
        fontSize: "$2",
        padding: "$1 $2",
        borderRadius: "calc($1 / 2)",
        height: "calc($controlHeightSmall - 2px)"
      },
      regular: {
        fontSize: "$3",
        padding: "$2 $3",
        height: "calc($controlHeightRegular - 2px)"
      },
      large: {
        fontSize: "$4",
        padding: "$3 $4",
        height: "calc($controlHeightLarge - 2px)"
      }
    },
    valid: {
      true: {
        $$shadowColor: "$colors$success",
        backgroundColor: "hsl($hsl_success / 0.08)",
        "&:focus": {
          boxShadow: `0 0 0 1px $colors$success, 0 0 0 1px $colors$success inset`
        }
      }
    },
    iconBefore: {
      true: {
        paddingLeft: "$6"
      }
    },
    iconAfter: {
      true: {
        paddingRight: "$6"
      }
    }
  },
  compoundVariants: [
    {
      iconBefore: true,
      size: "small",
      css: { paddingLeft: "$5" }
    },
    {
      iconBefore: true,
      size: "regular",
      css: { paddingLeft: "$8" }
    },
    {
      iconBefore: true,
      size: "large",
      css: { paddingLeft: "$8" }
    }
  ],
  defaultVariants: {
    size: "regular"
  }
});

// src/numberinput/NumberInput.tsx
var NumberInputFactory = styled(TextInputFactory, {
  "&:focus": {
    boxShadow: `0 0 0 2px $$shadowColor`
  },
  variants: {
    inputStyle: {
      none: { textAlign: "left" },
      accounting: {
        textAlign: "right",
        paddingLeft: "$4"
      }
    },
    stepper: {
      true: {},
      false: { paddingRight: "$9" }
    },
    focused: {
      true: { boxShadow: `0 0 0 2px $$shadowColor` }
    }
  }
});
var NumberButtonsGroup = styled("div", {
  display: "flex",
  flexDirection: "column",
  position: "absolute",
  right: "0",
  top: "0",
  alignItems: "center"
});
var NumberButton = styled("button", {
  $$borderRadius: "$radii$1",
  WebkitFontSmoothing: "antialiased",
  WebkitAppearance: "none",
  textDecoration: "none",
  border: "none",
  outline: "none",
  cursor: "pointer",
  transition: "225ms",
  borderRadius: "$$borderRadius",
  fontFamily: "$sans",
  fontWeight: "$medium",
  userSelect: "none",
  display: "inline-flex",
  justifyContent: "center",
  alignItems: "center",
  transform: "scale(1)",
  alignSelf: "start",
  backgroundColor: "$gray4",
  color: "$primary",
  "&:not([disabled]):hover": {
    backgroundColor: "$gray3"
  },
  "&:active": {
    $$shadowColor: "$colors$primary",
    boxShadow: `0 0 0 3px $$shadowColor`,
    transform: "scale(0.99)"
  },
  "&:focus": {
    boxShadow: `0 0 0 3px $$shadowColor`
  },
  "&::-moz-focus-inner": {
    border: 0
  },
  "&[disabled]": {
    pointerEvents: "none",
    color: "$gray1",
    backgroundColor: "$gray5",
    backgroundImage: "none",
    boxShadow: "none",
    cursor: "not-allowed"
  },
  variants: {
    position: {
      top: {
        borderBottomLeftRadius: 0,
        borderTopLeftRadius: 0,
        borderBottomRightRadius: 0
      },
      bottom: {
        borderBottomLeftRadius: 0,
        borderTopLeftRadius: 0,
        borderTopRightRadius: 0
      }
    },
    size: {
      small: {
        $$borderRadius: "calc($radii$1 / 2)",
        height: "calc(($controlHeightSmall / 2) - 1px)",
        paddingInline: "$2"
      },
      regular: {
        height: "calc(($controlHeightRegular / 2) - 1px)",
        paddingInline: "$3"
      },
      large: {
        height: "calc(($controlHeightLarge / 2) - 1px)",
        paddingInline: "$3"
      }
    }
  },
  defaultVariants: {
    size: "regular"
  }
});
var NumberInput = forwardRef6((_a2, forwardedRef) => {
  var _b = _a2, { size, description, helpText, errorMessage, stepper = false, css: css2, inputStyle = "none" } = _b, props = __objRest(_b, ["size", "description", "helpText", "errorMessage", "stepper", "css", "inputStyle"]);
  var _a3;
  const { locale } = useLocale();
  const aliasProps = {
    isDisabled: props.disabled,
    isRequired: props.required,
    isReadOnly: props.readOnly,
    validationState: props.invalid ? "invalid" : "valid"
  };
  const state = $de67e98908f0c6ee$export$7f629e9dc1ecf37c(__spreadProps(__spreadValues(__spreadValues({}, aliasProps), props), { locale }));
  const inputRef = useRef4();
  const { decrementButtonProps, groupProps, incrementButtonProps, inputProps, labelProps, descriptionProps } = useNumberField(__spreadValues(__spreadValues({}, aliasProps), props), state, inputRef);
  const { buttonProps: incrementProps } = useButton2(incrementButtonProps, null);
  const { buttonProps: decrementProps } = useButton2(decrementButtonProps, null);
  const validityProps = useCustomValidity(inputRef, __spreadProps(__spreadValues({}, props), { errorMessage }));
  if (inputProps.value === null) {
    inputProps.value = NaN;
  }
  let value = inputProps.value;
  if (inputStyle === "accounting" && ((_a3 = props.formatOptions) == null ? void 0 : _a3.currency)) {
    const currencySymbol = new Intl.NumberFormat(locale, props.formatOptions).formatToParts(10)[0].value;
    value = value.replace(currencySymbol, "");
  }
  return /* @__PURE__ */ React.createElement(FieldWrapper, {
    css: css2
  }, (props.label || description) && /* @__PURE__ */ React.createElement(LabelDescriptionWrapper, null, /* @__PURE__ */ React.createElement(Label, __spreadValues({
    size
  }, labelProps), props.label), /* @__PURE__ */ React.createElement(FieldDescription, __spreadValues({
    description
  }, descriptionProps))), /* @__PURE__ */ React.createElement(HStack, __spreadValues({
    align: "center",
    css: { position: "relative" }
  }, groupProps), inputStyle === "accounting" && /* @__PURE__ */ React.createElement(Box, {
    css: { position: "absolute", left: "$3" }
  }, "$"), /* @__PURE__ */ React.createElement(NumberInputFactory, __spreadProps(__spreadValues(__spreadValues(__spreadValues({
    size,
    inputStyle,
    stepper
  }, validityProps), pick(props, ["position", "size", "css", "data-testid"])), inputProps), {
    name: props.name,
    value,
    placeholder: props.placeholder,
    ref: mergeRefs3(inputRef, forwardedRef)
  })), stepper && /* @__PURE__ */ React.createElement(NumberButtonsGroup, null, /* @__PURE__ */ React.createElement(NumberButton, __spreadValues({
    type: "button",
    size,
    disabled: props.disabled,
    position: "top"
  }, incrementProps), /* @__PURE__ */ React.createElement(ChevronUpIcon, {
    size: "8px"
  })), /* @__PURE__ */ React.createElement(NumberButton, __spreadValues({
    type: "button",
    size,
    disabled: props.disabled,
    position: "bottom"
  }, decrementProps), /* @__PURE__ */ React.createElement(ChevronDownIcon, {
    size: "8px"
  })))), /* @__PURE__ */ React.createElement(FieldErrorAndHelpText, {
    helpText,
    errorMessage,
    invalid: props.invalid
  }));
});
NumberInput.toString = NumberInputFactory.toString;
NumberInput.defaultProps = {
  minValue: 0,
  size: "regular"
};

// src/amountSelector/utils/calculateColumns.ts
init_react_import();
function calculateColumns(items) {
  if (items >= 4 && items % 4 === 0) {
    return 4;
  } else if (items >= 3 && items % 3 === 0) {
    return 3;
  } else if (items >= 2 && items % 2 === 0) {
    return 2;
  } else if (items > 4) {
    return 3;
  } else {
    return 1;
  }
}

// src/amountSelector/AmountSelector.tsx
var AmountContext = createContext2(null);
var AmountGrid = styled("div", {
  $$columns: "2",
  display: "grid",
  width: "100%",
  gridTemplateColumns: "repeat($$columns, auto)",
  gap: "$2"
});
var AmountChip = styled("label", {
  $$shadowColor: "$colors$gray3",
  $$borderWidth: "1px",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  border: "none",
  boxShadow: "0 0 0 $$borderWidth $$shadowColor",
  borderRadius: "$1",
  color: "$label",
  backgroundColor: "$background",
  width: "100%",
  minWidth: "50px",
  padding: "0 $2",
  cursor: "pointer",
  userSelect: "none",
  fontWeight: "$medium",
  height: "calc($controlHeightRegular - 1px)",
  span: {
    capsize: {
      fontSize: fontPxToNum(3),
      lineGap: lineHeightPxToNum(1)
    }
  },
  "&:hover": {
    backgroundColor: "$gray5"
  },
  "&:active, &:checked, &:focus": {
    $$shadowColor: "$colors$primary"
  },
  variants: {
    isFocused: {
      true: {
        color: "$primary",
        $$shadowColor: "$colors$primary",
        $$borderWidth: "2px"
      }
    },
    isSelected: {
      true: {
        color: "$primary",
        $$shadowColor: "$colors$primary",
        $$borderWidth: "2px"
      }
    }
  }
});
var CurrencyLocale = styled(Text, {
  backgroundColor: "$background",
  display: "flex",
  alignItems: "center",
  position: "absolute",
  height: "80%",
  top: "12%",
  right: "2px",
  paddingRight: "$2",
  paddingLeft: "$1",
  fontWeight: "$medium",
  userSelect: "none",
  variants: {
    disabled: {
      true: {
        backgroundColor: "$disabled"
      }
    }
  }
});
function AmountSelector(_a2) {
  var _b = _a2, {
    currency = "CAD",
    helpText,
    invalid,
    errorMessage,
    minValue,
    maxValue,
    labelProps
  } = _b, props = __objRest(_b, [
    "currency",
    "helpText",
    "invalid",
    "errorMessage",
    "minValue",
    "maxValue",
    "labelProps"
  ]);
  var _a3;
  const { options = [], label, description, otherField: OtherField = null } = props;
  const apiProps = {
    isDisabled: props.disabled,
    isRequired: props.required,
    orientation: "horizontal"
  };
  const state = $a54cdc5c1942b639$export$bca9d026f8e704eb(__spreadValues({}, props));
  const { radioGroupProps, labelProps: radioLabelProps } = useRadioGroup(__spreadValues(__spreadValues({}, props), apiProps), state);
  const [otherValue, setOtherValue] = useState3();
  state.setOtherValue = setOtherValue;
  state.otherValue = otherValue;
  state.currency = currency;
  state.optionsCount = (_a3 = options == null ? void 0 : options.length) != null ? _a3 : 0;
  useEffect4(() => {
    if (state.optionsCount === 0 && props.value) {
      state.setOtherValue(props.value);
    } else if (Object.values(options).some((option) => option.value === props.value)) {
      state.setOtherValue(void 0);
    }
  }, [state.optionsCount]);
  useEffect4(() => {
    var _a4, _b2;
    const value = Number(state.otherValue || state.selectedValue);
    if (isNaN(value)) {
      (_a4 = props == null ? void 0 : props.onChange) == null ? void 0 : _a4.call(props, void 0);
    } else {
      (_b2 = props.onChange) == null ? void 0 : _b2.call(props, value);
    }
  }, [state.selectedValue, state.otherValue]);
  useEffect4(() => {
    var _a4;
    if (!!props.otherField && props.value && !((_a4 = props.options) == null ? void 0 : _a4.find((option) => option.value === props.value))) {
      state.setOtherValue(props.value);
    }
  }, []);
  return /* @__PURE__ */ React.createElement(VStack, __spreadProps(__spreadValues({
    as: "fieldset"
  }, radioGroupProps), {
    space: "small"
  }), /* @__PURE__ */ React.createElement(FieldLabelAndDescription, {
    label,
    labelProps: mergeProps2(labelProps, radioLabelProps),
    description
  }), /* @__PURE__ */ React.createElement(AmountGrid, {
    css: { $$columns: calculateColumns(state.optionsCount) }
  }, /* @__PURE__ */ React.createElement(AmountContext.Provider, {
    value: state
  }, options == null ? void 0 : options.map((option) => /* @__PURE__ */ React.createElement(AmountOption, __spreadValues({
    key: option.value
  }, option))), typeof OtherField === "boolean" && /* @__PURE__ */ React.createElement(AmountOtherField, {
    inputProps: {
      minValue,
      maxValue,
      onBlur: props.onBlur,
      name: props.name,
      autoFocus: !!state.optionsCount
    }
  }), typeof OtherField === "function" && /* @__PURE__ */ React.createElement(OtherField, null))), /* @__PURE__ */ React.createElement(FieldErrorAndHelpText, {
    helpText,
    errorMessage,
    invalid
  }));
}
function AmountOtherInput({
  currencyCode,
  currencySymbol,
  inputProps
}) {
  const state = useContext2(AmountContext);
  return /* @__PURE__ */ React.createElement(Box, {
    css: { position: "relative", gridColumn: "-1 / 1" }
  }, /* @__PURE__ */ React.createElement(NumberInput, __spreadProps(__spreadValues({}, inputProps), {
    placeholder: `${currencySymbol} Other`,
    "data-testid": "otherselector",
    formatOptions: { style: "currency", currency: state.currency, currencyDisplay: "narrowSymbol" },
    onChange: (value) => {
      state.setOtherValue(value);
      state.setSelectedValue("");
    },
    value: state.otherValue,
    focused: !!state.otherValue || state.lastFocusedValue === "other"
  })), /* @__PURE__ */ React.createElement(CurrencyLocale, {
    size: "caption1"
  }, currencyCode));
}
function AmountOtherField({ inputProps }) {
  const state = useContext2(AmountContext);
  const currency = state.currency;
  const { formatNumberToParts } = useIntl();
  const currencyCode = useMemo2(() => {
    var _a2;
    return (_a2 = formatNumberToParts(10, { style: "currency", currency, currencyDisplay: "code" }).find((part) => part.type === "currency")) == null ? void 0 : _a2.value;
  }, [currency]);
  const currencySymbol = useMemo2(() => {
    var _a2;
    return (_a2 = formatNumberToParts(10, { style: "currency", currency, currencyDisplay: "narrowSymbol" }).find((part) => part.type === "currency")) == null ? void 0 : _a2.value;
  }, [currency]);
  const OtherFieldButton = () => /* @__PURE__ */ React.createElement(Box, {
    css: { gridColumn: "-1 / 1", userSelect: "none" },
    onClick: () => {
      state.setSelectedValue("");
      state.setLastFocusedValue("other");
    },
    "data-testid": "otherbutton"
  }, /* @__PURE__ */ React.createElement(AmountChip, null, /* @__PURE__ */ React.createElement(HStack, {
    justify: "between",
    css: { width: "100%", paddingInline: "calc($1 - 3px)" }
  }, /* @__PURE__ */ React.createElement(HStack, {
    space: "extraSmall"
  }, /* @__PURE__ */ React.createElement("span", null, currencySymbol), /* @__PURE__ */ React.createElement("span", null, "Other")), /* @__PURE__ */ React.createElement("span", null, currencyCode))));
  return state.otherValue || state.lastFocusedValue === "other" || state.optionsCount === 0 ? /* @__PURE__ */ React.createElement(AmountOtherInput, {
    currencyCode,
    currencySymbol,
    inputProps
  }) : /* @__PURE__ */ React.createElement(OtherFieldButton, null);
}
function AmountOption(props) {
  var _a2;
  const state = useContext2(AmountContext);
  const ref = useRef5(null);
  const { inputProps } = useRadio(__spreadProps(__spreadValues({}, props), { children: props.label, "aria-label": props.value.toString(), value: props.value.toString() }), state, ref);
  const { isFocusVisible, focusProps, isFocused } = useFocusRing();
  const isSelected = !state.otherValue && Number(state.selectedValue) === props.value;
  return /* @__PURE__ */ React.createElement(AmountChip, {
    isFocused: isFocused || isFocusVisible,
    isSelected
  }, /* @__PURE__ */ React.createElement(VisuallyHidden, null, /* @__PURE__ */ React.createElement("input", __spreadProps(__spreadValues(__spreadValues({}, inputProps), focusProps), {
    onClick: () => state.setOtherValue(NaN),
    ref
  }))), /* @__PURE__ */ React.createElement("span", null, (_a2 = props.label) != null ? _a2 : new Intl.NumberFormat(navigator.language, {
    style: "currency",
    currency: state.currency,
    currencyDisplay: "narrowSymbol",
    maximumFractionDigits: props.value % 1 === 0 ? 0 : void 0
  }).format(props.value)));
}

// src/avatar/Avatar.tsx
init_react_import();
import { useState as useState7 } from "react";

// src/image/Image.tsx
init_react_import();
import { forwardRef as forwardRef7, useEffect as useEffect5, useState as useState4 } from "react";
var ImageFactory = styled("img", {
  variants: {
    defaultFallback: {
      true: {
        backgroundColor: "$gray3",
        width: "100%"
      }
    }
  }
});
var Image = forwardRef7((props, ref) => {
  const [imageFailed, setImageFailed] = useState4(false);
  const [imageSource, setImageSource] = useState4(props.src);
  useEffect5(() => {
    if (imageFailed && props.fallback) {
      setImageSource(props.fallback);
    }
  }, [imageFailed]);
  return /* @__PURE__ */ React.createElement(ImageFactory, __spreadProps(__spreadValues({
    ref
  }, props), {
    src: imageSource,
    defaultFallback: imageFailed && !props.fallback,
    onError: (e2) => {
      var _a2;
      (_a2 = props.onError) == null ? void 0 : _a2.call(props, e2);
      setImageFailed(true);
    }
  }));
});
Image.displayName = "Image";
Image.defaultProps = {
  loading: "lazy",
  alt: ""
};

// src/image/ImageUpload.tsx
init_react_import();
import { useMachine } from "@xstate/react";
import { AnimatePresence as AnimatePresence3, AnimateSharedLayout, motion as motion4 } from "framer-motion";
import { clamp, noop as noop3 } from "lodash-es";
import { useEffect as useEffect7, useMemo as useMemo4, useState as useState6 } from "react";
import { useDropzone } from "react-dropzone";
import { useIntl as useIntl2 } from "react-intl";

// src/fileUpload/fileUploadMachine.ts
init_react_import();
import { assign, createMachine } from "xstate";
var fileUploadMachine = createMachine({
  id: "fileupload-component",
  initial: "idle",
  context: {
    files: [],
    hoverStatus: "IDLE" /* IDLE */
  },
  version: "1.0",
  states: {
    idle: {
      entry: ["resetMachine"],
      always: {
        target: "accepted",
        cond: { type: "hasInitialFiles" }
      },
      on: {
        HOVER: {
          target: "hovering",
          actions: assign({
            hoverStatus: (_, { status }) => status || "ACTIVE" /* ACTIVE */,
            message: (_, { message }) => message
          })
        },
        OPEN_DIALOG: {
          target: "dialogOpen"
        }
      }
    },
    dialogOpen: {
      on: {
        CANCEL_DIALOG: {
          target: "idle"
        },
        ADD_FILE: {
          target: "accepted",
          actions: assign({
            files: ({ files: contextFiles }, { files }) => [...contextFiles, ...files],
            hoverStatus: () => "IDLE" /* IDLE */,
            message: () => ""
          })
        }
      }
    },
    hovering: {
      on: {
        RESET: {
          target: "idle"
        },
        REJECT: {
          target: "rejected",
          actions: assign({
            message: (_, { message }) => message,
            hoverStatus: () => "REJECT" /* REJECT */
          })
        },
        ADD_FILE: {
          target: "accepted",
          cond: { type: "fileIsAllowed" },
          actions: assign({
            files: ({ files: contextFiles }, { files }) => [...contextFiles, ...files],
            hoverStatus: () => "IDLE" /* IDLE */,
            message: () => ""
          })
        }
      }
    },
    rejected: {
      on: {
        HOVER: {
          target: "hovering",
          actions: assign({
            hoverStatus: (_, { status }) => status || "ACTIVE" /* ACTIVE */,
            message: (_, { message }) => message
          })
        }
      },
      after: {
        5e3: { target: "idle" }
      }
    },
    accepted: {
      on: {
        REMOVE_FILE: {
          target: "idle",
          actions: assign({
            files: (_, { files }) => {
              console.log({ files });
              return files;
            }
          })
        }
      }
    }
  }
}, {
  actions: {
    resetMachine: assign({ hoverStatus: "IDLE" /* IDLE */, message: "" })
  },
  guards: {
    hasInitialFiles: (context2) => context2.files.length > 0,
    fileIsAllowed: (context2) => context2.hoverStatus === "ACCEPT" /* ACCEPT */
  }
});

// src/utils/formatBytes.ts
init_react_import();
function formatBytes(bytes, decimals = 2) {
  if (bytes === 0)
    return "0 Bytes";
  const k = 1024;
  const dm = decimals < 0 ? 0 : decimals;
  const sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];
}

// src/image/FocusEditor.tsx
init_react_import();
import { isEqual } from "lodash-es";
import { useEffect as useEffect6, useMemo as useMemo3, useState as useState5 } from "react";
import { FormattedMessage } from "react-intl";

// src/image/utils/image-focus.ts
init_react_import();
import { assign as assign2, debounce, noop as noop2 } from "lodash-es";
var CONTAINER_STYLES = {
  position: "relative",
  overflow: "hidden"
};
var ABSOLUTE_STYLES = {
  position: "absolute",
  top: "0",
  right: "0",
  bottom: "0",
  left: "0"
};
var IMAGE_STYLES = {
  display: "block",
  maxWidth: "100%",
  touchAction: "none"
};
var RETINA_STYLES = {
  position: "absolute",
  cursor: "move",
  transform: "translate(-50%, -50%)"
};
var DEFAULT_OPTIONS = {
  onChange: noop2
};
var FocusPicker = class {
  constructor(imageNode, options = {}) {
    this._enabled = false;
    this.startDragging = (e2) => {
      e2.preventDefault();
      this.isDragging = true;
      e2 instanceof MouseEvent ? this.updateCoordinates(e2.clientX, e2.clientY) : this.updateCoordinates(e2.touches[0].clientX, e2.touches[0].clientY);
    };
    this.handleMove = (e2) => {
      e2.preventDefault();
      if (e2 instanceof MouseEvent) {
        this.updateCoordinates(e2.clientX, e2.clientY);
      } else {
        const touch = e2.touches[0];
        const touchedEl = document.elementFromPoint(touch.pageX, touch.pageY);
        touchedEl !== this.retina && touchedEl !== this.img ? this.stopDragging() : this.updateCoordinates(touch.clientX, touch.clientY);
      }
    };
    this.stopDragging = () => {
      this.isDragging = false;
    };
    this.updateRetinaPositionFromFocus = () => {
      this.updateRetinaPosition(this.calculateOffsetFromFocus());
    };
    this.updateRetinaPosition = (offsets) => {
      this.retina.style.top = `${offsets.offsetY}px`;
      this.retina.style.left = `${offsets.offsetX}px`;
    };
    this.options = assign2({}, DEFAULT_OPTIONS, options);
    this.img = imageNode;
    this.container = imageNode.parentElement;
    this.img.draggable = false;
    assign2(this.img.style, IMAGE_STYLES);
    assign2(this.container.style, CONTAINER_STYLES);
    this.focus = this.getFocus();
    this.enable();
  }
  getFocus() {
    return this.options.focus ? this.options.focus : {
      x: parseFloat(this.img.getAttribute("data-focus-x")) || 0,
      y: parseFloat(this.img.getAttribute("data-focus-y")) || 0
    };
  }
  enable() {
    if (!this._enabled) {
      this.retina = document.createElement("img");
      this.retina.src = this.options.retina;
      this.retina.draggable = false;
      this.container.appendChild(this.retina);
      assign2(this.retina.style, RETINA_STYLES);
      this.startListening();
      this.setFocus(this.focus);
      this._enabled = true;
    }
  }
  disable() {
    if (this._enabled && this.retina) {
      this.stopListening();
      this.container.removeChild(this.retina);
      this._enabled = false;
    }
  }
  get enabled() {
    return this._enabled;
  }
  startListening() {
    this.container.addEventListener("mousedown", this.startDragging);
    this.container.addEventListener("mousemove", this.handleMove);
    this.container.addEventListener("mouseup", this.stopDragging);
    this.container.addEventListener("mouseleave", this.stopDragging);
    this.container.addEventListener("touchend", this.stopDragging);
    this.container.addEventListener("touchstart", this.startDragging, {
      passive: true
    });
    this.container.addEventListener("touchmove", this.handleMove, {
      passive: true
    });
    this.img.addEventListener("load", this.updateRetinaPositionFromFocus);
  }
  stopListening() {
    this.container.removeEventListener("mousedown", this.startDragging);
    this.container.removeEventListener("mousemove", this.handleMove);
    this.container.removeEventListener("mouseup", this.stopDragging);
    this.container.removeEventListener("mouseleave", this.stopDragging);
    this.container.removeEventListener("touchend", this.stopDragging);
    this.container.removeEventListener("touchstart", this.startDragging);
    this.container.removeEventListener("touchmove", this.handleMove);
    this.img.removeEventListener("load", this.updateRetinaPositionFromFocus);
  }
  setFocus(focus) {
    this.focus = focus;
    this.img.setAttribute("data-focus-x", focus.x.toString());
    this.img.setAttribute("data-focus-y", focus.y.toString());
    this.updateRetinaPositionFromFocus();
    this.options.onChange(focus);
  }
  calculateOffsetFromFocus() {
    const { width, height } = this.img.getBoundingClientRect();
    const offsetX = width * (this.focus.x / 2 + 0.5);
    const offsetY = height * (this.focus.y / -2 + 0.5);
    return { offsetX, offsetY };
  }
  updateCoordinates(clientX, clientY) {
    if (!this.isDragging)
      return;
    const { width, height, left, top } = this.img.getBoundingClientRect();
    const offsetX = clientX - left;
    const offsetY = clientY - top;
    const x = (offsetX / width - 0.5) * 2;
    const y = (offsetY / height - 0.5) * -2;
    this.setFocus({ x, y });
  }
};
var IMG_STYLES = {
  minHeight: "100%",
  minWidth: "100%"
};
var RESIZE_LISTENER_OBJECT_STYLES = {
  height: "100%",
  width: "100%",
  border: "none",
  opacity: 0,
  zIndex: -1,
  pointerEvents: "none"
};
var DEFAULT_IMAGE_OPTIONS = {
  debounceTime: 17,
  updateOnWindowResize: true,
  updateOnContainerResize: false,
  containerPosition: "relative"
};
var FocusedImage = class {
  constructor(imageNode, options = {}) {
    this.listening = false;
    this.setFocus = (focus) => {
      this.focus = focus;
      this.img.setAttribute("data-focus-x", focus.x.toString());
      this.img.setAttribute("data-focus-y", focus.y.toString());
      this.applyShift();
    };
    this.applyShift = () => {
      const { naturalWidth: imageW, naturalHeight: imageH } = this.img;
      const { width: containerW, height: containerH } = this.container.getBoundingClientRect();
      let hShift = "0";
      let vShift = "0";
      if (!(containerW > 0 && containerH > 0 && imageW > 0 && imageH > 0)) {
        return false;
      }
      const wR = imageW / containerW;
      const hR = imageH / containerH;
      this.img.style.maxHeight = null;
      this.img.style.maxWidth = null;
      if (imageW > containerW && imageH > containerH) {
        this.img.style[wR > hR ? "maxHeight" : "maxWidth"] = "100%";
      }
      if (wR > hR) {
        hShift = `${this.calcShift(hR, containerW, imageW, this.focus.x)}%`;
      } else if (wR < hR) {
        vShift = `${this.calcShift(wR, containerH, imageH, this.focus.y, true)}%`;
      }
      this.img.style.top = vShift;
      this.img.style.left = hShift;
    };
    this.options = assign2(DEFAULT_IMAGE_OPTIONS, options);
    this.img = imageNode;
    this.container = imageNode.parentElement;
    if (this.img["__focused_image_instance__"]) {
      this.img["__focused_image_instance__"].stopListening();
      this.img.removeEventListener("load", this.applyShift);
    }
    this.img["__focused_image_instance__"] = this;
    this.img.addEventListener("load", this.applyShift);
    assign2(this.container.style, CONTAINER_STYLES);
    this.container.style.position = this.options.containerPosition;
    assign2(this.img.style, IMG_STYLES, ABSOLUTE_STYLES);
    this.debounceApplyShift = debounce(this.applyShift, this.options.debounceTime);
    this.focus = this.options.focus ? this.options.focus : {
      x: parseFloat(this.img.getAttribute("data-focus-x")) || 0,
      y: parseFloat(this.img.getAttribute("data-focus-y")) || 0
    };
    this.startListening();
    this.setFocus(this.focus);
  }
  startListening() {
    if (this.listening) {
      return;
    }
    this.listening = true;
    if (this.options.updateOnWindowResize) {
      window.addEventListener("resize", this.debounceApplyShift);
    }
    if (this.options.updateOnContainerResize) {
      const object = document.createElement("object");
      assign2(object.style, RESIZE_LISTENER_OBJECT_STYLES, ABSOLUTE_STYLES);
      object.addEventListener("load", (_) => object.contentDocument.defaultView.addEventListener("resize", () => this.debounceApplyShift()));
      object.type = "text/html";
      object.setAttribute("aria-hidden", "true");
      object.tabIndex = -1;
      this.container.appendChild(object);
      object.data = "about:blank";
      this.resizeListenerObject = object;
    }
  }
  stopListening() {
    if (!this.listening) {
      return;
    }
    this.listening = false;
    window.removeEventListener("resize", this.debounceApplyShift);
    if (this.resizeListenerObject && this.resizeListenerObject.contentDocument) {
      this.resizeListenerObject.contentDocument.defaultView.removeEventListener("resize", this.debounceApplyShift);
      this.container.removeChild(this.resizeListenerObject);
      this.resizeListenerObject = null;
    }
  }
  calcShift(conToImageRatio, containerSize, imageSize, focusSize, toMinus) {
    const containerCenter = Math.floor(containerSize / 2);
    const focusFactor = (focusSize + 1) / 2;
    const scaledImage = Math.floor(imageSize / conToImageRatio);
    let focus = Math.floor(focusFactor * scaledImage);
    if (toMinus)
      focus = scaledImage - focus;
    let focusOffset = focus - containerCenter;
    const remainder = scaledImage - focus;
    const containerRemainder = containerSize - containerCenter;
    if (remainder < containerRemainder)
      focusOffset -= containerRemainder - remainder;
    if (focusOffset < 0)
      focusOffset = 0;
    return focusOffset * -100 / containerSize;
  }
};

// src/image/FocusEditor.tsx
function convertFocusCoordinatesToPosition2D(focusCoordinates) {
  const position2D = { x: 0.5, y: 0.5 };
  position2D.x = Number(((focusCoordinates.x + 1) / 2).toFixed(2));
  position2D.y = Number(((focusCoordinates.y * -1 + 1) / 2).toFixed(2));
  return position2D;
}
function useFocusPicker({
  src,
  focusPosition,
  onChange = () => null
}) {
  const [imageRef, setImageRef] = useState5(null);
  const picker = useMemo3(() => {
    if (imageRef) {
      return new FocusPicker(imageRef, {
        focus: focusPosition,
        onChange
      });
    }
    return void 0;
  }, [imageRef]);
  useEffect6(() => {
    if (picker) {
      picker.disable();
      picker.enable();
    }
  }, [src]);
  useEffect6(() => {
    if (picker && !isEqual(picker.focus, focusPosition)) {
      picker.setFocus(focusPosition);
    }
  }, [focusPosition]);
  return [setImageRef, picker];
}
function getSrcFromFileObject(file) {
  try {
    if (file.preview)
      return file.preview;
    return URL.createObjectURL(file);
  } catch (error) {
    if (false)
      console.error(error);
    return "";
  }
}
function FocusEditor({ file, focusPosition, onChange }) {
  const [src, setSrc] = useState5(getSrcFromFileObject(file));
  useEffect6(() => {
    if (file) {
      setSrc(getSrcFromFileObject(file));
    }
  }, [file]);
  const [setImageRef, picker] = useFocusPicker({ src, focusPosition, onChange });
  useEffect6(() => {
    return () => {
      if (picker) {
        picker.disable();
      }
    };
  }, [picker]);
  return /* @__PURE__ */ React.createElement(Box, {
    css: { width: "100%" }
  }, /* @__PURE__ */ React.createElement(VStack, null, /* @__PURE__ */ React.createElement(Heading, null, "Set Focal Point"), /* @__PURE__ */ React.createElement(Paragraph, null, /* @__PURE__ */ React.createElement(FormattedMessage, {
    id: "focuseditor.subheading"
  })), /* @__PURE__ */ React.createElement(HStack, {
    align: "center",
    justify: "center",
    space: "extraLarge"
  }, /* @__PURE__ */ React.createElement(Box, null, /* @__PURE__ */ React.createElement(Box, {
    css: { padding: "$1 0 $3" }
  }, /* @__PURE__ */ React.createElement(Heading, {
    size: "subHeadline"
  }, "Original")), /* @__PURE__ */ React.createElement(Box, {
    css: { maxWidth: "300px" }
  }, /* @__PURE__ */ React.createElement(Image, {
    ref: setImageRef,
    src,
    css: { borderRadius: "$2", boxShadow: "$2" }
  }))), /* @__PURE__ */ React.createElement(Box, null, /* @__PURE__ */ React.createElement(VStack, null, /* @__PURE__ */ React.createElement(Heading, {
    size: "subHeadline"
  }, "Preview"), /* @__PURE__ */ React.createElement(Box, {
    css: { backgroundColor: "hsl(0 0% 0% / 0.5)", padding: "$5", borderRadius: "$4" }
  }, /* @__PURE__ */ React.createElement(HStack, null, [
    { width: 200, height: 300 },
    { width: 200, height: 200 },
    { width: 300, height: 200 }
  ].map((dimensions) => /* @__PURE__ */ React.createElement(ImageFocusPreview, {
    key: JSON.stringify(dimensions),
    dimensions,
    focusPosition,
    src
  })))))))));
}
function ImageFocusPreview({ src, dimensions, focusPosition }) {
  const [imageRef, setImageRef] = useState5(null);
  useMemo3(() => {
    if (imageRef) {
      return new FocusedImage(imageRef, {
        updateOnContainerResize: true,
        focus: focusPosition,
        debounceTime: 17,
        updateOnWindowResize: true
      });
    }
    return void 0;
  }, [focusPosition, imageRef]);
  return /* @__PURE__ */ React.createElement(Box, {
    css: __spreadProps(__spreadValues({}, dimensions), { borderRadius: "$2", boxShadow: "$2" })
  }, /* @__PURE__ */ React.createElement(Box, {
    as: "img",
    ref: setImageRef,
    src
  }));
}

// src/image/ImageUploadRoot.tsx
init_react_import();
var ImageUploadRoot = styled("div", {
  border: "1.5px dashed $gray2",
  background: "$gray6",
  padding: "$6",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  borderRadius: "$1",
  transition: "$normal",
  userSelect: "none",
  cursor: "pointer",
  height: "275px",
  position: "relative",
  overflow: "hidden",
  containerType: "inline-size",
  "&[disabled]": {
    cursor: "not-allowed",
    color: "$gray2"
  },
  ".preview": {
    width: "calc(100% - 2px)",
    height: "calc(100% - 2px)",
    objectFit: "cover",
    borderRadius: "$2"
  },
  variants: {
    hasFiles: {
      true: {
        borderRadius: "10px",
        borderStyle: "solid",
        borderColor: "$gray4"
      }
    },
    dragState: {
      ACTIVE: {
        borderColor: "$gray1",
        backgroundColor: "$gray5",
        ".preview": { opacity: 0.5 }
      },
      ACCEPT: {
        borderColor: "$gray1",
        backgroundColor: "$gray5"
      },
      REJECT: {
        color: "$danger",
        borderColor: "$danger"
      }
    }
  }
});

// src/image/MetadataEditor.tsx
init_react_import();

// src/textinput/index.ts
init_react_import();

// src/textinput/TextInput.tsx
init_react_import();

// node_modules/@react-aria/textfield/dist/module.js
init_react_import();

// node_modules/@react-aria/utils/dist/module.js
init_react_import();
import $12uGp$react, { useRef as $12uGp$useRef, useState as $12uGp$useState, useEffect as $12uGp$useEffect, useCallback as $12uGp$useCallback } from "react";

// node_modules/@react-aria/ssr/dist/module.js
init_react_import();
import $cgWTI$react, { useContext as $cgWTI$useContext, useMemo as $cgWTI$useMemo, useState as $cgWTI$useState, useLayoutEffect as $cgWTI$useLayoutEffect } from "react";
function $parcel$export4(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $9d939cbc98267846$exports = {};
$parcel$export4($9d939cbc98267846$exports, "SSRProvider", () => $9d939cbc98267846$export$9f8ac96af4b1b2ae);
$parcel$export4($9d939cbc98267846$exports, "useSSRSafeId", () => $9d939cbc98267846$export$619500959fc48b26);
$parcel$export4($9d939cbc98267846$exports, "useIsSSR", () => $9d939cbc98267846$export$535bd6ca7f90a273);
var $9d939cbc98267846$var$defaultContext = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0
};
var $9d939cbc98267846$var$SSRContext = /* @__PURE__ */ $cgWTI$react.createContext($9d939cbc98267846$var$defaultContext);
function $9d939cbc98267846$export$9f8ac96af4b1b2ae(props) {
  let cur = $cgWTI$useContext($9d939cbc98267846$var$SSRContext);
  let value = $cgWTI$useMemo(() => ({
    prefix: cur === $9d939cbc98267846$var$defaultContext ? "" : `${cur.prefix}-${++cur.current}`,
    current: 0
  }), [
    cur
  ]);
  return /* @__PURE__ */ $cgWTI$react.createElement($9d939cbc98267846$var$SSRContext.Provider, {
    value
  }, props.children);
}
var $9d939cbc98267846$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
function $9d939cbc98267846$export$619500959fc48b26(defaultId) {
  let ctx = $cgWTI$useContext($9d939cbc98267846$var$SSRContext);
  if (ctx === $9d939cbc98267846$var$defaultContext && !$9d939cbc98267846$var$canUseDOM)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  return $cgWTI$useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [
    defaultId
  ]);
}
function $9d939cbc98267846$export$535bd6ca7f90a273() {
  let cur = $cgWTI$useContext($9d939cbc98267846$var$SSRContext);
  let isInSSRContext = cur !== $9d939cbc98267846$var$defaultContext;
  let [isSSR, setIsSSR] = $cgWTI$useState(isInSSRContext);
  if (typeof window !== "undefined" && isInSSRContext)
    $cgWTI$useLayoutEffect(() => {
      setIsSSR(false);
    }, []);
  return isSSR;
}

// node_modules/clsx/dist/clsx.m.js
init_react_import();
function toVal(mix) {
  var k, y, str = "";
  if (typeof mix === "string" || typeof mix === "number") {
    str += mix;
  } else if (typeof mix === "object") {
    if (Array.isArray(mix)) {
      for (k = 0; k < mix.length; k++) {
        if (mix[k]) {
          if (y = toVal(mix[k])) {
            str && (str += " ");
            str += y;
          }
        }
      }
    } else {
      for (k in mix) {
        if (mix[k]) {
          str && (str += " ");
          str += k;
        }
      }
    }
  }
  return str;
}
function clsx_m_default() {
  var i = 0, tmp, x, str = "";
  while (i < arguments.length) {
    if (tmp = arguments[i++]) {
      if (x = toVal(tmp)) {
        str && (str += " ");
        str += x;
      }
    }
  }
  return str;
}

// node_modules/@react-aria/utils/dist/module.js
function $parcel$export5(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $bdb11010cef70236$exports = {};
$parcel$export5($bdb11010cef70236$exports, "useId", () => $bdb11010cef70236$export$f680877a34711e37);
$parcel$export5($bdb11010cef70236$exports, "mergeIds", () => $bdb11010cef70236$export$cd8c9cb68f842629);
$parcel$export5($bdb11010cef70236$exports, "useSlotId", () => $bdb11010cef70236$export$b4cc09c592e8fdb8);
var $f0a04ccd8dbdd83b$exports = {};
$parcel$export5($f0a04ccd8dbdd83b$exports, "useLayoutEffect", () => $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c);
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c = typeof window !== "undefined" ? $12uGp$react.useLayoutEffect : () => {
};
var $bdb11010cef70236$var$idsUpdaterMap = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e37(defaultId) {
  let isRendering = $12uGp$useRef(true);
  isRendering.current = true;
  let [value, setValue] = $12uGp$useState(defaultId);
  let nextId = $12uGp$useRef(null);
  let res = $9d939cbc98267846$export$619500959fc48b26(value);
  let updateValue = (val) => {
    if (!isRendering.current)
      setValue(val);
    else
      nextId.current = val;
  };
  $bdb11010cef70236$var$idsUpdaterMap.set(res, updateValue);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    isRendering.current = false;
  }, [
    updateValue
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let r = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap.delete(r);
    };
  }, [
    res
  ]);
  $12uGp$useEffect(() => {
    let newId = nextId.current;
    if (newId) {
      setValue(newId);
      nextId.current = null;
    }
  }, [
    setValue,
    updateValue
  ]);
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f842629(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $bdb11010cef70236$export$b4cc09c592e8fdb8(depArray = []) {
  let id = $bdb11010cef70236$export$f680877a34711e37();
  let [resolvedId, setResolvedId] = $1dbecbe27a04f9af$export$14d238f342723f25(id);
  let updateId = $12uGp$useCallback(() => {
    setResolvedId(function* () {
      yield id;
      yield document.getElementById(id) ? id : null;
    });
  }, [
    id,
    setResolvedId
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(updateId, [
    id,
    updateId,
    ...depArray
  ]);
  return resolvedId;
}
var $ff5963eb1fccf552$exports = {};
$parcel$export5($ff5963eb1fccf552$exports, "chain", () => $ff5963eb1fccf552$export$e08e3b67e392101e);
function $ff5963eb1fccf552$export$e08e3b67e392101e(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
var $3ef42575df84b30b$exports = {};
$parcel$export5($3ef42575df84b30b$exports, "mergeProps", () => $3ef42575df84b30b$export$9d1611c77c2fe928);
function $3ef42575df84b30b$export$9d1611c77c2fe928(...args) {
  let result = __spreadValues({}, args[0]);
  for (let i = 1; i < args.length; i++) {
    let props = args[i];
    for (let key in props) {
      let a = result[key];
      let b = props[key];
      if (typeof a === "function" && typeof b === "function" && key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= 65 && key.charCodeAt(2) <= 90)
        result[key] = $ff5963eb1fccf552$export$e08e3b67e392101e(a, b);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a === "string" && typeof b === "string")
        result[key] = clsx_m_default(a, b);
      else if (key === "id" && a && b)
        result.id = $bdb11010cef70236$export$cd8c9cb68f842629(a, b);
      else
        result[key] = b !== void 0 ? b : a;
    }
  }
  return result;
}
var $65484d02dcb7eb3e$exports = {};
$parcel$export5($65484d02dcb7eb3e$exports, "filterDOMProps", () => $65484d02dcb7eb3e$export$457c3d6518dd4c6f);
var $65484d02dcb7eb3e$var$DOMPropNames = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$propRe = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
var $7215afc6de606d6b$exports = {};
$parcel$export5($7215afc6de606d6b$exports, "focusWithoutScrolling", () => $7215afc6de606d6b$export$de79e2c695e052f3);
function $7215afc6de606d6b$export$de79e2c695e052f3(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached = null;
function $7215afc6de606d6b$var$supportsPreventScroll() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached = true;
          return true;
        }
      });
    } catch (e2) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached;
}
function $7215afc6de606d6b$var$getScrollableElements(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $ab71dadb03a6fb2e$exports = {};
$parcel$export5($ab71dadb03a6fb2e$exports, "getOffset", () => $ab71dadb03a6fb2e$export$622cea445a1c5b7d);
function $ab71dadb03a6fb2e$export$622cea445a1c5b7d(element, reverse, orientation = "horizontal") {
  let rect = element.getBoundingClientRect();
  if (reverse)
    return orientation === "horizontal" ? rect.right : rect.bottom;
  return orientation === "horizontal" ? rect.left : rect.top;
}
var $103b0e103f1b5952$exports = {};
$parcel$export5($103b0e103f1b5952$exports, "clamp", () => $48d9f1d165180307$export$7d15b64cf5a3a4c4);
$parcel$export5($103b0e103f1b5952$exports, "snapValueToStep", () => $48d9f1d165180307$export$cb6e0bb50bc19463);
var $bbed8b41f857bcc0$exports = {};
$parcel$export5($bbed8b41f857bcc0$exports, "runAfterTransition", () => $bbed8b41f857bcc0$export$24490316f764c430);
var $bbed8b41f857bcc0$var$transitionsByElement = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e2) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement.get(e2.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement.set(e2.target, transitions);
      e2.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e2.propertyName);
  };
  let onTransitionEnd = (e2) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement.get(e2.target);
    if (!properties)
      return;
    properties.delete(e2.propertyName);
    if (properties.size === 0) {
      e2.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement.delete(e2.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents);
}
function $bbed8b41f857bcc0$export$24490316f764c430(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks.add(fn);
  });
}
var $9cc09df9fd7676be$exports = {};
$parcel$export5($9cc09df9fd7676be$exports, "useDrag1D", () => $9cc09df9fd7676be$export$7bbed75feba39706);
var $9cc09df9fd7676be$var$draggingElements = [];
function $9cc09df9fd7676be$export$7bbed75feba39706(props) {
  console.warn("useDrag1D is deprecated, please use `useMove` instead https://react-spectrum.adobe.com/react-aria/useMove.html");
  let { containerRef, reverse, orientation, onHover, onDrag, onPositionChange, onIncrement, onDecrement, onIncrementToMax, onDecrementToMin, onCollapseToggle } = props;
  let getPosition = (e2) => orientation === "horizontal" ? e2.clientX : e2.clientY;
  let getNextOffset = (e2) => {
    let containerOffset = $ab71dadb03a6fb2e$export$622cea445a1c5b7d(containerRef.current, reverse, orientation);
    let mouseOffset = getPosition(e2);
    let nextOffset = reverse ? containerOffset - mouseOffset : mouseOffset - containerOffset;
    return nextOffset;
  };
  let dragging = $12uGp$useRef(false);
  let prevPosition = $12uGp$useRef(0);
  let handlers = $12uGp$useRef({
    onPositionChange,
    onDrag
  });
  handlers.current.onDrag = onDrag;
  handlers.current.onPositionChange = onPositionChange;
  let onMouseDragged = (e2) => {
    e2.preventDefault();
    let nextOffset = getNextOffset(e2);
    if (!dragging.current) {
      dragging.current = true;
      if (handlers.current.onDrag)
        handlers.current.onDrag(true);
      if (handlers.current.onPositionChange)
        handlers.current.onPositionChange(nextOffset);
    }
    if (prevPosition.current === nextOffset)
      return;
    prevPosition.current = nextOffset;
    if (onPositionChange)
      onPositionChange(nextOffset);
  };
  let onMouseUp = (e2) => {
    const target = e2.target;
    dragging.current = false;
    let nextOffset = getNextOffset(e2);
    if (handlers.current.onDrag)
      handlers.current.onDrag(false);
    if (handlers.current.onPositionChange)
      handlers.current.onPositionChange(nextOffset);
    $9cc09df9fd7676be$var$draggingElements.splice($9cc09df9fd7676be$var$draggingElements.indexOf(target), 1);
    window.removeEventListener("mouseup", onMouseUp, false);
    window.removeEventListener("mousemove", onMouseDragged, false);
  };
  let onMouseDown = (e2) => {
    const target = e2.currentTarget;
    if ($9cc09df9fd7676be$var$draggingElements.some((elt) => target.contains(elt)))
      return;
    $9cc09df9fd7676be$var$draggingElements.push(target);
    window.addEventListener("mousemove", onMouseDragged, false);
    window.addEventListener("mouseup", onMouseUp, false);
  };
  let onMouseEnter = () => {
    if (onHover)
      onHover(true);
  };
  let onMouseOut = () => {
    if (onHover)
      onHover(false);
  };
  let onKeyDown = (e2) => {
    switch (e2.key) {
      case "Left":
      case "ArrowLeft":
        if (orientation === "horizontal") {
          e2.preventDefault();
          if (onDecrement && !reverse)
            onDecrement();
          else if (onIncrement && reverse)
            onIncrement();
        }
        break;
      case "Up":
      case "ArrowUp":
        if (orientation === "vertical") {
          e2.preventDefault();
          if (onDecrement && !reverse)
            onDecrement();
          else if (onIncrement && reverse)
            onIncrement();
        }
        break;
      case "Right":
      case "ArrowRight":
        if (orientation === "horizontal") {
          e2.preventDefault();
          if (onIncrement && !reverse)
            onIncrement();
          else if (onDecrement && reverse)
            onDecrement();
        }
        break;
      case "Down":
      case "ArrowDown":
        if (orientation === "vertical") {
          e2.preventDefault();
          if (onIncrement && !reverse)
            onIncrement();
          else if (onDecrement && reverse)
            onDecrement();
        }
        break;
      case "Home":
        e2.preventDefault();
        if (onDecrementToMin)
          onDecrementToMin();
        break;
      case "End":
        e2.preventDefault();
        if (onIncrementToMax)
          onIncrementToMax();
        break;
      case "Enter":
        e2.preventDefault();
        if (onCollapseToggle)
          onCollapseToggle();
        break;
    }
  };
  return {
    onMouseDown,
    onMouseEnter,
    onMouseOut,
    onKeyDown
  };
}
var $03deb23ff14920c4$exports = {};
$parcel$export5($03deb23ff14920c4$exports, "useGlobalListeners", () => $03deb23ff14920c4$export$4eaf04e54aa8eed6);
function $03deb23ff14920c4$export$4eaf04e54aa8eed6() {
  let globalListeners = $12uGp$useRef(/* @__PURE__ */ new Map());
  let addGlobalListener = $12uGp$useCallback((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = $12uGp$useCallback((eventTarget, type, listener, options) => {
    var ref;
    let fn = ((ref = globalListeners.current.get(listener)) === null || ref === void 0 ? void 0 : ref.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = $12uGp$useCallback(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  $12uGp$useEffect(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
var $313b98861ee5dd6c$exports = {};
$parcel$export5($313b98861ee5dd6c$exports, "useLabels", () => $313b98861ee5dd6c$export$d6875122194c7b44);
function $313b98861ee5dd6c$export$d6875122194c7b44(props, defaultLabel) {
  let { id, "aria-label": label, "aria-labelledby": labelledBy } = props;
  id = $bdb11010cef70236$export$f680877a34711e37(id);
  if (labelledBy && label) {
    let ids = /* @__PURE__ */ new Set([
      ...labelledBy.trim().split(/\s+/),
      id
    ]);
    labelledBy = [
      ...ids
    ].join(" ");
  } else if (labelledBy)
    labelledBy = labelledBy.trim().split(/\s+/).join(" ");
  if (!label && !labelledBy && defaultLabel)
    label = defaultLabel;
  return {
    id,
    "aria-label": label,
    "aria-labelledby": labelledBy
  };
}
var $df56164dff5785e2$exports = {};
$parcel$export5($df56164dff5785e2$exports, "useObjectRef", () => $df56164dff5785e2$export$4338b53315abf666);
function $df56164dff5785e2$export$4338b53315abf666(forwardedRef) {
  const objRef = $12uGp$useRef();
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    if (!forwardedRef)
      return;
    if (typeof forwardedRef === "function")
      forwardedRef(objRef.current);
    else
      forwardedRef.current = objRef.current;
  }, [
    forwardedRef
  ]);
  return objRef;
}
var $4f58c5f72bcf79f7$exports = {};
$parcel$export5($4f58c5f72bcf79f7$exports, "useUpdateEffect", () => $4f58c5f72bcf79f7$export$496315a1608d9602);
function $4f58c5f72bcf79f7$export$496315a1608d9602(effect, dependencies) {
  const isInitialMount = $12uGp$useRef(true);
  $12uGp$useEffect(() => {
    if (isInitialMount.current)
      isInitialMount.current = false;
    else
      effect();
  }, dependencies);
}
var $9daab02d461809db$exports = {};
$parcel$export5($9daab02d461809db$exports, "useResizeObserver", () => $9daab02d461809db$export$683480f191c0e3ea);
function $9daab02d461809db$var$hasResizeObserver() {
  return typeof window.ResizeObserver !== "undefined";
}
function $9daab02d461809db$export$683480f191c0e3ea(options) {
  const { ref, onResize } = options;
  $12uGp$useEffect(() => {
    let element = ref === null || ref === void 0 ? void 0 : ref.current;
    if (!element)
      return;
    if (!$9daab02d461809db$var$hasResizeObserver()) {
      window.addEventListener("resize", onResize, false);
      return () => {
        window.removeEventListener("resize", onResize, false);
      };
    } else {
      const resizeObserverInstance = new window.ResizeObserver((entries) => {
        if (!entries.length)
          return;
        onResize();
      });
      resizeObserverInstance.observe(element);
      return () => {
        if (element)
          resizeObserverInstance.unobserve(element);
      };
    }
  }, [
    onResize,
    ref
  ]);
}
var $e7801be82b4b2a53$exports = {};
$parcel$export5($e7801be82b4b2a53$exports, "useSyncRef", () => $e7801be82b4b2a53$export$4debdb1a3f0fa79e);
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context2, ref) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    if (context2 && context2.ref && ref) {
      context2.ref.current = ref.current;
      return () => {
        context2.ref.current = null;
      };
    }
  }, [
    context2,
    ref
  ]);
}
var $62d8ded9296f3872$exports = {};
$parcel$export5($62d8ded9296f3872$exports, "getScrollParent", () => $62d8ded9296f3872$export$cfa2225e87938781);
function $62d8ded9296f3872$export$cfa2225e87938781(node) {
  while (node && !$62d8ded9296f3872$var$isScrollable(node))
    node = node.parentElement;
  return node || document.scrollingElement || document.documentElement;
}
function $62d8ded9296f3872$var$isScrollable(node) {
  let style = window.getComputedStyle(node);
  return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);
}
var $5df64b3807dc15ee$exports = {};
$parcel$export5($5df64b3807dc15ee$exports, "useViewportSize", () => $5df64b3807dc15ee$export$d699905dd57c73ca);
var $5df64b3807dc15ee$var$visualViewport = typeof window !== "undefined" && window.visualViewport;
function $5df64b3807dc15ee$export$d699905dd57c73ca() {
  let [size1, setSize] = $12uGp$useState(() => $5df64b3807dc15ee$var$getViewportSize());
  $12uGp$useEffect(() => {
    let onResize = () => {
      setSize((size) => {
        let newSize = $5df64b3807dc15ee$var$getViewportSize();
        if (newSize.width === size.width && newSize.height === size.height)
          return size;
        return newSize;
      });
    };
    if (!$5df64b3807dc15ee$var$visualViewport)
      window.addEventListener("resize", onResize);
    else
      $5df64b3807dc15ee$var$visualViewport.addEventListener("resize", onResize);
    return () => {
      if (!$5df64b3807dc15ee$var$visualViewport)
        window.removeEventListener("resize", onResize);
      else
        $5df64b3807dc15ee$var$visualViewport.removeEventListener("resize", onResize);
    };
  }, []);
  return size1;
}
function $5df64b3807dc15ee$var$getViewportSize() {
  return {
    width: ($5df64b3807dc15ee$var$visualViewport === null || $5df64b3807dc15ee$var$visualViewport === void 0 ? void 0 : $5df64b3807dc15ee$var$visualViewport.width) || window.innerWidth,
    height: ($5df64b3807dc15ee$var$visualViewport === null || $5df64b3807dc15ee$var$visualViewport === void 0 ? void 0 : $5df64b3807dc15ee$var$visualViewport.height) || window.innerHeight
  };
}
var $ef06256079686ba0$exports = {};
$parcel$export5($ef06256079686ba0$exports, "useDescription", () => $ef06256079686ba0$export$f8aeda7b10753fa1);
var $ef06256079686ba0$var$descriptionId = 0;
var $ef06256079686ba0$var$descriptionNodes = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa1(description) {
  let [id1, setId] = $12uGp$useState(null);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    if (!description)
      return;
    let desc = $ef06256079686ba0$var$descriptionNodes.get(description);
    if (!desc) {
      let id = `react-aria-description-${$ef06256079686ba0$var$descriptionId++}`;
      setId(id);
      let node = document.createElement("div");
      node.id = id;
      node.style.display = "none";
      node.textContent = description;
      document.body.appendChild(node);
      desc = {
        refCount: 0,
        element: node
      };
      $ef06256079686ba0$var$descriptionNodes.set(description, desc);
    } else
      setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (--desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id1 : void 0
  };
}
var $c87311424ea30a05$exports = {};
$parcel$export5($c87311424ea30a05$exports, "isMac", () => $c87311424ea30a05$export$9ac100e40613ea10);
$parcel$export5($c87311424ea30a05$exports, "isIPhone", () => $c87311424ea30a05$export$186c6964ca17d99);
$parcel$export5($c87311424ea30a05$exports, "isIPad", () => $c87311424ea30a05$export$7bef049ce92e4224);
$parcel$export5($c87311424ea30a05$exports, "isIOS", () => $c87311424ea30a05$export$fedb369cb70207f1);
$parcel$export5($c87311424ea30a05$exports, "isAppleDevice", () => $c87311424ea30a05$export$e1865c3bedcd822b);
$parcel$export5($c87311424ea30a05$exports, "isWebKit", () => $c87311424ea30a05$export$78551043582a6a98);
$parcel$export5($c87311424ea30a05$exports, "isChrome", () => $c87311424ea30a05$export$6446a186d09e379e);
$parcel$export5($c87311424ea30a05$exports, "isAndroid", () => $c87311424ea30a05$export$a11b0059900ceec8);
function $c87311424ea30a05$var$testUserAgent(re) {
  var ref;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((ref = window.navigator["userAgentData"]) === null || ref === void 0 ? void 0 : ref.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform(re) {
  return typeof window !== "undefined" && window.navigator != null ? re.test((window.navigator["userAgentData"] || window.navigator).platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10() {
  return $c87311424ea30a05$var$testPlatform(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d99() {
  return $c87311424ea30a05$var$testPlatform(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e4224() {
  return $c87311424ea30a05$var$testPlatform(/^iPad/i) || $c87311424ea30a05$export$9ac100e40613ea10() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f1() {
  return $c87311424ea30a05$export$186c6964ca17d99() || $c87311424ea30a05$export$7bef049ce92e4224();
}
function $c87311424ea30a05$export$e1865c3bedcd822b() {
  return $c87311424ea30a05$export$9ac100e40613ea10() || $c87311424ea30a05$export$fedb369cb70207f1();
}
function $c87311424ea30a05$export$78551043582a6a98() {
  return $c87311424ea30a05$var$testUserAgent(/AppleWebKit/i) && !$c87311424ea30a05$export$6446a186d09e379e();
}
function $c87311424ea30a05$export$6446a186d09e379e() {
  return $c87311424ea30a05$var$testUserAgent(/Chrome/i);
}
function $c87311424ea30a05$export$a11b0059900ceec8() {
  return $c87311424ea30a05$var$testUserAgent(/Android/i);
}
var $e9faafb641e167db$exports = {};
$parcel$export5($e9faafb641e167db$exports, "useEvent", () => $e9faafb641e167db$export$90fc3a17d93f704c);
function $e9faafb641e167db$export$90fc3a17d93f704c(ref, event, handler1, options) {
  let handlerRef = $12uGp$useRef(handler1);
  handlerRef.current = handler1;
  let isDisabled = handler1 == null;
  $12uGp$useEffect(() => {
    if (isDisabled)
      return;
    let element = ref.current;
    let handler = (e2) => handlerRef.current.call(this, e2);
    element.addEventListener(event, handler, options);
    return () => {
      element.removeEventListener(event, handler, options);
    };
  }, [
    ref,
    event,
    options,
    isDisabled
  ]);
}
var $1dbecbe27a04f9af$exports = {};
$parcel$export5($1dbecbe27a04f9af$exports, "useValueEffect", () => $1dbecbe27a04f9af$export$14d238f342723f25);
function $1dbecbe27a04f9af$export$14d238f342723f25(defaultValue) {
  let [value, setValue] = $12uGp$useState(defaultValue);
  let valueRef = $12uGp$useRef(value);
  let effect = $12uGp$useRef(null);
  valueRef.current = value;
  let nextRef = $12uGp$useRef(null);
  nextRef.current = () => {
    let newValue = effect.current.next();
    if (newValue.done) {
      effect.current = null;
      return;
    }
    if (value === newValue.value)
      nextRef.current();
    else
      setValue(newValue.value);
  };
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    if (effect.current)
      nextRef.current();
  });
  let queue = $12uGp$useCallback((fn) => {
    effect.current = fn(valueRef.current);
    nextRef.current();
  }, [
    effect,
    nextRef
  ]);
  return [
    value,
    queue
  ];
}
var $2f04cbc44ee30ce0$exports = {};
$parcel$export5($2f04cbc44ee30ce0$exports, "scrollIntoView", () => $2f04cbc44ee30ce0$export$53a0910f038337bd);
function $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollView, element) {
  let offsetX = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "left");
  let offsetY = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "top");
  let width = element.offsetWidth;
  let height = element.offsetHeight;
  let x = scrollView.scrollLeft;
  let y = scrollView.scrollTop;
  let maxX = x + scrollView.offsetWidth;
  let maxY = y + scrollView.offsetHeight;
  if (offsetX <= x)
    x = offsetX;
  else if (offsetX + width > maxX)
    x += offsetX + width - maxX;
  if (offsetY <= y)
    y = offsetY;
  else if (offsetY + height > maxY)
    y += offsetY + height - maxY;
  scrollView.scrollLeft = x;
  scrollView.scrollTop = y;
}
function $2f04cbc44ee30ce0$var$relativeOffset(ancestor, child, axis) {
  const prop = axis === "left" ? "offsetLeft" : "offsetTop";
  let sum2 = 0;
  while (child.offsetParent) {
    sum2 += child[prop];
    if (child.offsetParent === ancestor)
      break;
    else if (child.offsetParent.contains(ancestor)) {
      sum2 -= ancestor[prop];
      break;
    }
    child = child.offsetParent;
  }
  return sum2;
}

// node_modules/@react-aria/label/dist/module.js
init_react_import();
function $parcel$export6(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $2baaea4c71418dea$exports = {};
$parcel$export6($2baaea4c71418dea$exports, "useField", () => $2baaea4c71418dea$export$294aa081a6c6f55d);
var $d191a55c9702f145$exports = {};
$parcel$export6($d191a55c9702f145$exports, "useLabel", () => $d191a55c9702f145$export$8467354a121f1b9f);
function $d191a55c9702f145$export$8467354a121f1b9f(props) {
  let { id, label, "aria-labelledby": ariaLabelledby, "aria-label": ariaLabel, labelElementType = "label" } = props;
  id = $bdb11010cef70236$export$f680877a34711e37(id);
  let labelId = $bdb11010cef70236$export$f680877a34711e37();
  let labelProps = {};
  if (label) {
    ariaLabelledby = ariaLabelledby ? `${ariaLabelledby} ${labelId}` : labelId;
    labelProps = {
      id: labelId,
      htmlFor: labelElementType === "label" ? id : void 0
    };
  } else if (!ariaLabelledby && !ariaLabel)
    console.warn("If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility");
  let fieldProps = $313b98861ee5dd6c$export$d6875122194c7b44({
    id,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby
  });
  return {
    labelProps,
    fieldProps
  };
}
function $2baaea4c71418dea$export$294aa081a6c6f55d(props) {
  let { description, errorMessage, validationState } = props;
  let { labelProps, fieldProps } = $d191a55c9702f145$export$8467354a121f1b9f(props);
  let descriptionId = $bdb11010cef70236$export$b4cc09c592e8fdb8([
    Boolean(description),
    Boolean(errorMessage),
    validationState
  ]);
  let errorMessageId = $bdb11010cef70236$export$b4cc09c592e8fdb8([
    Boolean(description),
    Boolean(errorMessage),
    validationState
  ]);
  fieldProps = $3ef42575df84b30b$export$9d1611c77c2fe928(fieldProps, {
    "aria-describedby": [
      descriptionId,
      errorMessageId,
      props["aria-describedby"]
    ].filter(Boolean).join(" ") || void 0
  });
  return {
    labelProps,
    fieldProps,
    descriptionProps: {
      id: descriptionId
    },
    errorMessageProps: {
      id: errorMessageId
    }
  };
}

// node_modules/@react-aria/focus/dist/module.js
init_react_import();
import $6nfFC$react, { useRef as $6nfFC$useRef, useContext as $6nfFC$useContext, useEffect as $6nfFC$useEffect, useState as $6nfFC$useState } from "react";

// node_modules/@react-aria/interactions/dist/module.js
init_react_import();
import $bx7SL$react, { useRef as $bx7SL$useRef, useContext as $bx7SL$useContext, useState as $bx7SL$useState, useMemo as $bx7SL$useMemo, useEffect as $bx7SL$useEffect, useCallback as $bx7SL$useCallback } from "react";
function $parcel$export7(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $3b117e43dc0ca95d$exports = {};
$parcel$export7($3b117e43dc0ca95d$exports, "Pressable", () => $3b117e43dc0ca95d$export$27c701ed9e449e99);
var $f6c31cce2adf654f$exports = {};
$parcel$export7($f6c31cce2adf654f$exports, "usePress", () => $f6c31cce2adf654f$export$45712eceda6fad21);
var $14c0b72509d70225$var$state = "default";
var $14c0b72509d70225$var$savedUserSelect = "";
var $14c0b72509d70225$var$modifiedElementMap = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1()) {
    if ($14c0b72509d70225$var$state === "default") {
      $14c0b72509d70225$var$savedUserSelect = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state = "disabled";
  } else if (target) {
    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1()) {
    if ($14c0b72509d70225$var$state !== "disabled")
      return;
    $14c0b72509d70225$var$state = "restoring";
    setTimeout(() => {
      $bbed8b41f857bcc0$export$24490316f764c430(() => {
        if ($14c0b72509d70225$var$state === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || "";
          $14c0b72509d70225$var$savedUserSelect = "";
          $14c0b72509d70225$var$state = "default";
        }
      });
    }, 300);
  } else if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {
    let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);
    if (target.style.userSelect === "none")
      target.style.userSelect = targetOldUserSelect;
    if (target.getAttribute("style") === "")
      target.removeAttribute("style");
    $14c0b72509d70225$var$modifiedElementMap.delete(target);
  }
}
function $8a9cb279dc87e130$export$60278871457622de(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  return event.detail === 0 && !event.pointerType;
}
var $8a9cb279dc87e130$export$905e7fc544a71f36 = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {
  let stateRef = $bx7SL$useRef({
    isFocused: false,
    onBlur,
    observer: null
  });
  let state1 = stateRef.current;
  state1.onBlur = onBlur;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    return () => {
      if (state1.observer) {
        state1.observer.disconnect();
        state1.observer = null;
      }
    };
  }, [
    state1
  ]);
  return (e1) => {
    if (e1.target instanceof HTMLButtonElement || e1.target instanceof HTMLInputElement || e1.target instanceof HTMLTextAreaElement || e1.target instanceof HTMLSelectElement) {
      state1.isFocused = true;
      let target = e1.target;
      let onBlurHandler = (e2) => {
        var ref;
        let state = stateRef.current;
        state.isFocused = false;
        if (target.disabled)
          (ref = state.onBlur) === null || ref === void 0 ? void 0 : ref.call(state, new $8a9cb279dc87e130$export$905e7fc544a71f36("blur", e2));
        if (state.observer) {
          state.observer.disconnect();
          state.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      state1.observer = new MutationObserver(() => {
        if (state1.isFocused && target.disabled) {
          state1.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      state1.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  };
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = $bx7SL$react.createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext(props) {
  let context2 = $bx7SL$useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5);
  if (context2) {
    let _a2 = context2, { register } = _a2, contextProps = __objRest(_a2, ["register"]);
    props = $3ef42575df84b30b$export$9d1611c77c2fe928(contextProps, props);
    register();
  }
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context2, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad21(props) {
  let _a2 = $f6c31cce2adf654f$var$usePressResponderContext(props), {
    onPress: onPress1,
    onPressChange: onPressChange1,
    onPressStart: onPressStart1,
    onPressEnd: onPressEnd1,
    onPressUp: onPressUp1,
    isDisabled: isDisabled1,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    ref: _
  } = _a2, domProps = __objRest(_a2, [
    "onPress",
    "onPressChange",
    "onPressStart",
    "onPressEnd",
    "onPressUp",
    "isDisabled",
    "isPressed",
    "preventFocusOnPress",
    "shouldCancelOnPointerExit",
    "allowTextSelectionOnPress",
    "ref"
  ]);
  let propsRef = $bx7SL$useRef(null);
  propsRef.current = {
    onPress: onPress1,
    onPressChange: onPressChange1,
    onPressStart: onPressStart1,
    onPressEnd: onPressEnd1,
    onPressUp: onPressUp1,
    isDisabled: isDisabled1,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = $bx7SL$useState(false);
  let ref = $bx7SL$useRef({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();
  let pressProps1 = $bx7SL$useMemo(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart, onPressChange, isDisabled } = propsRef.current;
      if (isDisabled || state.didFirePressStart)
        return;
      if (onPressStart)
        onPressStart({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange)
        onPressChange(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd, onPressChange, onPress, isDisabled } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd)
        onPressEnd({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange)
        onPressChange(false);
      setPressed(false);
      if (onPress && wasPressed && !isDisabled)
        onPress({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp, isDisabled } = propsRef.current;
      if (isDisabled)
        return;
      if (onPressUp)
        onPressUp({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel2 = (e2) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);
      }
    };
    let pressProps = {
      onKeyDown(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e2.nativeEvent) && e2.currentTarget.contains(e2.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e2.target))
            e2.preventDefault();
          e2.stopPropagation();
          if (!state.isPressed && !e2.repeat) {
            state.target = e2.currentTarget;
            state.isPressed = true;
            triggerPressStart(e2, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        }
      },
      onKeyUp(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e2.nativeEvent) && !e2.repeat && e2.currentTarget.contains(e2.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e2), "keyboard");
      },
      onClick(e2) {
        if (e2 && !e2.currentTarget.contains(e2.target))
          return;
        if (e2 && e2.button === 0) {
          e2.stopPropagation();
          if (isDisabled1)
            e2.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || $8a9cb279dc87e130$export$60278871457622de(e2.nativeEvent))) {
            if (!isDisabled1 && !preventFocusOnPress)
              $7215afc6de606d6b$export$de79e2c695e052f3(e2.currentTarget);
            triggerPressStart(e2, "virtual");
            triggerPressUp(e2, "virtual");
            triggerPressEnd(e2, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e2) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent(e2)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e2.target))
          e2.preventDefault();
        e2.stopPropagation();
        state.isPressed = false;
        let target = e2.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target.contains(target) && $f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) || state.target.getAttribute("role") === "link")
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps.onPointerDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($f6c31cce2adf654f$var$isVirtualPointerEvent(e2.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault(e2.currentTarget))
          e2.preventDefault();
        state.pointerType = e2.pointerType;
        e2.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e2.pointerId;
          state.target = e2.currentTarget;
          if (!isDisabled1 && !preventFocusOnPress)
            $7215afc6de606d6b$export$de79e2c695e052f3(e2.currentTarget);
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$16a4697467175487(state.target);
          triggerPressStart(e2, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps.onMouseDown = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (e2.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault(e2.currentTarget))
            e2.preventDefault();
          e2.stopPropagation();
        }
      };
      pressProps.onPointerUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target) || state.pointerType === "virtual")
          return;
        if (e2.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e2, e2.currentTarget))
          triggerPressUp(e2, state.pointerType || e2.pointerType);
      };
      let onPointerMove = (e2) => {
        if (e2.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget(e2, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel2(e2);
        }
      };
      let onPointerUp = (e2) => {
        if (e2.pointerId === state.activePointerId && state.isPressed && e2.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget(e2, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);
        }
      };
      let onPointerCancel = (e2) => {
        cancel2(e2);
      };
      pressProps.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel2(e2);
      };
    } else {
      pressProps.onMouseDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault(e2.currentTarget))
          e2.preventDefault();
        e2.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e2.currentTarget;
        state.pointerType = $8a9cb279dc87e130$export$60278871457622de(e2.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled1 && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3(e2.currentTarget);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps.onMouseEnter = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e2, state.pointerType);
        }
      };
      pressProps.onMouseLeave = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel2(e2);
        }
      };
      pressProps.onMouseUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e2.button === 0)
          triggerPressUp(e2, state.pointerType);
      };
      let onMouseUp = (e2) => {
        if (e2.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget(e2, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps.onTouchStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e2.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e2.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled1 && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3(e2.currentTarget);
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$16a4697467175487(state.target);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps.onTouchMove = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e2.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e2, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel2(e2);
        }
      };
      pressProps.onTouchEnd = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e2.currentTarget)) {
          triggerPressUp(e2, state.pointerType);
          triggerPressEnd(e2, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e2, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);
        removeAllGlobalListeners();
      };
      pressProps.onTouchCancel = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed)
          cancel2(e2);
      };
      let onScroll = (e2) => {
        if (state.isPressed && e2.target.contains(state.target))
          cancel2({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel2(e2);
      };
    }
    return pressProps;
  }, [
    addGlobalListener,
    isDisabled1,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  $bx7SL$useEffect(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        $14c0b72509d70225$export$b0d6fa1ab32e3295(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, pressProps1)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent(event) {
  const { key, code, target } = event;
  const element = target;
  const { tagName, isContentEditable } = element;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && tagName !== "INPUT" && tagName !== "TEXTAREA" && isContentEditable !== true && (!$f6c31cce2adf654f$var$isHTMLAnchorLink(element) || role === "button" && key !== "Enter") && !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i = 0; i < changedTouches.length; i++) {
    const touch = changedTouches[i];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent(target, e2) {
  return {
    currentTarget: target,
    shiftKey: e2.shiftKey,
    ctrlKey: e2.ctrlKey,
    metaKey: e2.metaKey,
    altKey: e2.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping(a, b) {
  if (a.left > b.right || b.left > a.right)
    return false;
  if (a.top > b.bottom || b.top > a.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault(target) {
  return !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target) {
  return !((target.tagName === "INPUT" || target.tagName === "BUTTON") && target.type === "submit");
}
function $f6c31cce2adf654f$var$isVirtualPointerEvent(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0;
}
var $3b117e43dc0ca95d$export$27c701ed9e449e99 = /* @__PURE__ */ $bx7SL$react.forwardRef((_a2, ref) => {
  var _b = _a2, { children } = _b, props = __objRest(_b, ["children"]);
  let newRef = $bx7SL$useRef();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad21(__spreadProps(__spreadValues({}, props), {
    ref
  }));
  let child = $bx7SL$react.Children.only(children);
  return /* @__PURE__ */ $bx7SL$react.cloneElement(child, __spreadValues({
    ref
  }, $3ef42575df84b30b$export$9d1611c77c2fe928(child.props, pressProps)));
});
var $f1ab8c75478c6f73$exports = {};
$parcel$export7($f1ab8c75478c6f73$exports, "PressResponder", () => $f1ab8c75478c6f73$export$3351871ee4b288b8);
var $f1ab8c75478c6f73$export$3351871ee4b288b8 = /* @__PURE__ */ $bx7SL$react.forwardRef((_a2, ref) => {
  var _b = _a2, { children } = _b, props = __objRest(_b, ["children"]);
  let isRegistered = $bx7SL$useRef(false);
  let prevContext = $bx7SL$useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5);
  let context2 = $3ef42575df84b30b$export$9d1611c77c2fe928(prevContext || {}, __spreadProps(__spreadValues({}, props), {
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  }));
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e(prevContext, ref);
  $bx7SL$useEffect(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return /* @__PURE__ */ $bx7SL$react.createElement($ae1eeba8b9eafd08$export$5165eccb35aaadb5.Provider, {
    value: context2
  }, children);
});
var $a1ea59d68270f0dd$exports = {};
$parcel$export7($a1ea59d68270f0dd$exports, "useFocus", () => $a1ea59d68270f0dd$export$f8168d8dd8fd66e6);
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {
  let onBlur;
  if (!props.isDisabled && (props.onBlur || props.onFocusChange))
    onBlur = (e2) => {
      if (e2.target === e2.currentTarget) {
        if (props.onBlur)
          props.onBlur(e2);
        if (props.onFocusChange)
          props.onFocusChange(false);
        return true;
      }
    };
  else
    onBlur = null;
  let onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);
  let onFocus;
  if (!props.isDisabled && (props.onFocus || props.onFocusChange || props.onBlur))
    onFocus = (e2) => {
      if (e2.target === e2.currentTarget) {
        if (props.onFocus)
          props.onFocus(e2);
        if (props.onFocusChange)
          props.onFocusChange(true);
        onSyntheticFocus(e2);
      }
    };
  return {
    focusProps: {
      onFocus,
      onBlur
    }
  };
}
var $507fabe10e71c6fb$exports = {};
$parcel$export7($507fabe10e71c6fb$exports, "isFocusVisible", () => $507fabe10e71c6fb$export$b9b3dfddab17db27);
$parcel$export7($507fabe10e71c6fb$exports, "getInteractionModality", () => $507fabe10e71c6fb$export$630ff653c5ada6a9);
$parcel$export7($507fabe10e71c6fb$exports, "setInteractionModality", () => $507fabe10e71c6fb$export$8397ddfc504fdb9a);
$parcel$export7($507fabe10e71c6fb$exports, "useInteractionModality", () => $507fabe10e71c6fb$export$98e20ec92f614cfe);
$parcel$export7($507fabe10e71c6fb$exports, "useFocusVisible", () => $507fabe10e71c6fb$export$ffd9e5021c1fb2d6);
$parcel$export7($507fabe10e71c6fb$exports, "useFocusVisibleListener", () => $507fabe10e71c6fb$export$ec71b4b83ac08ec3);
var $507fabe10e71c6fb$var$currentModality = null;
var $507fabe10e71c6fb$var$changeHandlers = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
var $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {
  Tab: true,
  Escape: true
};
function $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e2) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers)
    handler(modality, e2);
}
function $507fabe10e71c6fb$var$isValidKey(e2) {
  return !(e2.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10() && e2.altKey || e2.ctrlKey || e2.key === "Control" || e2.key === "Shift" || e2.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent(e2) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
  if ($507fabe10e71c6fb$var$isValidKey(e2)) {
    $507fabe10e71c6fb$var$currentModality = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers("keyboard", e2);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent(e2) {
  $507fabe10e71c6fb$var$currentModality = "pointer";
  if (e2.type === "mousedown" || e2.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers("pointer", e2);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent(e2) {
  if ($8a9cb279dc87e130$export$60278871457622de(e2)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$currentModality = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent(e2) {
  if (e2.target === window || e2.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {
    $507fabe10e71c6fb$var$currentModality = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers("virtual", e2);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents);
}
function $507fabe10e71c6fb$export$b9b3dfddab17db27() {
  return $507fabe10e71c6fb$var$currentModality !== "pointer";
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9() {
  return $507fabe10e71c6fb$var$currentModality;
}
function $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {
  $507fabe10e71c6fb$var$currentModality = modality;
  $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);
}
function $507fabe10e71c6fb$export$98e20ec92f614cfe() {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  let [modality, setModality] = $bx7SL$useState($507fabe10e71c6fb$var$currentModality);
  $bx7SL$useEffect(() => {
    let handler = () => {
      setModality($507fabe10e71c6fb$var$currentModality);
    };
    $507fabe10e71c6fb$var$changeHandlers.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers.delete(handler);
    };
  }, []);
  return modality;
}
function $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e2) {
  return !(isTextInput && modality === "keyboard" && e2 instanceof KeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e2.key]);
}
function $507fabe10e71c6fb$export$ffd9e5021c1fb2d6(props = {}) {
  let { isTextInput, autoFocus } = props;
  let [isFocusVisibleState, setFocusVisible] = $bx7SL$useState(autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27());
  $507fabe10e71c6fb$export$ec71b4b83ac08ec3(($507fabe10e71c6fb$export$b9b3dfddab17db272) => {
    setFocusVisible($507fabe10e71c6fb$export$b9b3dfddab17db272);
  }, [
    isTextInput
  ], {
    isTextInput
  });
  return {
    isFocusVisible: isFocusVisibleState
  };
}
function $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  $bx7SL$useEffect(() => {
    let handler = (modality, e2) => {
      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(opts === null || opts === void 0 ? void 0 : opts.isTextInput, modality, e2))
        return;
      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());
    };
    $507fabe10e71c6fb$var$changeHandlers.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers.delete(handler);
    };
  }, deps);
}
var $9ab94262bd0047c7$exports = {};
$parcel$export7($9ab94262bd0047c7$exports, "useFocusWithin", () => $9ab94262bd0047c7$export$420e68273165f4ec);
function $9ab94262bd0047c7$export$420e68273165f4ec(props) {
  let state = $bx7SL$useRef({
    isFocusWithin: false
  }).current;
  let onBlur = props.isDisabled ? null : (e2) => {
    if (state.isFocusWithin && !e2.currentTarget.contains(e2.relatedTarget)) {
      state.isFocusWithin = false;
      if (props.onBlurWithin)
        props.onBlurWithin(e2);
      if (props.onFocusWithinChange)
        props.onFocusWithinChange(false);
    }
  };
  let onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);
  let onFocus = props.isDisabled ? null : (e2) => {
    if (!state.isFocusWithin) {
      if (props.onFocusWithin)
        props.onFocusWithin(e2);
      if (props.onFocusWithinChange)
        props.onFocusWithinChange(true);
      state.isFocusWithin = true;
      onSyntheticFocus(e2);
    }
  };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}
var $6179b936705e76d3$exports = {};
$parcel$export7($6179b936705e76d3$exports, "useHover", () => $6179b936705e76d3$export$ae780daf29e6d456);
var $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
var $6179b936705e76d3$var$hoverCount = 0;
function $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {
  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;
  setTimeout(() => {
    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
  }, 50);
}
function $6179b936705e76d3$var$handleGlobalPointerEvent(e2) {
  if (e2.pointerType === "touch")
    $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();
}
function $6179b936705e76d3$var$setupGlobalTouchEvents() {
  if (typeof document === "undefined")
    return;
  if (typeof PointerEvent !== "undefined")
    document.addEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
  else
    document.addEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  $6179b936705e76d3$var$hoverCount++;
  return () => {
    $6179b936705e76d3$var$hoverCount--;
    if ($6179b936705e76d3$var$hoverCount > 0)
      return;
    if (typeof PointerEvent !== "undefined")
      document.removeEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
    else
      document.removeEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  };
}
function $6179b936705e76d3$export$ae780daf29e6d456(props) {
  let { onHoverStart, onHoverChange, onHoverEnd, isDisabled } = props;
  let [isHovered, setHovered] = $bx7SL$useState(false);
  let state = $bx7SL$useRef({
    isHovered: false,
    ignoreEmulatedMouseEvents: false,
    pointerType: "",
    target: null
  }).current;
  $bx7SL$useEffect($6179b936705e76d3$var$setupGlobalTouchEvents, []);
  let { hoverProps: hoverProps1, triggerHoverEnd: triggerHoverEnd1 } = $bx7SL$useMemo(() => {
    let triggerHoverStart = (event, pointerType) => {
      state.pointerType = pointerType;
      if (isDisabled || pointerType === "touch" || state.isHovered || !event.currentTarget.contains(event.target))
        return;
      state.isHovered = true;
      let target = event.currentTarget;
      state.target = target;
      if (onHoverStart)
        onHoverStart({
          type: "hoverstart",
          target,
          pointerType
        });
      if (onHoverChange)
        onHoverChange(true);
      setHovered(true);
    };
    let triggerHoverEnd = (event, pointerType) => {
      state.pointerType = "";
      state.target = null;
      if (pointerType === "touch" || !state.isHovered)
        return;
      state.isHovered = false;
      let target = event.currentTarget;
      if (onHoverEnd)
        onHoverEnd({
          type: "hoverend",
          target,
          pointerType
        });
      if (onHoverChange)
        onHoverChange(false);
      setHovered(false);
    };
    let hoverProps = {};
    if (typeof PointerEvent !== "undefined") {
      hoverProps.onPointerEnter = (e2) => {
        if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e2.pointerType === "mouse")
          return;
        triggerHoverStart(e2, e2.pointerType);
      };
      hoverProps.onPointerLeave = (e2) => {
        if (!isDisabled && e2.currentTarget.contains(e2.target))
          triggerHoverEnd(e2, e2.pointerType);
      };
    } else {
      hoverProps.onTouchStart = () => {
        state.ignoreEmulatedMouseEvents = true;
      };
      hoverProps.onMouseEnter = (e2) => {
        if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents)
          triggerHoverStart(e2, "mouse");
        state.ignoreEmulatedMouseEvents = false;
      };
      hoverProps.onMouseLeave = (e2) => {
        if (!isDisabled && e2.currentTarget.contains(e2.target))
          triggerHoverEnd(e2, "mouse");
      };
    }
    return {
      hoverProps,
      triggerHoverEnd
    };
  }, [
    onHoverStart,
    onHoverChange,
    onHoverEnd,
    isDisabled,
    state
  ]);
  $bx7SL$useEffect(() => {
    if (isDisabled)
      triggerHoverEnd1({
        currentTarget: state.target
      }, state.pointerType);
  }, [
    isDisabled
  ]);
  return {
    hoverProps: hoverProps1,
    isHovered
  };
}
var $e0b6e0b68ec7f50f$exports = {};
$parcel$export7($e0b6e0b68ec7f50f$exports, "useInteractOutside", () => $e0b6e0b68ec7f50f$export$872b660ac5a1ff98);
function $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {
  let { ref, onInteractOutside, isDisabled, onInteractOutsideStart } = props;
  let stateRef = $bx7SL$useRef({
    isPointerDown: false,
    ignoreEmulatedMouseEvents: false,
    onInteractOutside,
    onInteractOutsideStart
  });
  let state = stateRef.current;
  state.onInteractOutside = onInteractOutside;
  state.onInteractOutsideStart = onInteractOutsideStart;
  $bx7SL$useEffect(() => {
    if (isDisabled)
      return;
    let onPointerDown = (e2) => {
      if ($e0b6e0b68ec7f50f$var$isValidEvent(e2, ref) && state.onInteractOutside) {
        if (state.onInteractOutsideStart)
          state.onInteractOutsideStart(e2);
        state.isPointerDown = true;
      }
    };
    if (typeof PointerEvent !== "undefined") {
      let onPointerUp = (e2) => {
        if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e2, ref)) {
          state.isPointerDown = false;
          state.onInteractOutside(e2);
        }
      };
      document.addEventListener("pointerdown", onPointerDown, true);
      document.addEventListener("pointerup", onPointerUp, true);
      return () => {
        document.removeEventListener("pointerdown", onPointerDown, true);
        document.removeEventListener("pointerup", onPointerUp, true);
      };
    } else {
      let onMouseUp = (e2) => {
        if (state.ignoreEmulatedMouseEvents)
          state.ignoreEmulatedMouseEvents = false;
        else if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e2, ref)) {
          state.isPointerDown = false;
          state.onInteractOutside(e2);
        }
      };
      let onTouchEnd = (e2) => {
        state.ignoreEmulatedMouseEvents = true;
        if (state.onInteractOutside && state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e2, ref)) {
          state.isPointerDown = false;
          state.onInteractOutside(e2);
        }
      };
      document.addEventListener("mousedown", onPointerDown, true);
      document.addEventListener("mouseup", onMouseUp, true);
      document.addEventListener("touchstart", onPointerDown, true);
      document.addEventListener("touchend", onTouchEnd, true);
      return () => {
        document.removeEventListener("mousedown", onPointerDown, true);
        document.removeEventListener("mouseup", onMouseUp, true);
        document.removeEventListener("touchstart", onPointerDown, true);
        document.removeEventListener("touchend", onTouchEnd, true);
      };
    }
  }, [
    ref,
    state,
    isDisabled
  ]);
}
function $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {
  if (event.button > 0)
    return false;
  if (event.target) {
    const ownerDocument = event.target.ownerDocument;
    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target))
      return false;
  }
  return ref.current && !ref.current.contains(event.target);
}
var $46d819fcbaf35654$exports = {};
$parcel$export7($46d819fcbaf35654$exports, "useKeyboard", () => $46d819fcbaf35654$export$8f71654801c2f7cd);
function $93925083ecbb358c$export$48d1ea6320830260(handler) {
  if (!handler)
    return;
  let shouldStopPropagation = true;
  return (e2) => {
    let event = __spreadProps(__spreadValues({}, e2), {
      preventDefault() {
        e2.preventDefault();
      },
      isDefaultPrevented() {
        return e2.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    });
    handler(event);
    if (shouldStopPropagation)
      e2.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyDown),
      onKeyUp: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyUp)
    }
  };
}
var $e8a7022cf87cba2a$exports = {};
$parcel$export7($e8a7022cf87cba2a$exports, "useMove", () => $e8a7022cf87cba2a$export$36da96379f79f245);
function $e8a7022cf87cba2a$export$36da96379f79f245(props) {
  let { onMoveStart, onMove, onMoveEnd } = props;
  let state = $bx7SL$useRef({
    didMove: false,
    lastPosition: null,
    id: null
  });
  let { addGlobalListener, removeGlobalListener } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();
  let moveProps1 = $bx7SL$useMemo(() => {
    let moveProps = {};
    let start = () => {
      $14c0b72509d70225$export$16a4697467175487();
      state.current.didMove = false;
    };
    let move = (originalEvent, pointerType, deltaX, deltaY) => {
      if (deltaX === 0 && deltaY === 0)
        return;
      if (!state.current.didMove) {
        state.current.didMove = true;
        onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({
          type: "movestart",
          pointerType,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      }
      onMove({
        type: "move",
        pointerType,
        deltaX,
        deltaY,
        shiftKey: originalEvent.shiftKey,
        metaKey: originalEvent.metaKey,
        ctrlKey: originalEvent.ctrlKey,
        altKey: originalEvent.altKey
      });
    };
    let end = (originalEvent, pointerType) => {
      $14c0b72509d70225$export$b0d6fa1ab32e3295();
      if (state.current.didMove)
        onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({
          type: "moveend",
          pointerType,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    if (typeof PointerEvent === "undefined") {
      let onMouseMove = (e2) => {
        if (e2.button === 0) {
          move(e2, "mouse", e2.pageX - state.current.lastPosition.pageX, e2.pageY - state.current.lastPosition.pageY);
          state.current.lastPosition = {
            pageX: e2.pageX,
            pageY: e2.pageY
          };
        }
      };
      let onMouseUp = (e2) => {
        if (e2.button === 0) {
          end(e2, "mouse");
          removeGlobalListener(window, "mousemove", onMouseMove, false);
          removeGlobalListener(window, "mouseup", onMouseUp, false);
        }
      };
      moveProps.onMouseDown = (e2) => {
        if (e2.button === 0) {
          start();
          e2.stopPropagation();
          e2.preventDefault();
          state.current.lastPosition = {
            pageX: e2.pageX,
            pageY: e2.pageY
          };
          addGlobalListener(window, "mousemove", onMouseMove, false);
          addGlobalListener(window, "mouseup", onMouseUp, false);
        }
      };
      let onTouchMove = (e2) => {
        let touch = [
          ...e2.changedTouches
        ].findIndex(({ identifier }) => identifier === state.current.id);
        if (touch >= 0) {
          let { pageX, pageY } = e2.changedTouches[touch];
          move(e2, "touch", pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);
          state.current.lastPosition = {
            pageX,
            pageY
          };
        }
      };
      let onTouchEnd = (e2) => {
        let touch = [
          ...e2.changedTouches
        ].findIndex(({ identifier }) => identifier === state.current.id);
        if (touch >= 0) {
          end(e2, "touch");
          state.current.id = null;
          removeGlobalListener(window, "touchmove", onTouchMove);
          removeGlobalListener(window, "touchend", onTouchEnd);
          removeGlobalListener(window, "touchcancel", onTouchEnd);
        }
      };
      moveProps.onTouchStart = (e2) => {
        if (e2.changedTouches.length === 0 || state.current.id != null)
          return;
        let { pageX, pageY, identifier } = e2.changedTouches[0];
        start();
        e2.stopPropagation();
        e2.preventDefault();
        state.current.lastPosition = {
          pageX,
          pageY
        };
        state.current.id = identifier;
        addGlobalListener(window, "touchmove", onTouchMove, false);
        addGlobalListener(window, "touchend", onTouchEnd, false);
        addGlobalListener(window, "touchcancel", onTouchEnd, false);
      };
    } else {
      let onPointerMove = (e2) => {
        if (e2.pointerId === state.current.id) {
          let pointerType = e2.pointerType || "mouse";
          move(e2, pointerType, e2.pageX - state.current.lastPosition.pageX, e2.pageY - state.current.lastPosition.pageY);
          state.current.lastPosition = {
            pageX: e2.pageX,
            pageY: e2.pageY
          };
        }
      };
      let onPointerUp = (e2) => {
        if (e2.pointerId === state.current.id) {
          let pointerType = e2.pointerType || "mouse";
          end(e2, pointerType);
          state.current.id = null;
          removeGlobalListener(window, "pointermove", onPointerMove, false);
          removeGlobalListener(window, "pointerup", onPointerUp, false);
          removeGlobalListener(window, "pointercancel", onPointerUp, false);
        }
      };
      moveProps.onPointerDown = (e2) => {
        if (e2.button === 0 && state.current.id == null) {
          start();
          e2.stopPropagation();
          e2.preventDefault();
          state.current.lastPosition = {
            pageX: e2.pageX,
            pageY: e2.pageY
          };
          state.current.id = e2.pointerId;
          addGlobalListener(window, "pointermove", onPointerMove, false);
          addGlobalListener(window, "pointerup", onPointerUp, false);
          addGlobalListener(window, "pointercancel", onPointerUp, false);
        }
      };
    }
    let triggerKeyboardMove = (e2, deltaX, deltaY) => {
      start();
      move(e2, "keyboard", deltaX, deltaY);
      end(e2, "keyboard");
    };
    moveProps.onKeyDown = (e2) => {
      switch (e2.key) {
        case "Left":
        case "ArrowLeft":
          e2.preventDefault();
          e2.stopPropagation();
          triggerKeyboardMove(e2, -1, 0);
          break;
        case "Right":
        case "ArrowRight":
          e2.preventDefault();
          e2.stopPropagation();
          triggerKeyboardMove(e2, 1, 0);
          break;
        case "Up":
        case "ArrowUp":
          e2.preventDefault();
          e2.stopPropagation();
          triggerKeyboardMove(e2, 0, -1);
          break;
        case "Down":
        case "ArrowDown":
          e2.preventDefault();
          e2.stopPropagation();
          triggerKeyboardMove(e2, 0, 1);
          break;
      }
    };
    return moveProps;
  }, [
    state,
    onMoveStart,
    onMove,
    onMoveEnd,
    addGlobalListener,
    removeGlobalListener
  ]);
  return {
    moveProps: moveProps1
  };
}
var $7d0a636d7a4dcefd$exports = {};
$parcel$export7($7d0a636d7a4dcefd$exports, "useScrollWheel", () => $7d0a636d7a4dcefd$export$2123ff2b87c81ca);
function $7d0a636d7a4dcefd$export$2123ff2b87c81ca(props, ref) {
  let { onScroll, isDisabled } = props;
  let onScrollHandler = $bx7SL$useCallback((e2) => {
    if (e2.ctrlKey)
      return;
    e2.preventDefault();
    e2.stopPropagation();
    if (onScroll)
      onScroll({
        deltaX: e2.deltaX,
        deltaY: e2.deltaY
      });
  }, [
    onScroll
  ]);
  $e9faafb641e167db$export$90fc3a17d93f704c(ref, "wheel", isDisabled ? null : onScrollHandler);
}
var $8a26561d2877236e$exports = {};
$parcel$export7($8a26561d2877236e$exports, "useLongPress", () => $8a26561d2877236e$export$c24ed0104d07eab9);
var $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;
function $8a26561d2877236e$export$c24ed0104d07eab9(props) {
  let { isDisabled, onLongPressStart, onLongPressEnd, onLongPress, threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD, accessibilityDescription } = props;
  const timeRef = $bx7SL$useRef(null);
  let { addGlobalListener, removeGlobalListener } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad21({
    isDisabled,
    onPressStart(e1) {
      if (e1.pointerType === "mouse" || e1.pointerType === "touch") {
        if (onLongPressStart)
          onLongPressStart(__spreadProps(__spreadValues({}, e1), {
            type: "longpressstart"
          }));
        timeRef.current = setTimeout(() => {
          e1.target.dispatchEvent(new PointerEvent("pointercancel", {
            bubbles: true
          }));
          if (onLongPress)
            onLongPress(__spreadProps(__spreadValues({}, e1), {
              type: "longpress"
            }));
          timeRef.current = null;
        }, threshold);
        if (e1.pointerType === "touch") {
          let onContextMenu = (e2) => {
            e2.preventDefault();
          };
          addGlobalListener(e1.target, "contextmenu", onContextMenu, {
            once: true
          });
          addGlobalListener(window, "pointerup", () => {
            setTimeout(() => {
              removeGlobalListener(e1.target, "contextmenu", onContextMenu);
            }, 30);
          }, {
            once: true
          });
        }
      }
    },
    onPressEnd(e2) {
      if (timeRef.current)
        clearTimeout(timeRef.current);
      if (onLongPressEnd && (e2.pointerType === "mouse" || e2.pointerType === "touch"))
        onLongPressEnd(__spreadProps(__spreadValues({}, e2), {
          type: "longpressend"
        }));
    }
  });
  let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa1(onLongPress && !isDisabled ? accessibilityDescription : null);
  return {
    longPressProps: $3ef42575df84b30b$export$9d1611c77c2fe928(pressProps, descriptionProps)
  };
}

// node_modules/@react-aria/focus/dist/module.js
function $parcel$export8(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $9bf71ea28793e738$exports = {};
$parcel$export8($9bf71ea28793e738$exports, "FocusScope", () => $9bf71ea28793e738$export$20e40289641fbbb6);
$parcel$export8($9bf71ea28793e738$exports, "useFocusManager", () => $9bf71ea28793e738$export$10c5169755ce7bd7);
$parcel$export8($9bf71ea28793e738$exports, "getFocusableTreeWalker", () => $9bf71ea28793e738$export$2d6ec8fc375ceafa);
$parcel$export8($9bf71ea28793e738$exports, "createFocusManager", () => $9bf71ea28793e738$export$c5251b9e124bf29);
var $6a99195332edec8b$exports = {};
$parcel$export8($6a99195332edec8b$exports, "focusSafely", () => $6a99195332edec8b$export$80f3e147d781571c);
function $6a99195332edec8b$export$80f3e147d781571c(element) {
  if ($507fabe10e71c6fb$export$630ff653c5ada6a9() === "virtual") {
    let lastFocusedElement = document.activeElement;
    $bbed8b41f857bcc0$export$24490316f764c430(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        $7215afc6de606d6b$export$de79e2c695e052f3(element);
    });
  } else
    $7215afc6de606d6b$export$de79e2c695e052f3(element);
}
function $645f2e67b85a24c9$var$isStyleVisible(element) {
  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement))
    return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {
  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));
}
var $9bf71ea28793e738$var$FocusContext = /* @__PURE__ */ $6nfFC$react.createContext(null);
var $9bf71ea28793e738$var$activeScope = null;
var $9bf71ea28793e738$var$scopes = /* @__PURE__ */ new Map();
function $9bf71ea28793e738$export$20e40289641fbbb6(props) {
  let { children, contain, restoreFocus, autoFocus } = props;
  let startRef = $6nfFC$useRef();
  let endRef = $6nfFC$useRef();
  let scopeRef = $6nfFC$useRef([]);
  let ctx = $6nfFC$useContext($9bf71ea28793e738$var$FocusContext);
  let parentScope = ctx === null || ctx === void 0 ? void 0 : ctx.scopeRef;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let node = startRef.current.nextSibling;
    let nodes = [];
    while (node && node !== endRef.current) {
      nodes.push(node);
      node = node.nextSibling;
    }
    scopeRef.current = nodes;
  }, [
    children,
    parentScope
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    $9bf71ea28793e738$var$scopes.set(scopeRef, parentScope);
    return () => {
      if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$var$scopes.has(parentScope)))
        $9bf71ea28793e738$var$activeScope = parentScope;
      $9bf71ea28793e738$var$scopes.delete(scopeRef);
    };
  }, [
    scopeRef,
    parentScope
  ]);
  $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);
  $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);
  $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);
  let focusManager = $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef);
  return /* @__PURE__ */ $6nfFC$react.createElement($9bf71ea28793e738$var$FocusContext.Provider, {
    value: {
      scopeRef,
      focusManager
    }
  }, /* @__PURE__ */ $6nfFC$react.createElement("span", {
    "data-focus-scope-start": true,
    hidden: true,
    ref: startRef
  }), children, /* @__PURE__ */ $6nfFC$react.createElement("span", {
    "data-focus-scope-end": true,
    hidden: true,
    ref: endRef
  }));
}
function $9bf71ea28793e738$export$10c5169755ce7bd7() {
  var ref;
  return (ref = $6nfFC$useContext($9bf71ea28793e738$var$FocusContext)) === null || ref === void 0 ? void 0 : ref.focusManager;
}
function $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {
  return {
    focusNext(opts = {}) {
      let scope = scopeRef.current;
      let { from, tabbable, wrap } = opts;
      let node = from || document.activeElement;
      let sentinel = scope[0].previousElementSibling;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;
      let nextNode = walker.nextNode();
      if (!nextNode && wrap) {
        walker.currentNode = sentinel;
        nextNode = walker.nextNode();
      }
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusPrevious(opts = {}) {
      let scope = scopeRef.current;
      let { from, tabbable, wrap } = opts;
      let node = from || document.activeElement;
      let sentinel = scope[scope.length - 1].nextElementSibling;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;
      let previousNode = walker.previousNode();
      if (!previousNode && wrap) {
        walker.currentNode = sentinel;
        previousNode = walker.previousNode();
      }
      if (previousNode)
        $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    },
    focusFirst(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable
      }, scope);
      walker.currentNode = scope[0].previousElementSibling;
      let nextNode = walker.nextNode();
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusLast(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable
      }, scope);
      walker.currentNode = scope[scope.length - 1].nextElementSibling;
      let previousNode = walker.previousNode();
      if (previousNode)
        $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    }
  };
}
var $9bf71ea28793e738$var$focusableElements = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$getScopeRoot(scope) {
  return scope[0].parentElement;
}
function $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {
  let focusedNode = $6nfFC$useRef();
  let raf = $6nfFC$useRef(null);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let scope1 = scopeRef.current;
    if (!contain)
      return;
    let onKeyDown = (e2) => {
      if (e2.key !== "Tab" || e2.altKey || e2.ctrlKey || e2.metaKey || scopeRef !== $9bf71ea28793e738$var$activeScope)
        return;
      let focusedElement = document.activeElement;
      let scope = scopeRef.current;
      if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scope))
        return;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable: true
      }, scope);
      walker.currentNode = focusedElement;
      let nextElement = e2.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!nextElement) {
        walker.currentNode = e2.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;
        nextElement = e2.shiftKey ? walker.previousNode() : walker.nextNode();
      }
      e2.preventDefault();
      if (nextElement)
        $9bf71ea28793e738$var$focusElement(nextElement, true);
    };
    let onFocus = (e2) => {
      if (!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) {
        $9bf71ea28793e738$var$activeScope = scopeRef;
        focusedNode.current = e2.target;
      } else if (scopeRef === $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isElementInChildScope(e2.target, scopeRef)) {
        if (focusedNode.current)
          focusedNode.current.focus();
        else if ($9bf71ea28793e738$var$activeScope)
          $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);
      } else if (scopeRef === $9bf71ea28793e738$var$activeScope)
        focusedNode.current = e2.target;
    };
    let onBlur = (e2) => {
      raf.current = requestAnimationFrame(() => {
        if (scopeRef === $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isElementInChildScope(document.activeElement, scopeRef)) {
          $9bf71ea28793e738$var$activeScope = scopeRef;
          focusedNode.current = e2.target;
          focusedNode.current.focus();
        }
      });
    };
    document.addEventListener("keydown", onKeyDown, false);
    document.addEventListener("focusin", onFocus, false);
    scope1.forEach((element) => element.addEventListener("focusin", onFocus, false));
    scope1.forEach((element) => element.addEventListener("focusout", onBlur, false));
    return () => {
      document.removeEventListener("keydown", onKeyDown, false);
      document.removeEventListener("focusin", onFocus, false);
      scope1.forEach((element) => element.removeEventListener("focusin", onFocus, false));
      scope1.forEach((element) => element.removeEventListener("focusout", onBlur, false));
    };
  }, [
    scopeRef,
    contain
  ]);
  $6nfFC$useEffect(() => {
    return () => cancelAnimationFrame(raf.current);
  }, [
    raf
  ]);
}
function $9bf71ea28793e738$var$isElementInAnyScope(element) {
  for (let scope of $9bf71ea28793e738$var$scopes.keys()) {
    if ($9bf71ea28793e738$var$isElementInScope(element, scope.current))
      return true;
  }
  return false;
}
function $9bf71ea28793e738$var$isElementInScope(element, scope) {
  return scope.some((node) => node.contains(element));
}
function $9bf71ea28793e738$var$isElementInChildScope(element, scope) {
  for (let s of $9bf71ea28793e738$var$scopes.keys()) {
    if ((s === scope || $9bf71ea28793e738$var$isAncestorScope(scope, s)) && $9bf71ea28793e738$var$isElementInScope(element, s.current))
      return true;
  }
  return false;
}
function $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {
  let parent = $9bf71ea28793e738$var$scopes.get(scope);
  if (!parent)
    return false;
  if (parent === ancestor)
    return true;
  return $9bf71ea28793e738$var$isAncestorScope(ancestor, parent);
}
function $9bf71ea28793e738$var$focusElement(element, scroll = false) {
  if (element != null && !scroll)
    try {
      $6a99195332edec8b$export$80f3e147d781571c(element);
    } catch (err) {
    }
  else if (element != null)
    try {
      element.focus();
    } catch (err1) {
    }
}
function $9bf71ea28793e738$var$focusFirstInScope(scope) {
  let sentinel = scope[0].previousElementSibling;
  let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
    tabbable: true
  }, scope);
  walker.currentNode = sentinel;
  $9bf71ea28793e738$var$focusElement(walker.nextNode());
}
function $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {
  const autoFocusRef = $6nfFC$react.useRef(autoFocus);
  $6nfFC$useEffect(() => {
    if (autoFocusRef.current) {
      $9bf71ea28793e738$var$activeScope = scopeRef;
      if (!$9bf71ea28793e738$var$isElementInScope(document.activeElement, $9bf71ea28793e738$var$activeScope.current))
        $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);
    }
    autoFocusRef.current = false;
  }, []);
}
function $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {
  const nodeToRestoreRef = $6nfFC$useRef(typeof document !== "undefined" ? document.activeElement : null);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let nodeToRestore = nodeToRestoreRef.current;
    if (!restoreFocus)
      return;
    let onKeyDown = (e2) => {
      if (e2.key !== "Tab" || e2.altKey || e2.ctrlKey || e2.metaKey)
        return;
      let focusedElement = document.activeElement;
      if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scopeRef.current))
        return;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(document.body, {
        tabbable: true
      });
      walker.currentNode = focusedElement;
      let nextElement = e2.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body)
        nodeToRestore = null;
      if ((!nextElement || !$9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {
        walker.currentNode = nodeToRestore;
        do
          nextElement = e2.shiftKey ? walker.previousNode() : walker.nextNode();
        while ($9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current));
        e2.preventDefault();
        e2.stopPropagation();
        if (nextElement)
          $9bf71ea28793e738$var$focusElement(nextElement, true);
        else if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore))
          focusedElement.blur();
        else
          $9bf71ea28793e738$var$focusElement(nodeToRestore, true);
      }
    };
    if (!contain)
      document.addEventListener("keydown", onKeyDown, true);
    return () => {
      if (!contain)
        document.removeEventListener("keydown", onKeyDown, true);
      if (restoreFocus && nodeToRestore && $9bf71ea28793e738$var$isElementInScope(document.activeElement, scopeRef.current))
        requestAnimationFrame(() => {
          if (document.body.contains(nodeToRestore))
            $9bf71ea28793e738$var$focusElement(nodeToRestore);
        });
    };
  }, [
    scopeRef,
    restoreFocus,
    contain
  ]);
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {
  let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR;
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      var ref;
      if (opts === null || opts === void 0 ? void 0 : (ref = opts.from) === null || ref === void 0 ? void 0 : ref.contains(node))
        return NodeFilter.FILTER_REJECT;
      if (node.matches(selector) && $645f2e67b85a24c9$export$e989c0fffaa6b27a(node) && (!scope || $9bf71ea28793e738$var$isElementInScope(node, scope)))
        return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from)
    walker.currentNode = opts.from;
  return walker;
}
function $9bf71ea28793e738$export$c5251b9e124bf29(ref) {
  return {
    focusNext(opts = {}) {
      let root = ref.current;
      let { from, tabbable, wrap } = opts;
      let node = from || document.activeElement;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable
      });
      if (root.contains(node))
        walker.currentNode = node;
      let nextNode = walker.nextNode();
      if (!nextNode && wrap) {
        walker.currentNode = root;
        nextNode = walker.nextNode();
      }
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusPrevious(opts = {}) {
      let root = ref.current;
      let { from, tabbable, wrap } = opts;
      let node = from || document.activeElement;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable
      });
      if (root.contains(node))
        walker.currentNode = node;
      else {
        let next = $9bf71ea28793e738$var$last(walker);
        if (next)
          $9bf71ea28793e738$var$focusElement(next, true);
        return next;
      }
      let previousNode = walker.previousNode();
      if (!previousNode && wrap) {
        walker.currentNode = root;
        previousNode = $9bf71ea28793e738$var$last(walker);
      }
      if (previousNode)
        $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    },
    focusFirst(opts = {}) {
      let root = ref.current;
      let { tabbable } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable
      });
      let nextNode = walker.nextNode();
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusLast(opts = {}) {
      let root = ref.current;
      let { tabbable } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable
      });
      let next = $9bf71ea28793e738$var$last(walker);
      if (next)
        $9bf71ea28793e738$var$focusElement(next, true);
      return next;
    }
  };
}
function $9bf71ea28793e738$var$last(walker) {
  let next;
  let last;
  do {
    last = walker.lastChild();
    if (last)
      next = last;
  } while (last);
  return next;
}
var $907718708eab68af$exports = {};
$parcel$export8($907718708eab68af$exports, "FocusRing", () => $907718708eab68af$export$1a38b4ad7f578e1d);
var $f7dceffc5ad7768b$exports = {};
$parcel$export8($f7dceffc5ad7768b$exports, "useFocusRing", () => $f7dceffc5ad7768b$export$4e328f61c538687f);
function $f7dceffc5ad7768b$export$4e328f61c538687f(props = {}) {
  let { autoFocus = false, isTextInput, within } = props;
  let state = $6nfFC$useRef({
    isFocused: false,
    isFocusVisible: autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27()
  }).current;
  let [isFocused1, setFocused] = $6nfFC$useState(false);
  let [isFocusVisibleState, setFocusVisible] = $6nfFC$useState(() => state.isFocused && state.isFocusVisible);
  let updateState = () => setFocusVisible(state.isFocused && state.isFocusVisible);
  let onFocusChange = (isFocused) => {
    state.isFocused = isFocused;
    setFocused(isFocused);
    updateState();
  };
  $507fabe10e71c6fb$export$ec71b4b83ac08ec3((isFocusVisible) => {
    state.isFocusVisible = isFocusVisible;
    updateState();
  }, [], {
    isTextInput
  });
  let { focusProps } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6({
    isDisabled: within,
    onFocusChange
  });
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec({
    isDisabled: !within,
    onFocusWithinChange: onFocusChange
  });
  return {
    isFocused: isFocused1,
    isFocusVisible: state.isFocused && isFocusVisibleState,
    focusProps: within ? focusWithinProps : focusProps
  };
}
function $907718708eab68af$export$1a38b4ad7f578e1d(props) {
  let { children, focusClass, focusRingClass } = props;
  let { isFocused, isFocusVisible, focusProps } = $f7dceffc5ad7768b$export$4e328f61c538687f(props);
  let child = $6nfFC$react.Children.only(children);
  return /* @__PURE__ */ $6nfFC$react.cloneElement(child, $3ef42575df84b30b$export$9d1611c77c2fe928(child.props, __spreadProps(__spreadValues({}, focusProps), {
    className: clsx_m_default({
      [focusClass || ""]: isFocused,
      [focusRingClass || ""]: isFocusVisible
    })
  })));
}
var $e6afbd83fe6ebbd2$exports = {};
$parcel$export8($e6afbd83fe6ebbd2$exports, "FocusableProvider", () => $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5);
$parcel$export8($e6afbd83fe6ebbd2$exports, "useFocusable", () => $e6afbd83fe6ebbd2$export$4c014de7c8940b4c);
var $e6afbd83fe6ebbd2$var$FocusableContext = /* @__PURE__ */ $6nfFC$react.createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {
  let context2 = $6nfFC$useContext($e6afbd83fe6ebbd2$var$FocusableContext) || {};
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context2, ref);
  let _a2 = context2, { ref: _ } = _a2, otherProps = __objRest(_a2, ["ref"]);
  return otherProps;
}
function $e6afbd83fe6ebbd2$var$FocusableProvider(props, ref) {
  let _a2 = props, { children } = _a2, otherProps = __objRest(_a2, ["children"]);
  let context2 = __spreadProps(__spreadValues({}, otherProps), {
    ref
  });
  return /* @__PURE__ */ $6nfFC$react.createElement($e6afbd83fe6ebbd2$var$FocusableContext.Provider, {
    value: context2
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 = /* @__PURE__ */ $6nfFC$react.forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider);
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {
  let { focusProps } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props);
  let { keyboardProps } = $46d819fcbaf35654$export$8f71654801c2f7cd(props);
  let interactions = $3ef42575df84b30b$export$9d1611c77c2fe928(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = $6nfFC$useRef(props.autoFocus);
  $6nfFC$useEffect(() => {
    if (autoFocusRef.current && domRef.current)
      domRef.current.focus();
    autoFocusRef.current = false;
  }, []);
  return {
    focusableProps: $3ef42575df84b30b$export$9d1611c77c2fe928(__spreadProps(__spreadValues({}, interactions), {
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }), interactionProps)
  };
}

// node_modules/@react-aria/textfield/dist/module.js
import { useRef as $kOq5K$useRef, useEffect as $kOq5K$useEffect } from "react";
function $parcel$export9(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $2d73ec29415bd339$exports = {};
$parcel$export9($2d73ec29415bd339$exports, "useTextField", () => $2d73ec29415bd339$export$712718f7aec83d5);
function $2d73ec29415bd339$export$712718f7aec83d5(props, ref) {
  let { inputElementType = "input", isDisabled = false, isRequired = false, isReadOnly = false, validationState, type = "text", onChange = () => {
  } } = props;
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, ref);
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = $2baaea4c71418dea$export$294aa081a6c6f55d(props);
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
    labelable: true
  });
  const inputOnlyProps = {
    type,
    pattern: props.pattern
  };
  return {
    labelProps,
    inputProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, inputElementType === "input" && inputOnlyProps, __spreadValues(__spreadValues({
      disabled: isDisabled,
      readOnly: isReadOnly,
      "aria-required": isRequired || void 0,
      "aria-invalid": validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-activedescendant": props["aria-activedescendant"],
      "aria-autocomplete": props["aria-autocomplete"],
      "aria-haspopup": props["aria-haspopup"],
      value: props.value,
      defaultValue: props.value ? void 0 : props.defaultValue,
      onChange: (e2) => onChange(e2.target.value),
      autoComplete: props.autoComplete,
      maxLength: props.maxLength,
      minLength: props.minLength,
      name: props.name,
      placeholder: props.placeholder,
      inputMode: props.inputMode,
      onCopy: props.onCopy,
      onCut: props.onCut,
      onPaste: props.onPaste,
      onCompositionEnd: props.onCompositionEnd,
      onCompositionStart: props.onCompositionStart,
      onCompositionUpdate: props.onCompositionUpdate,
      onSelect: props.onSelect,
      onBeforeInput: props.onBeforeInput,
      onInput: props.onInput
    }, focusableProps), fieldProps)),
    descriptionProps,
    errorMessageProps
  };
}
var $d841c8010a73d545$exports = {};
$parcel$export9($d841c8010a73d545$exports, "useFormattedTextField", () => $d841c8010a73d545$export$4f384c9210e583c3);
function $d841c8010a73d545$var$supportsNativeBeforeInputEvent() {
  return typeof window !== "undefined" && window.InputEvent && typeof InputEvent.prototype.getTargetRanges === "function";
}
function $d841c8010a73d545$export$4f384c9210e583c3(props, state1, inputRef) {
  let stateRef = $kOq5K$useRef(state1);
  stateRef.current = state1;
  $kOq5K$useEffect(() => {
    if (!$d841c8010a73d545$var$supportsNativeBeforeInputEvent())
      return;
    let input = inputRef.current;
    let onBeforeInput = (e2) => {
      let state = stateRef.current;
      let nextValue;
      switch (e2.inputType) {
        case "historyUndo":
        case "historyRedo":
          return;
        case "deleteContent":
        case "deleteByCut":
        case "deleteByDrag":
          nextValue = input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);
          break;
        case "deleteContentForward":
          nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd + 1) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);
          break;
        case "deleteContentBackward":
          nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart - 1) + input.value.slice(input.selectionStart) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);
          break;
        case "deleteSoftLineBackward":
        case "deleteHardLineBackward":
          nextValue = input.value.slice(input.selectionStart);
          break;
        default:
          if (e2.data != null)
            nextValue = input.value.slice(0, input.selectionStart) + e2.data + input.value.slice(input.selectionEnd);
          break;
      }
      if (nextValue == null || !state.validate(nextValue))
        e2.preventDefault();
    };
    input.addEventListener("beforeinput", onBeforeInput, false);
    return () => {
      input.removeEventListener("beforeinput", onBeforeInput, false);
    };
  }, [
    inputRef,
    stateRef
  ]);
  let onBeforeInput1 = !$d841c8010a73d545$var$supportsNativeBeforeInputEvent() ? (e2) => {
    let nextValue = e2.target.value.slice(0, e2.target.selectionStart) + e2.data + e2.target.value.slice(e2.target.selectionEnd);
    if (!state1.validate(nextValue))
      e2.preventDefault();
  } : null;
  let { labelProps, inputProps: textFieldProps, descriptionProps, errorMessageProps } = $2d73ec29415bd339$export$712718f7aec83d5(props, inputRef);
  let compositionStartState = $kOq5K$useRef(null);
  return {
    inputProps: $3ef42575df84b30b$export$9d1611c77c2fe928(textFieldProps, {
      onBeforeInput: onBeforeInput1,
      onCompositionStart() {
        let { value, selectionStart, selectionEnd } = inputRef.current;
        compositionStartState.current = {
          value,
          selectionStart,
          selectionEnd
        };
      },
      onCompositionEnd() {
        if (!state1.validate(inputRef.current.value)) {
          let { value, selectionStart, selectionEnd } = compositionStartState.current;
          inputRef.current.value = value;
          inputRef.current.setSelectionRange(selectionStart, selectionEnd);
          state1.setInputValue(value);
        }
      }
    }),
    labelProps,
    descriptionProps,
    errorMessageProps
  };
}

// src/textinput/TextInput.tsx
import { forwardRef as forwardRef8, useRef as useRef6 } from "react";
import { mergeProps as mergeProps3 } from "react-aria";
import { mergeRefs as mergeRefs4 } from "react-laag";
var iconSizes2 = {
  small: "$2",
  regular: "$3",
  large: "$4"
};
var TextInput = forwardRef8((_a2, forwardedRef) => {
  var _b = _a2, { errorMessage } = _b, props = __objRest(_b, ["errorMessage"]);
  const ref = useRef6(null);
  const { label, labelProps } = props;
  const { descriptionProps, errorMessageProps, inputProps, labelProps: ariaLabelProps } = $2d73ec29415bd339$export$712718f7aec83d5(props, ref);
  const validityProps = useCustomValidity(ref, props);
  const iconSize2 = iconSizes2[props.size];
  const { iconBefore: IconBefore } = props;
  return /* @__PURE__ */ React.createElement(FieldWrapper, {
    css: props == null ? void 0 : props.css
  }, /* @__PURE__ */ React.createElement(FieldLabelAndDescription, {
    label,
    labelProps: mergeProps3(ariaLabelProps, labelProps),
    description: props.description,
    descriptionProps
  }), /* @__PURE__ */ React.createElement(Box, {
    css: { position: "relative", isolation: "isolate", width: "100%" }
  }, typeof IconBefore === "function" ? /* @__PURE__ */ React.createElement(Box, {
    css: {
      display: "flex",
      alignItems: "center",
      pointerEvents: "none",
      color: "$placeholderText",
      left: "calc($5 / 2)",
      top: "50%",
      transform: "translateY(-50%)",
      position: "absolute",
      height: "max-content"
    }
  }, /* @__PURE__ */ React.createElement(IconBefore, {
    size: iconSize2
  })) : IconBefore || null, /* @__PURE__ */ React.createElement(TextInputFactory, __spreadProps(__spreadValues(__spreadValues(__spreadValues({
    ref: mergeRefs4(ref, forwardedRef)
  }, props), validityProps), inputProps), {
    disabled: props.disabled,
    onChange: (e2) => {
      var _a3;
      return (_a3 = props.onChange) == null ? void 0 : _a3.call(props, e2.currentTarget.value, e2);
    },
    iconBefore: !!props.iconBefore,
    iconAfter: !!props.loading
  })), props.loading ? /* @__PURE__ */ React.createElement(Box, {
    css: {
      display: "flex",
      alignItems: "center",
      pointerEvents: "none",
      color: "$placeholderText",
      right: "calc($5 / 2)",
      top: "50%",
      transform: "translateY(-50%)",
      position: "absolute",
      height: "max-content"
    }
  }, /* @__PURE__ */ React.createElement(Spinner, {
    size: iconSize2
  })) : null), /* @__PURE__ */ React.createElement(FieldErrorAndHelpText, {
    errorMessage,
    errorMessageProps,
    invalid: props.invalid,
    helpText: props.helpText,
    helpTextProps: descriptionProps
  }));
});
TextInput.displayName = TextInputFactory.displayName;
TextInput.toString = TextInputFactory.toString;
TextInput.defaultProps = {
  type: "text",
  spellCheck: true,
  disabled: false,
  size: "regular"
};

// src/textinput/TextInputField.tsx
init_react_import();
var TextInputField = TextInput;

// src/image/MetadataEditor.tsx
function MetadataEditor({ metadata = {}, onMetadataChange }) {
  return /* @__PURE__ */ React.createElement(Box, {
    css: { width: "100%", paddingTop: "$5" }
  }, /* @__PURE__ */ React.createElement(VStack, null, /* @__PURE__ */ React.createElement(Heading, {
    size: "subHeadline"
  }, "Add a description (Alt Text)"), /* @__PURE__ */ React.createElement(Paragraph, null, "You can add a description to your photos so they're accessible to more people.", /* @__PURE__ */ React.createElement("br", null), " Good descriptions are concise but present what's in your photos accurately enough to understand their context"), /* @__PURE__ */ React.createElement(TextInput, {
    label: "Image Description",
    placeholder: "Describe this photo...",
    value: metadata == null ? void 0 : metadata.alt,
    onChange: (value) => onMetadataChange(__spreadProps(__spreadValues({}, metadata), { alt: value })),
    className: darkTheme.className,
    css: { maxWidth: "400px" }
  })));
}

// src/image/ImageUpload.tsx
var DEFAULT_FOCUS_POSITION = { x: 0, y: 0 };
var icons = {
  ["IDLE" /* IDLE */]: ImageAddIcon,
  ["ACCEPT" /* ACCEPT */]: AddSmallIcon,
  ["ACTIVE" /* ACTIVE */]: AddSmallIcon,
  ["REJECT" /* REJECT */]: RemoveSmallIcon
};
function ImageUpload({
  maxSize = 52428800,
  noDrag = false,
  disabled,
  accept,
  iconSize: iconSize2 = "clamp(15px, 50%, 65px)",
  initialFiles = [],
  onDrop = noop3,
  onChange = noop3,
  focusPosition = DEFAULT_FOCUS_POSITION,
  onFocusPositionChange = () => void 0,
  metadata,
  onMetadataChange,
  containerProps = {},
  css: css2,
  allowEditing,
  allowfocusEditing,
  allowMetadataEditing
}) {
  const [internalFocusPosition, setInternalFocusPosition] = useState6();
  const { formatMessage } = useIntl2();
  const sizeLimit = useMemo4(() => formatBytes(maxSize, 1), [maxSize]);
  const acceptType = useMemo4(() => {
    if (Array.isArray(accept))
      return;
    switch (true) {
      case /image/gi.test(accept):
        return "image";
      default:
        return void 0;
    }
  }, [accept]);
  useEffect7(() => {
    if (focusPosition) {
      setInternalFocusPosition(focusPosition);
    }
  }, []);
  const [state, send] = useMachine(fileUploadMachine, {
    context: { files: initialFiles }
  });
  const [editorOpen, setEditorOpen] = useState6(false);
  const percentagePosition = useMemo4(() => internalFocusPosition ? convertFocusCoordinatesToPosition2D(internalFocusPosition) : DEFAULT_FOCUS_POSITION, [internalFocusPosition]);
  const { context: context2 } = state;
  const {
    getRootProps,
    getInputProps,
    inputRef,
    isDragActive,
    isDragAccept,
    isDragReject,
    fileRejections,
    isFileDialogActive
  } = useDropzone({
    onFileDialogCancel: () => {
      send({ type: "CANCEL_DIALOG" });
    },
    maxSize,
    noDrag,
    multiple: false,
    preventDropOnDocument: true,
    onDropAccepted: (acceptedFiles) => {
      onChange(acceptedFiles);
      send({
        type: "ADD_FILE",
        files: acceptedFiles.map((file) => Object.assign(file, { preview: URL.createObjectURL(file) }))
      });
    },
    onDropRejected: (rejections) => {
      var _a2, _b;
      send({
        type: "REJECT",
        message: formatMessage({
          id: `fileupload.error.${(_b = (_a2 = rejections == null ? void 0 : rejections[0]) == null ? void 0 : _a2.errors) == null ? void 0 : _b[0].code}`,
          defaultMessage: "Invalid file"
        }, { sizeLimit, acceptType })
      });
    },
    onDragLeave: () => send("RESET"),
    onDragOver: () => {
      var _a2, _b;
      switch (true) {
        case isDragAccept:
          send("HOVER", { status: "ACCEPT" /* ACCEPT */ });
          break;
        case isDragReject:
          send("HOVER", {
            status: "REJECT" /* REJECT */,
            message: formatMessage({
              id: `fileupload.error.${(_b = (_a2 = fileRejections == null ? void 0 : fileRejections[0]) == null ? void 0 : _a2.errors) == null ? void 0 : _b[0].code}`,
              defaultMessage: "Invalid file"
            }, { sizeLimit, acceptType })
          });
          break;
        case isDragActive:
          send("HOVER", { status: "ACTIVE" /* ACTIVE */ });
          break;
      }
    },
    onDrop,
    disabled,
    accept
  });
  const Icon3 = icons[context2.hoverStatus];
  useEffect7(() => {
    if (isFileDialogActive)
      send({ type: "OPEN_DIALOG" });
  }, [isFileDialogActive]);
  useEffect7(() => () => {
    context2.files.forEach((file) => URL.revokeObjectURL(file.preview));
  }, [context2.files]);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(AnimateSharedLayout, null, /* @__PURE__ */ React.createElement(ImageUploadRoot, __spreadProps(__spreadValues(__spreadValues({}, getRootProps({
    dragState: context2.hoverStatus,
    disabled,
    hasFiles: context2.files.length > 0
  })), containerProps), {
    css: css2
  }), /* @__PURE__ */ React.createElement("input", __spreadValues({}, getInputProps())), /* @__PURE__ */ React.createElement(AnimatePresence3, {
    presenceAffectsLayout: true,
    exitBeforeEnter: true
  }, context2.files.length > 0 ? context2.files.map((file) => /* @__PURE__ */ React.createElement(HStack, {
    css: { width: "100%", justifyContent: "space-between" },
    key: file.name + file.size,
    className: darkTheme.className
  }, /* @__PURE__ */ React.createElement(VStack, {
    space: "small",
    as: motion4.aside,
    initial: { opacity: 0, scale: 0.9 },
    animate: { opacity: 1, scale: 1 },
    transition: { type: "spring", bounce: 0.4 },
    css: {
      position: "absolute",
      top: "2px",
      left: "2px",
      size: "calc(100% - 3px)"
    }
  }, /* @__PURE__ */ React.createElement(Box, {
    as: "img",
    className: "preview",
    src: file.preview,
    css: {
      objectPosition: percentagePosition ? `${clamp(0, percentagePosition.x, 1) * 100}% ${clamp(0, percentagePosition.y, 1) * 100}%` : ""
    }
  })), /* @__PURE__ */ React.createElement(Button, {
    onClick: () => {
      const fileName = file.name;
      const dataTransfer = new DataTransfer();
      const files = Array.from(inputRef.current.files);
      for (const file2 of files) {
        file2.name !== fileName && dataTransfer.items.add(file2);
      }
      inputRef.current.files = dataTransfer.files;
      const newFiles = Array.from(dataTransfer.files);
      onChange(newFiles);
      send({ type: "REMOVE_FILE", files: newFiles });
    },
    icon: CloseIcon,
    appearance: "overlay",
    size: "small",
    css: {
      top: "$2",
      right: "12px",
      position: "absolute"
    }
  }), allowEditing && (allowfocusEditing || allowMetadataEditing) && /* @__PURE__ */ React.createElement(Box, {
    css: {
      bottom: "$3",
      left: "50%",
      transform: "translateX(calc(-50% + 2px))",
      position: "absolute",
      transitionDelay: "0.2s",
      transition: ""
    }
  }, /* @__PURE__ */ React.createElement(Button, {
    onClick: () => setEditorOpen(true),
    title: "Edit Image",
    icon: PencilIcon,
    appearance: "overlay",
    size: "small",
    round: true
  })))) : /* @__PURE__ */ React.createElement(VStack, {
    as: motion4.div,
    align: "center",
    justify: "center"
  }, /* @__PURE__ */ React.createElement(Icon3, {
    as: motion4.svg,
    layout: true,
    layoutId: "icon",
    initial: false,
    animate: { opacity: 1 },
    exit: { height: 0, opacity: 0 },
    size: iconSize2
  }), state.value === "rejected" && /* @__PURE__ */ React.createElement(VStack, {
    align: "center",
    as: motion4.div,
    layout: true,
    layoutId: "text",
    animate: state.matches("idle") || context2.message ? { opacity: 1, y: 0 } : { opacity: 0, y: "-10%" },
    exit: { opacity: 0, y: "-10%" }
  }, /* @__PURE__ */ React.createElement(FileUploadDescription, {
    state,
    maxSize,
    noDrag
  })))))), allowEditing && (allowfocusEditing || allowMetadataEditing) && /* @__PURE__ */ React.createElement(Overlay, {
    onShow: () => setEditorOpen(true),
    onHide: () => setEditorOpen(false),
    shouldCloseOnClick: false,
    shouldCloseOnEscapePress: true,
    isShown: editorOpen,
    preventBodyScroll: true,
    containerCSS: {
      "&::before": { backdropFilter: "blur(5px)" }
    }
  }, (close) => {
    var _a2;
    return /* @__PURE__ */ React.createElement(Box, {
      css: {
        color: "$white",
        overflowY: "scroll",
        size: "100%",
        position: "relative",
        maxWidth: "1100px",
        marginInline: "auto"
      }
    }, /* @__PURE__ */ React.createElement(VStack, {
      align: "center",
      justify: "center",
      space: "extraLarge",
      css: { padding: "$20 $10" }
    }, /* @__PURE__ */ React.createElement(FocusEditor, {
      file: (_a2 = context2 == null ? void 0 : context2.files) == null ? void 0 : _a2[0],
      onChange: setInternalFocusPosition,
      focusPosition: internalFocusPosition
    }), /* @__PURE__ */ React.createElement(MetadataEditor, {
      onMetadataChange,
      metadata
    }), /* @__PURE__ */ React.createElement(Box, {
      css: { width: "100%" }
    }, /* @__PURE__ */ React.createElement(HStack, {
      css: { width: "100%" },
      justify: "end"
    }, /* @__PURE__ */ React.createElement(Button, {
      color: "secondary",
      onPress: close
    }, "Cancel"), /* @__PURE__ */ React.createElement(Button, {
      color: "primary",
      onPress: () => {
        onFocusPositionChange == null ? void 0 : onFocusPositionChange(convertFocusCoordinatesToPosition2D(internalFocusPosition));
        close();
      }
    }, "Apply")))));
  }));
}
function FileUploadDescription({ state }) {
  switch (state.value) {
    case "rejected":
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Text, null, "Invalid file"), /* @__PURE__ */ React.createElement(Text, {
        size: "caption2"
      }, state.context.message));
    default:
      return null;
  }
}

// src/avatar/Avatar.tsx
function getColorFromHash(hashString) {
  const str = String(hashString);
  let hash = 0;
  let char;
  if (str.trim().length === 0)
    return hash;
  for (let i = 0; i < str.length; i++) {
    char = str.charCodeAt(i);
    hash = (hash << 5) - hash + char;
    hash &= hash;
  }
  return Math.abs(hash);
}
function getIntials(name, { fallback = "?", initials = 1 } = {}) {
  if (!name || typeof name !== "string")
    return fallback;
  return name.replace(/\s+/, " ").split(" ").slice(0, initials).map((v) => v && v[0].toUpperCase()).join("");
}
var AvatarFactory = styled("div", {
  borderRadius: "$round",
  justifyContent: "center",
  alignItems: "center",
  flexShrink: 0,
  display: "inline-flex",
  overflow: "hidden",
  userSelect: "none"
});
var avatarColors = ["steel", "jade", "yellow", "coral", "red", "purple"];
function Avatar(_a2) {
  var _b = _a2, { name, color, hash, src, size = 10, initials = 2 } = _b, props = __objRest(_b, ["name", "color", "hash", "src", "size", "initials"]);
  var _a3;
  const [imageFailed, setImageFailed] = useState7(false);
  const imageUnavailable = !src || imageFailed;
  const initialsText = getIntials(name, { initials });
  const hashValue = getColorFromHash(hash || name);
  const hashColor = color ? `$${color}` : (_a3 = theme.colors[avatarColors[hashValue % avatarColors.length]]) == null ? void 0 : _a3.value;
  size = Number(size);
  return /* @__PURE__ */ React.createElement(AvatarFactory, __spreadValues({
    title: name,
    css: { backgroundColor: hashColor != null ? hashColor : "$gray3", size: `${size * 5}px`, maxSize: "500px", minSize: "25px" }
  }, props), imageUnavailable ? /* @__PURE__ */ React.createElement(Box, {
    as: "span",
    "aria-hidden": "true",
    role: "presentation",
    css: {
      color: "$white",
      fontWeight: size <= 15 ? "$medium" : "",
      capsize: {
        fontSize: size * 5 / 3,
        lineGap: 0
      }
    }
  }, initialsText) : /* @__PURE__ */ React.createElement(Image, {
    alt: "",
    css: { objectFit: "cover", objectPosition: "center", width: "100%", height: "100%" },
    src,
    onError: () => setImageFailed(true)
  }));
}

// src/avatar/AvatarEditor.tsx
init_react_import();
import { motion as motion6 } from "framer-motion";
import { floor, noop as noop4 } from "lodash-es";
import { useEffect as useEffect8, useRef as useRef7, useState as useState9 } from "react";
import ImageEditor from "react-avatar-editor";
import { useDropzone as useDropzone2 } from "react-dropzone";
import { useTimeoutFn as useTimeoutFn2 } from "react-use";

// src/toast/Toaster.tsx
init_react_import();
import { AnimatePresence as AnimatePresence4, motion as motion5 } from "framer-motion";
import { createContext as createContext4, useContext as useContext4, useState as useState8 } from "react";
import { OverlayContainer as OverlayContainer3 } from "react-aria";

// src/toast/Toast.tsx
init_react_import();
import { useTimeoutFn } from "react-use";

// src/theme/featureFlags.ts
init_react_import();
import { createContext as createContext3, useContext as useContext3 } from "react";
var DEFAULT_FEATURE_FLAGS = {
  ["Calendar" /* Calendar */]: false,
  ["Select" /* Select */]: false,
  ["MultiSelect" /* MultiSelect */]: false,
  ["Switch" /* Switch */]: false,
  ["DisclosureGroup" /* DisclosureGroup */]: false,
  ["TranslucentToast" /* TranslucentToast */]: false
};
var FeatureFlagContext = createContext3(DEFAULT_FEATURE_FLAGS);
var FeatureFlagProvider = FeatureFlagContext.Provider;
function useFeatureFlag(flag) {
  const flags = useContext3(FeatureFlagContext);
  return flags[flag];
}

// src/toast/Toast.tsx
var ToastFactory = styled(Alert, {
  boxShadow: "$2",
  borderRadius: "$2",
  pointerEvents: "all",
  flexShrink: 0
});
function Toast(props) {
  var _a2;
  const translucentToast = useFeatureFlag("TranslucentToast" /* TranslucentToast */);
  const toasterDuration = (_a2 = props.duration) != null ? _a2 : 5e3;
  const [_, __, cancel2] = useTimeoutFn(() => {
    if (toasterDuration === "forever")
      return;
    props.onRemove();
  }, Number(toasterDuration));
  if (toasterDuration === "forever") {
    cancel2();
  }
  return /* @__PURE__ */ React.createElement(ToastFactory, __spreadProps(__spreadValues({}, props), {
    appearance: translucentToast ? "toast" : "card"
  }));
}
Toast.defaultProps = {
  isRemoveable: true,
  icon: "none"
};

// src/toast/Toaster.tsx
var ToasterContext = createContext4(null);
ToasterContext.displayName = "ToasterContext";
function Toaster({ children, position = "left", offset = "$2", defaultDuration = 5e3 }) {
  const [toasts, setToasts] = useState8([]);
  let toastOffset = (() => {
    if (typeof offset === "string") {
      return { top: offset, side: offset };
    } else {
      return { top: offset.top || "$2", side: offset.side || "$2" };
    }
  })();
  const add = (toast) => {
    if (toast.id) {
      if (toasts.find((t2) => t2.id === toast.id)) {
        return;
      }
    } else {
      toast.id = +new Date();
    }
    toast.isShown = true;
    setToasts([...toasts, toast]);
  };
  const remove2 = (id) => {
    setToasts(toasts.filter((t2) => t2.id !== id));
  };
  const close = (id) => {
    setToasts(toasts.map((toast) => toast.id === id ? __spreadProps(__spreadValues({}, toast), { isShown: false }) : toast));
  };
  const closeAll = () => {
    setToasts([]);
  };
  const positionProps = {
    left: { left: toastOffset.side, alignItems: "flex-start" },
    right: { right: toastOffset.side, alignItems: "flex-end" },
    center: { transform: "translateX(-50%)", left: "50%", alignItems: "center" }
  };
  const motionProps = {
    left: {
      exit: { x: "-100%", height: 0, opacity: 0 },
      initial: { x: "-100%" },
      animate: { x: "0%" }
    },
    right: {
      exit: { x: "100%", height: 0, opacity: 0 },
      initial: { x: "100%" },
      animate: { x: "0%" }
    },
    center: {
      exit: { scale: 0.75, height: 0, opacity: 0 },
      initial: { y: "-100%" },
      animate: { y: "0%" }
    }
  };
  const onRemove = (id) => () => {
    close(id);
    remove2(id);
  };
  return /* @__PURE__ */ React.createElement(ToasterContext.Provider, {
    value: { add, remove: remove2, closeAll, toasts }
  }, children, /* @__PURE__ */ React.createElement(StackingProvider, {
    value: 30 /* TOASTER */
  }, (zIndex) => /* @__PURE__ */ React.createElement(OverlayContainer3, null, /* @__PURE__ */ React.createElement(Box, {
    css: __spreadValues({
      position: "fixed",
      display: "flex",
      flexDirection: "column",
      height: 0,
      top: toastOffset.top,
      zIndex
    }, positionProps[position])
  }, /* @__PURE__ */ React.createElement(AnimatePresence4, {
    initial: false
  }, toasts.map((_a2) => {
    var _b = _a2, { id, description, isShown } = _b, toast = __objRest(_b, ["id", "description", "isShown"]);
    return isShown ? /* @__PURE__ */ React.createElement(motion5.div, __spreadValues({
      key: id,
      layout: true,
      transition: {
        type: "spring",
        damping: 20,
        stiffness: 250
      }
    }, motionProps[position]), /* @__PURE__ */ React.createElement(Toast, __spreadProps(__spreadValues({
      css: { marginBottom: "$1" },
      duration: defaultDuration
    }, toast), {
      onRemove: onRemove(id)
    }), /* @__PURE__ */ React.createElement(Text, {
      size: "caption1",
      css: { color: "$secondary", maxWidth: "300px", capsize: { fontSize: 14, lineGap: 5 } }
    }, description))) : null;
  }))))));
}
var useToaster = () => useContext4(ToasterContext);

// src/avatar/AvatarEditor.tsx
var AVATAR_EDITOR_SIZE = 185;
var iconSize = (avatarSize) => {
  if (avatarSize >= 50)
    return "large";
  if (avatarSize >= 30)
    return "regular";
  return "small";
};
function AvatarEditor({
  accept = "image/*",
  disabled,
  maxSize = 1e7,
  config: config5,
  image = {},
  allowReposition = true,
  avatarProps,
  size = 20,
  loading,
  onSave = noop4,
  onRemove = noop4,
  onUpload = noop4,
  onPositionChange = noop4,
  position = { x: 0.5, y: 0.5 }
}) {
  const [localFile, setLocalFile] = useState9();
  const [preview, setPreview] = useState9(null);
  const [fullFile, setFullFile] = useState9();
  const imageRef = useRef7(null);
  const toaster = useToaster();
  const [error, setError] = useState9(null);
  const [_, setLoading] = useState9(false);
  const [clearError] = useTimeoutFn2(() => setError(null), 3e3);
  const { acceptedFiles, getInputProps, getRootProps, open } = useDropzone2({
    accept,
    disabled,
    maxSize,
    multiple: false,
    noDrag: !!localFile,
    onDropRejected: (files) => {
      var _a2, _b;
      if (((_a2 = files == null ? void 0 : files[0]) == null ? void 0 : _a2.file.size) >= maxSize) {
        toaster.add({ title: "Image too large", intent: "danger", description: "Please use smaller image" });
      } else if (!/image/gi.test((_b = files == null ? void 0 : files[0]) == null ? void 0 : _b.file.type)) {
        toaster.add({ title: "Only images are accepted", intent: "danger", description: "Please upload an image" });
      } else {
        toaster.add({
          title: "Something went wrong.",
          intent: "danger",
          description: "We're looking into this issue. Sorry for the inconvenience"
        });
      }
    },
    onDropAccepted: async (files) => {
      setLocalFile(files[0]);
      setLoading(true);
      await (config5 == null ? void 0 : config5.upload(files[0]));
      onUpload();
      setLoading(false);
    }
  });
  useEffect8(() => {
    if (image == null ? void 0 : image.url) {
      const xhr = new XMLHttpRequest();
      xhr.open("GET", image == null ? void 0 : image.url);
      xhr.responseType = "blob";
      xhr.onreadystatechange = (_2) => {
        if (xhr.readyState !== 4) {
          return;
        }
        if (xhr.status >= 200 && xhr.status < 300) {
          const blob = xhr.response;
          setLocalFile(new File([xhr.response], blob.type));
          return;
        }
        setError("Error loading image");
        setLocalFile(null);
      };
      xhr.send();
    }
  }, [image == null ? void 0 : image.url]);
  useEffect8(() => {
    if (image == null ? void 0 : image.full) {
      const xhr = new XMLHttpRequest();
      xhr.open("GET", image == null ? void 0 : image.full);
      xhr.responseType = "blob";
      xhr.onreadystatechange = (_2) => {
        if (xhr.readyState !== 4) {
          return;
        }
        if (xhr.status >= 200 && xhr.status < 300) {
          const blob = xhr.response;
          setFullFile(new File([xhr.response], blob.type));
          return;
        }
        setError("Error loading full image");
        setFullFile(null);
      };
      xhr.send();
    }
  }, [image == null ? void 0 : image.full]);
  useEffect8(() => {
    clearError();
  }, [error]);
  return /* @__PURE__ */ React.createElement(Box, __spreadProps(__spreadValues({}, getRootProps()), {
    css: {
      size: `${size * 5}px`,
      borderRadius: "$round",
      outline: "none",
      position: "relative"
    }
  }), /* @__PURE__ */ React.createElement(Popover, {
    closeOnClickOutside: false,
    closeOnLeaveViewport: false,
    automaticPlacement: false,
    triggerOffset: 0,
    containerOffset: 0,
    placement: "center",
    elevation: "4",
    className: darkTheme.className,
    css: { backgroundColor: "$gray6" },
    content: ({ close }) => {
      var _a2;
      return /* @__PURE__ */ React.createElement(Box, {
        css: { padding: "$4" }
      }, /* @__PURE__ */ React.createElement(VStack, null, localFile ? /* @__PURE__ */ React.createElement(Box, {
        css: {
          size: `${AVATAR_EDITOR_SIZE}px`,
          borderRadius: "$1",
          overflow: "hidden",
          position: "relative",
          "&:hover .drag-info": {
            opacity: 0
          }
        }
      }, /* @__PURE__ */ React.createElement(ImageEditor, {
        borderRadius: 999999,
        border: 0,
        color: [0, 0, 0, 0.75],
        width: AVATAR_EDITOR_SIZE,
        height: AVATAR_EDITOR_SIZE,
        image: (_a2 = acceptedFiles == null ? void 0 : acceptedFiles[0]) != null ? _a2 : fullFile,
        onImageReady: () => {
          imageRef.current.setState((prevState) => __spreadProps(__spreadValues({}, prevState), {
            image: __spreadValues(__spreadValues({}, prevState.image), position)
          }));
        },
        ref: imageRef,
        style: !allowReposition && { cursor: "default" },
        onPositionChange: ({ x, y }) => onPositionChange({ y: floor(y, 2), x: floor(x, 2) })
      }), /* @__PURE__ */ React.createElement(Box, {
        className: "drag-info",
        css: {
          transition: "300ms",
          position: "absolute",
          bottom: "$1",
          left: "50%",
          transform: "translateX(-50%)",
          pointerEvents: "none"
        }
      }, /* @__PURE__ */ React.createElement(Button, {
        as: "div",
        appearance: "overlay",
        size: "small",
        round: true,
        css: { whiteSpace: "pre" }
      }, "Drag to position"))) : /* @__PURE__ */ React.createElement(Box, {
        css: {
          size: `${AVATAR_EDITOR_SIZE}px`,
          backgroundColor: "$gray4",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          overflow: "hidden",
          borderRadius: "$round"
        }
      }, /* @__PURE__ */ React.createElement(motion6.div, {
        key: "File_input_prompt",
        initial: {
          opacity: 0,
          scale: 0.9
        },
        animate: { opacity: 1, scale: 1 },
        transition: { type: "spring", damping: 10 },
        onClick: open
      }, /* @__PURE__ */ React.createElement("input", __spreadValues({}, getInputProps())), /* @__PURE__ */ React.createElement(VStack, {
        space: "small",
        align: "center",
        justify: "center",
        css: { padding: "$3", textAlign: "center" }
      }, /* @__PURE__ */ React.createElement(Text, {
        css: { color: "$label", capsize: { fontSize: 16, lineGap: 7 } }
      }, "Drag & Drop an image or"), /* @__PURE__ */ React.createElement(Button, {
        type: "button",
        css: { marginLeft: "$1" },
        color: "secondary",
        size: "small",
        onPress: open
      }, "Browse")))), /* @__PURE__ */ React.createElement(Button, {
        icon: CloseIcon,
        css: { position: "absolute", top: "0", right: "0", borderRadius: "$1" },
        appearance: "overlay",
        onPress: close
      }), /* @__PURE__ */ React.createElement(HStack, {
        align: "center",
        justify: "end"
      }, /* @__PURE__ */ React.createElement(Button, {
        type: "button",
        size: "small",
        iconBefore: TrashIcon,
        intent: "danger",
        onPress: () => {
          setLocalFile(null);
          setPreview(null);
          onRemove(image == null ? void 0 : image.id);
        }
      }, "Remove"), /* @__PURE__ */ React.createElement(Button, {
        type: "button",
        size: "small",
        iconBefore: FloppyDiskIcon,
        onPress: async () => {
          var _a3;
          if (!!((_a3 = imageRef.current) == null ? void 0 : _a3.getImage)) {
            const canvas = imageRef.current.getImageScaledToCanvas().toDataURL();
            const previewURL = await fetch(canvas).then((res) => res.blob()).then((blob) => window.URL.createObjectURL(blob));
            setPreview(previewURL);
            onSave({ preview: previewURL, position, file: localFile });
          }
          close();
        }
      }, "Save"))));
    }
  }, ({ setOpen, triggerProps }) => /* @__PURE__ */ React.createElement(Box, __spreadValues({}, triggerProps), /* @__PURE__ */ React.createElement(Box, {
    css: { position: "absolute", bottom: "0", right: size * 5 / 16 }
  }, error ? /* @__PURE__ */ React.createElement(Button, {
    icon: DisableIcon,
    round: true,
    "aria-label": error,
    intent: "danger",
    size: iconSize(size)
  }) : loading ? /* @__PURE__ */ React.createElement(Button, {
    type: "button",
    icon: Spinner,
    loading: true,
    round: true,
    "aria-label": "Loading",
    size: iconSize(size)
  }) : /* @__PURE__ */ React.createElement(Button, {
    type: "button",
    icon: PencilIcon,
    round: true,
    "aria-label": "Edit Avatar",
    onPress: () => setOpen(true),
    size: iconSize(size)
  })), /* @__PURE__ */ React.createElement(Avatar, {
    key: preview,
    name: avatarProps == null ? void 0 : avatarProps.name,
    src: preview != null ? preview : image == null ? void 0 : image.url,
    size
  }))));
}

// src/checkbox/Checkbox.tsx
init_react_import();
import { motion as motion7, useReducedMotion } from "framer-motion";
import { forwardRef as forwardRef9, useRef as useRef8 } from "react";
import { useCheckbox, useFocusRing as useFocusRing2, usePress, VisuallyHidden as VisuallyHidden2 } from "react-aria";
import { mergeRefs as mergeRefs5 } from "react-laag";
import { useToggleState } from "react-stately";
var CheckboxWrapper = styled("svg", {
  $$size: "24px",
  $$strokeWidth: "2px",
  WebkitFontSmoothing: "antialiased",
  textDecoration: "none",
  border: "none",
  outline: "none",
  size: "calc($$size + calc($$strokeWidth * 4))",
  transition: "$fast",
  cursor: "pointer",
  variants: {
    disabled: {
      true: {
        $$fill: "$colors$gray5",
        "&, rect, circle": {
          cursor: "not-allowed"
        },
        circle: {
          fill: "$colors$gray3"
        }
      }
    }
  }
});
var CheckboxBackground = styled("rect", {
  size: "$$size",
  transition: "$fast",
  fill: "none",
  strokeWidth: "$$strokeWidth",
  variants: {
    isSelected: {
      true: {
        stroke: "$checkbox",
        fill: "$checkbox"
      },
      false: {
        fill: "none",
        stroke: "$gray3",
        "&:hover": {
          fill: "$gray5"
        },
        "&:active": {
          fill: "$gray2"
        }
      }
    },
    focused: {
      true: {
        stroke: "$checkbox"
      },
      false: {}
    },
    disabled: {
      true: {
        stroke: "$gray4",
        fill: "$gray5",
        "&:active": {
          fill: "$gray5"
        }
      }
    }
  },
  compoundVariants: [
    {
      isSelected: true,
      focused: true,
      css: {
        stroke: "$checkbox"
      }
    }
  ]
});
var CheckboxOutline = styled(motion7.rect, {
  transition: "$fast",
  fill: "none",
  stroke: "$checkbox",
  size: "calc($$size + 5px)",
  strokeWidth: "$$strokeWidth"
});
var CheckboxLabel = styled("label", {
  $$checkboxSize: "$sizes$6",
  display: "flex",
  alignItems: "center",
  cursor: "pointer",
  position: "relative",
  userSelect: "none",
  variants: {
    labelOffset: {
      true: {
        paddingTop: "$3"
      }
    },
    appearance: {
      default: {
        gap: "$2"
      },
      outline: {
        transition: "$fast",
        padding: "$2 $3",
        boxShadow: "inset 0 0 0 1px $colors$muted",
        borderRadius: "$1",
        width: "100%",
        justifyContent: "space-between",
        "&::after": {
          content: '""',
          size: "$$size"
        }
      }
    },
    isSelected: {
      true: {},
      false: {}
    }
  },
  compoundVariants: [
    {
      isSelected: true,
      appearance: "outline",
      css: {
        boxShadow: "inset 0 0 0 2px $colors$checkbox",
        span: { color: "$checkbox" }
      }
    }
  ],
  defaultVariants: {
    appearance: "default"
  }
});
var CheckboxCheck = styled(motion7.path, {
  transformOrigin: "50% 50%",
  transform: "translate(calc(-50% + 9.5px), calc(-50% + 9.5px)) scale(0.6)",
  strokeLinecap: "round",
  strokeLinejoin: "round",
  fill: "none",
  stroke: "$onPrimary",
  strokeWidth: "4px"
});
var checkVariants = {
  hidden: {
    pathLength: 0,
    opacity: 0
  },
  visible: {
    pathLength: 1,
    opacity: 1
  }
};
var Checkbox = forwardRef9((_a2, forwardedRef) => {
  var _b = _a2, { labelOffset, css: css2, children, appearance = "default", reducedMotion = false } = _b, props = __objRest(_b, ["labelOffset", "css", "children", "appearance", "reducedMotion"]);
  const ref = useRef8();
  const shouldReduceMotion = reducedMotion || useReducedMotion();
  const aliasedProps = {
    isSelected: props.checked,
    defaultSelected: props.defaultChecked,
    isIndeterminate: props.indeterminate,
    isDisabled: props.disabled,
    isRequired: props.required
  };
  const state = useToggleState(__spreadValues(__spreadValues({}, props), aliasedProps));
  const { inputProps } = useCheckbox(__spreadProps(__spreadValues(__spreadValues({}, props), aliasedProps), { "aria-label": props == null ? void 0 : props.label, children }), state, ref);
  const { isFocusVisible, isFocused, focusProps } = useFocusRing2({ within: true });
  const { pressProps } = usePress({ isDisabled: props.isDisabled });
  return /* @__PURE__ */ React.createElement(CheckboxLabel, {
    css: css2,
    labelOffset,
    appearance,
    isSelected: state.isSelected
  }, /* @__PURE__ */ React.createElement(VisuallyHidden2, null, /* @__PURE__ */ React.createElement("input", __spreadProps(__spreadValues(__spreadValues({}, inputProps), focusProps), {
    ref: mergeRefs5(ref, forwardedRef)
  }))), /* @__PURE__ */ React.createElement(CheckboxWrapper, __spreadValues({
    "aria-hidden": "true",
    disabled: inputProps.disabled
  }, pressProps), /* @__PURE__ */ React.createElement(CheckboxBackground, {
    rx: 3,
    x: 4,
    y: 4,
    isSelected: state.isSelected,
    disabled: inputProps.disabled,
    focused: isFocusVisible || isFocused
  }), /* @__PURE__ */ React.createElement(CheckboxCheck, {
    variants: checkVariants,
    initial: false,
    animate: state.isSelected ? "visible" : "hidden",
    d: props.indeterminate ? "M14 27l25.5 0" : "M14.1 27.2l7.1 7.2 16.7-16.8",
    transition: {
      pathLength: { type: "spring", duration: shouldReduceMotion ? 0 : 0.4, bounce: 0 },
      opacity: { duration: shouldReduceMotion ? 0 : 0.01 }
    }
  }), (isFocusVisible || isFocused) && state.isSelected && /* @__PURE__ */ React.createElement(CheckboxOutline, {
    rx: 5,
    x: 1.5,
    y: 1.5
  })), /* @__PURE__ */ React.createElement(Label, {
    as: "span",
    size: "regular",
    disabled: props.disabled
  }, props.label || children));
});
Checkbox.displayName = "Checkbox";

// src/collections/index.ts
init_react_import();
import React3 from "react";
import { Item, Section } from "react-stately";

// src/collections/ActionItem.ts
init_react_import();
import React2 from "react";
function ActionItem(_) {
  return null;
}
ActionItem.getCollectionNode = function* getCollectionNode(props, context2) {
  let { childItems, title, children } = props;
  let rendered = props.title || props.children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"] || "";
  if (!textValue && !(context2 == null ? void 0 : context2.suppressTextValueWarning)) {
    console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.");
  }
  yield {
    type: "item",
    props: __spreadProps(__spreadValues({}, props), { __hasAction: true }),
    rendered,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: hasChildItems(props),
    *childNodes() {
      if (childItems) {
        for (let child of childItems) {
          yield {
            type: "item",
            subtype: "action",
            value: child
          };
        }
      } else if (title) {
        let items = [];
        React2.Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
function hasChildItems(props) {
  if (props.hasChildItems != null) {
    return props.hasChildItems;
  }
  if (props.childItems) {
    return true;
  }
  if (props.title && React2.Children.count(props.children) > 0) {
    return true;
  }
  return false;
}
var _ActionItem = ActionItem;

// src/collections/index.ts
var _Item = Item;
var _Section = Section;
_Section.getCollectionNode = function* getCollectionNode2(props) {
  let _a2 = props, { children, title, items } = _a2, rest = __objRest(_a2, ["children", "title", "items"]);
  yield {
    type: "section",
    props: rest,
    hasChildNodes: true,
    rendered: title,
    "aria-label": props["aria-label"],
    *childNodes() {
      if (typeof children === "function") {
        if (!items) {
          throw new Error("props.children was a function but props.items is missing");
        }
        for (let item of items) {
          yield {
            type: "item",
            value: item,
            renderer: children
          };
        }
      } else {
        let items2 = [];
        React3.Children.forEach(children, (child) => {
          items2.push({
            type: "item",
            element: child
          });
        });
        yield* items2;
      }
    }
  };
};
var __Section = _Section;

// src/combobox/index.ts
init_react_import();

// src/combobox/ComboBox.tsx
init_react_import();
import { pick as pick2 } from "lodash-es";
import { useRef as useRef14 } from "react";
import { mergeProps as mergeProps8, OverlayContainer as OverlayContainer5, useComboBox, useFilter, useOverlayPosition as useOverlayPosition2 } from "react-aria";
import { useComboBoxState } from "react-stately";

// src/listbox/index.ts
init_react_import();

// src/listbox/ListBox.tsx
init_react_import();
import { useRef as useRef11 } from "react";
import { mergeProps as mergeProps5, useListBox } from "react-aria";
import { useListState } from "react-stately";

// src/listbox/ListAction.tsx
init_react_import();
import { useRef as useRef9 } from "react";
import { useButton as useButton3 } from "react-aria";
var OptionFactory = styled("li", {
  padding: "$2",
  outline: "none",
  cursor: "pointer",
  userSelect: "none",
  transition: "background-color $fast",
  width: "100%",
  display: "flex",
  placeContent: "center",
  flexDirection: "column",
  gap: "$1",
  variants: {
    sticky: {
      bottom: {
        backgroundColor: "hsl($hsl_background / 0.85)",
        backdropFilter: "blur(20px) saturate(180%)",
        position: "sticky",
        bottom: 0,
        borderTop: "1px solid $gray4"
      }
    },
    size: {
      small: {
        padding: "$1 $2",
        height: "$controlHeightSmall"
      },
      regular: {
        padding: "$2 $3",
        height: "$controlHeightRegular"
      },
      large: {
        padding: "$3 $4",
        height: "$controlHeightLarge"
      }
    },
    isFocusVisible: {
      true: {
        backgroundColor: "$gray4"
      }
    },
    isFocused: {
      true: { backgroundColor: "$gray4" }
    },
    isSelected: {
      true: {
        backgroundColor: "$primary",
        "&, span": {
          color: "$onPrimary"
        },
        "@supports (hsl(from $primary h s calc(l - 10%)))": {
          "&:hover": {
            backgroundColor: "hsl(from $primary h s calc(l - 10%))"
          }
        }
      },
      false: {
        backgroundColor: "transparent",
        "&:hover": {
          backgroundColor: "hsl($hsl_gray5 / 0.85)"
        }
      }
    },
    isDisabled: {
      true: {
        backgroundColor: "$gray6",
        color: "$gray2",
        cursor: "not-allowed",
        "&:hover": {
          backgroundColor: "$gray6"
        }
      }
    }
  },
  compoundVariants: [
    {
      isFocusVisible: true,
      isSelected: true,
      css: {
        backgroundColor: "hsl($hsl_primary / 0.8)"
      }
    }
  ],
  defaultVariants: { size: "regular", isSelected: false, isDisabled: false, sticky: "bottom" }
});
function ListAction({ onAction, rendered, title }) {
  const ref = useRef9();
  const { buttonProps } = useButton3({ onPress: onAction }, ref);
  return /* @__PURE__ */ React.createElement(OptionFactory, __spreadProps(__spreadValues({}, buttonProps), {
    sticky: "bottom",
    ref
  }), /* @__PURE__ */ React.createElement(Text, {
    lineClamp: true
  }, rendered != null ? rendered : title));
}

// src/listbox/ListSection.tsx
init_react_import();
import { useListBoxSection, useSeparator } from "react-aria";

// src/listbox/Option.tsx
init_react_import();
import { useRef as useRef10 } from "react";
import { mergeProps as mergeProps4, useFocusRing as useFocusRing3, useOption } from "react-aria";

// src/utils/highlighter.ts
init_react_import();
import { remove as removeDiacritics } from "diacritics";
var SPECIAL_CHARS_REGEX = /[.*+?^${}()|[\]\\]/g;
var WORD_CHARACTER_REGEX = /[a-z0-9_]/i;
var WHITESPACES_REGEX = /\s+/;
function escapeRegexCharacters(string) {
  return string.replace(SPECIAL_CHARS_REGEX, "\\$&");
}
function match(text, query, options) {
  options = __spreadValues({
    insideWords: true,
    findAllOccurrences: true,
    requireMatchAll: false
  }, options);
  text = removeDiacritics(text);
  query = removeDiacritics(query);
  return query.trim().split(WHITESPACES_REGEX).filter(function(word) {
    return word.length > 0;
  }).reduce(function(result, word) {
    const wordLen = word.length;
    const prefix3 = !options.insideWords && WORD_CHARACTER_REGEX.test(word[0]) ? "\\b" : "";
    const regex = new RegExp(prefix3 + escapeRegexCharacters(word), "i");
    let occurrence = regex.exec(text);
    let index2;
    if (options.requireMatchAll && occurrence === null) {
      text = "";
      return [];
    }
    while (occurrence) {
      index2 = occurrence.index;
      result.push([index2, index2 + wordLen]);
      text = text.slice(0, index2) + new Array(wordLen + 1).join(" ") + text.slice(index2 + wordLen);
      if (!options.findAllOccurrences) {
        break;
      }
      occurrence = regex.exec(text);
    }
    return result;
  }, []).sort(function(match1, match2) {
    return match1[0] - match2[0];
  });
}
function parse(text, matches) {
  const result = [];
  if (matches.length === 0) {
    result.push({
      text,
      highlight: false
    });
  } else {
    if (matches[0][0] > 0) {
      result.push({
        text: text.slice(0, matches[0][0]),
        highlight: false
      });
    }
  }
  matches.forEach(function(match2, i) {
    const startIndex = match2[0];
    const endIndex = match2[1];
    result.push({
      text: text.slice(startIndex, endIndex),
      highlight: true
    });
    if (i === matches.length - 1) {
      if (endIndex < text.length) {
        result.push({
          text: text.slice(endIndex, text.length),
          highlight: false
        });
      }
    } else if (endIndex < matches[i + 1][0]) {
      result.push({
        text: text.slice(endIndex, matches[i + 1][0]),
        highlight: false
      });
    }
  });
  return result;
}
function highlightToParts(text, query, options) {
  return parse(text, match(text, query, options));
}

// src/listbox/Option.tsx
var OptionFactory2 = styled("li", {
  padding: "$2",
  outline: "none",
  cursor: "pointer",
  userSelect: "none",
  transition: "background-color $fast",
  width: "100%",
  display: "flex",
  placeContent: "center",
  flexDirection: "column",
  gap: "$1",
  color: "$label",
  mark: {
    backgroundColor: "hsl($hsl_primary / 0.3)",
    color: "inherit"
  },
  variants: {
    size: {
      small: {
        padding: "$1 $2",
        minHeight: "$controlHeightSmall"
      },
      regular: {
        padding: "$2 $3",
        minHeight: "$controlHeightRegular"
      },
      large: {
        padding: "$3 $4",
        minHeight: "$controlHeightLarge"
      }
    },
    isFocusVisible: {
      true: {
        backgroundColor: "$gray4"
      }
    },
    isFocused: {
      true: { backgroundColor: "$gray4" }
    },
    isSelected: {
      true: {
        backgroundColor: "$primary",
        "&, span": {
          color: "$onPrimary"
        },
        "@supports (hsl(from $primary h s calc(l - 10%)))": {
          "&:hover": {
            backgroundColor: "hsl(from $primary h s calc(l - 10%))"
          }
        }
      },
      false: {
        backgroundColor: "transparent",
        "&:hover": {
          backgroundColor: "$gray5"
        }
      }
    },
    isDisabled: {
      true: {
        backgroundColor: "$gray6",
        color: "$gray2",
        cursor: "not-allowed",
        "&:hover": {
          backgroundColor: "$gray6"
        }
      }
    }
  },
  compoundVariants: [
    {
      isFocusVisible: true,
      isSelected: true,
      css: {
        backgroundColor: "hsl($hsl_primary / 0.8)"
      }
    }
  ],
  defaultVariants: { size: "regular" }
});
function Option({ item, state, showHighlight }) {
  var _a2;
  const ref = useRef10();
  let matchedWords = [];
  let highlightedText;
  if ("inputValue" in state && showHighlight) {
    matchedWords = highlightToParts(item.textValue, state.inputValue);
    if (matchedWords.length > 0) {
      highlightedText = matchedWords.map((part) => part.highlight ? /* @__PURE__ */ React.createElement("mark", null, part.text) : /* @__PURE__ */ React.createElement(React.Fragment, null, part.text));
    }
  }
  const { optionProps, isSelected, isDisabled, isFocused, descriptionProps, labelProps } = useOption({ key: item.key }, state, ref);
  const { isFocusVisible, focusProps } = useFocusRing3();
  return /* @__PURE__ */ React.createElement(OptionFactory2, __spreadProps(__spreadValues({}, mergeProps4(optionProps, focusProps)), {
    isFocusVisible,
    isSelected,
    isDisabled,
    isFocused,
    ref
  }), typeof item.rendered === "string" ? /* @__PURE__ */ React.createElement(Text, __spreadValues({
    lineClamp: true
  }, labelProps), highlightedText != null ? highlightedText : item.rendered) : /* @__PURE__ */ React.createElement("div", __spreadProps(__spreadValues({}, labelProps), {
    style: { display: "contents" }
  }), typeof item.rendered === "function" ? item.rendered(__spreadProps(__spreadValues({}, item), { matchedWords })) : item.rendered), ((_a2 = item.props) == null ? void 0 : _a2.description) && /* @__PURE__ */ React.createElement(Text, __spreadValues({
    size: "caption2",
    css: { color: "$gray1" },
    lineClamp: true
  }, descriptionProps), item.props.description));
}

// src/listbox/ListSection.tsx
var SectionHeading = styled(Heading, "span", {
  textTransform: "uppercase",
  letterSpacing: "0.6px",
  fontWeight: "$regular",
  variants: {
    controlSize: {
      small: {
        padding: "$1 $2",
        capsize: {
          fontSize: fontPxToNum(1) / 2
        }
      },
      regular: {
        padding: "$2 $3",
        capsize: {
          fontSize: fontPxToNum(1)
        }
      },
      large: {
        padding: "$3 $4",
        capsize: {
          fontSize: fontPxToNum(2)
        }
      }
    }
  },
  defaultVariants: {
    controlSize: "regular"
  }
});
var Divider = styled("li", {
  borderTop: "1px solid $gray4",
  margin: "2px 5px"
});
function ListSection({ section, state, showHighlight }) {
  let { itemProps, headingProps, groupProps } = useListBoxSection({
    heading: section.rendered,
    "aria-label": section["aria-label"]
  });
  let { separatorProps } = useSeparator({
    elementType: "li"
  });
  return /* @__PURE__ */ React.createElement(React.Fragment, null, section.key !== state.collection.getFirstKey() && /* @__PURE__ */ React.createElement(Divider, __spreadValues({}, separatorProps)), /* @__PURE__ */ React.createElement("li", __spreadValues({}, itemProps), section.rendered && /* @__PURE__ */ React.createElement(SectionHeading, __spreadValues({
    controlSize: "regular",
    size: "groupHeadline"
  }, headingProps), section.rendered), /* @__PURE__ */ React.createElement(Box, __spreadProps(__spreadValues({
    as: "ul"
  }, groupProps), {
    css: { padding: 0, listStyle: "none" }
  }), [...section.childNodes].map((item) => /* @__PURE__ */ React.createElement(Option, __spreadValues({
    showHighlight,
    key: item.key,
    item,
    state
  }, item.props))))));
}

// src/listbox/ListBox.tsx
var ListBoxScrollContainer = styled("div", {
  maxHeight: "calc($controlHeightLarge * $$items)",
  width: "100%",
  flexGrow: 1,
  gap: "$1",
  overflow: "auto"
});
var ListBoxList = styled("ul", {
  $$items: 6,
  padding: "0",
  listStyle: "none",
  variants: {
    appearance: {
      standalone: {
        border: "1px solid $gray4",
        borderRadius: "$1"
      },
      inline: {
        border: "none",
        borderRadius: "0"
      }
    }
  },
  defaultVariants: {
    appearance: "standalone"
  }
});
function ListBox(_a2) {
  var _b = _a2, {
    appearance,
    showHighlight,
    actionItem,
    labelProps
  } = _b, props = __objRest(_b, [
    "appearance",
    "showHighlight",
    "actionItem",
    "labelProps"
  ]);
  const state = useListState(props);
  const ref = useRef11();
  const { listBoxRef = ref, state: controlledState } = props;
  const listState = controlledState || state;
  const { listBoxProps, labelProps: ariaLabelProps } = useListBox(props, listState, listBoxRef);
  const items = [...listState.collection];
  return /* @__PURE__ */ React.createElement(FieldWrapper, null, /* @__PURE__ */ React.createElement(FieldLabelAndDescription, {
    labelProps: mergeProps5(ariaLabelProps, labelProps, { size: "regular" }),
    label: props.label
  }), /* @__PURE__ */ React.createElement(ListBoxList, {
    appearance,
    css: { $$items: !!actionItem ? 7 : 6 }
  }, /* @__PURE__ */ React.createElement(ListBoxScrollContainer, __spreadProps(__spreadValues({}, listBoxProps), {
    ref: listBoxRef
  }), items.map((item) => {
    switch (item.type) {
      case "section":
        return /* @__PURE__ */ React.createElement(ListSection, __spreadValues({
          key: item.key,
          section: item,
          state: listState
        }, item.props));
      case "item":
      default:
        return /* @__PURE__ */ React.createElement(Option, __spreadValues({
          showHighlight,
          key: item.key,
          item,
          state: listState
        }, item.props));
    }
  })), actionItem && /* @__PURE__ */ React.createElement(ListAction, __spreadValues({
    key: "__action_item"
  }, actionItem))));
}

// src/popover/AriaPopover.tsx
init_react_import();
import {
  Children,
  cloneElement as cloneElement2,
  forwardRef as forwardRef10,
  Fragment as Fragment2,
  useRef as useRef13
} from "react";
import {
  DismissButton as DismissButton2,
  FocusScope as FocusScope3,
  mergeProps as mergeProps7,
  OverlayContainer as OverlayContainer4,
  useButton as useButton5,
  useDialog as useDialog2,
  useModal,
  useOverlay,
  useOverlayPosition,
  useOverlayTrigger
} from "react-aria";
import { mergeRefs as mergeRefs6 } from "react-laag";
import { useOverlayTriggerState } from "react-stately";

// src/theme/ThemeProvider.tsx
init_react_import();

// node_modules/@radix-ui/react-id/dist/index.module.js
init_react_import();
import * as e from "react";

// node_modules/@radix-ui/react-id/node_modules/@babel/runtime/helpers/esm/extends.js
init_react_import();
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

// node_modules/@radix-ui/react-id/dist/index.module.js
var t = { prefix: Math.round(1e10 * Math.random()), current: 0 };
var n = /* @__PURE__ */ e.createContext(t);
var IdProvider = (o) => {
  const i = e.useContext(n), s = i === t, a = e.useMemo(() => ({ prefix: s ? 0 : ++i.prefix, current: 0 }), [s, i]);
  return e.createElement(n.Provider, _extends({ value: a }, o));
};

// src/theme/ThemeProvider.tsx
import { merge as merge2 } from "lodash-es";
import { OverlayProvider } from "react-aria";
import { IntlProvider } from "react-intl";

// src/confirmDialog/ConfirmProvider.tsx
init_react_import();
import { Fragment, useCallback, useState as useState11 } from "react";

// src/dialog/Dialog.tsx
init_react_import();
import { motion as motion8, useAnimation } from "framer-motion";
import { useEffect as useEffect9, useRef as useRef12, useState as useState10 } from "react";
import { FocusScope as FocusScope2, mergeProps as mergeProps6, useButton as useButton4, useDialog } from "react-aria";

// src/layout/ModalCountProvider.tsx
init_react_import();
import { createGlobalState } from "react-use";
var useModalCount = createGlobalState(0);

// src/dialog/Dialog.tsx
var DialogContainer = styled(Card, {
  $$topOffset: "12vmin",
  $$sideOffset: "$space$3",
  $$width: "550px",
  backgroundColor: "$background",
  flexDirection: "column",
  display: "flex",
  maxWidth: "100%",
  alignSelf: "center",
  marginBottom: "$1",
  marginInline: "0",
  borderRadius: "$2",
  boxShadow: "$4",
  maxHeight: `calc(100% - $$topOffset * 2)`,
  marginTop: "$$topOffset",
  zIndex: "calc($$zIndex + 1)",
  width: "$$width",
  "@tabletPortrait": {
    maxWidth: `calc(100% - $$topOffset * 2)`,
    alignSelf: "initial",
    marginBottom: "0px",
    marginInline: "$$sideOffset"
  }
});
var DialogContentContainer = styled(Box, {
  $$minHeightContent: "$space$16",
  display: "flex",
  overflow: "auto",
  padding: "$3",
  flexDirection: "column",
  minHeight: "$$minHeightContent",
  touchAction: "auto !important"
});
function Dialog(_a2) {
  var _b = _a2, {
    onCancel,
    onOpen,
    onConfirm,
    isShown,
    shouldCloseOnClick,
    shouldCloseOnEscapePress,
    overlayProps,
    preventBodyScroll,
    width,
    minHeightContent,
    containerProps,
    sideOffset,
    topOffset,
    contentContainerProps,
    children,
    hasHeader,
    hasClose,
    hasCancel,
    hasFooter,
    cancelLabel,
    loading,
    disabled,
    confirmLabel,
    title,
    intent,
    containerCSS,
    confirmIcon: ConfirmIcon
  } = _b, props = __objRest(_b, [
    "onCancel",
    "onOpen",
    "onConfirm",
    "isShown",
    "shouldCloseOnClick",
    "shouldCloseOnEscapePress",
    "overlayProps",
    "preventBodyScroll",
    "width",
    "minHeightContent",
    "containerProps",
    "sideOffset",
    "topOffset",
    "contentContainerProps",
    "children",
    "hasHeader",
    "hasClose",
    "hasCancel",
    "hasFooter",
    "cancelLabel",
    "loading",
    "disabled",
    "confirmLabel",
    "title",
    "intent",
    "containerCSS",
    "confirmIcon"
  ]);
  const dialogRef = useRef12();
  const closeButtonRef = useRef12();
  const controls = useAnimation();
  const [modalCount, setModalCount] = useModalCount();
  const [initialModalNumber, setInitialModalNumber] = useState10(0);
  const offset = (modalCount + 1 - initialModalNumber) * 30;
  const scale = 1 - offset / 1e3;
  useEffect9(() => {
    controls.start({ y: offset * -1, scale });
  }, [modalCount - initialModalNumber]);
  const { dialogProps, titleProps } = useDialog(props, dialogRef);
  const { buttonProps: closeButtonProps } = useButton4(props, closeButtonRef);
  return /* @__PURE__ */ React.createElement(Overlay, __spreadValues({
    onHide: () => {
      controls.start({ y: 50, opacity: 0 });
      onCancel == null ? void 0 : onCancel(null);
      setModalCount((count2) => Math.max(0, count2 - 1));
    },
    onShow: () => {
      controls.start({ y: 0, opacity: 1 });
      onOpen == null ? void 0 : onOpen(null);
      setInitialModalNumber(modalCount + 1);
      setModalCount((count2) => count2 + 1);
    },
    shouldCloseOnClick,
    shouldCloseOnEscapePress,
    isShown,
    preventBodyScroll,
    containerCSS: {
      $$topOffset: topOffset,
      $$sideOffset: sideOffset,
      $$width: width,
      $$minHeightContent: minHeightContent,
      display: "flex",
      alignItems: "flex-start",
      justifyContent: "center"
    }
  }, overlayProps), (close) => /* @__PURE__ */ React.createElement(FocusScope2, {
    autoFocus: true,
    restoreFocus: true,
    contain: true
  }, /* @__PURE__ */ React.createElement(DialogContainer, __spreadProps(__spreadValues({
    ref: dialogRef
  }, mergeProps6(dialogProps, containerProps)), {
    as: motion8.div,
    drag: "y",
    onDragEnd: async (_, info) => {
      const offset2 = info.offset.y;
      const velocity = info.velocity.y;
      if (offset2 > 100 || offset2 > 0 && velocity > 300) {
        await controls.start({
          y: offset2 + 150,
          opacity: 0,
          transition: {
            velocity
          }
        });
        onCancel == null ? void 0 : onCancel(close);
      } else {
        controls.start({ y: 0, opacity: 1 });
      }
    },
    animate: controls,
    initial: { y: 150, opacity: 0 },
    transition: {
      type: "spring",
      damping: 12,
      stiffness: 100
    },
    role: "dialog",
    css: containerCSS
  }), hasHeader && /* @__PURE__ */ React.createElement(Pane, {
    css: {
      padding: "$3",
      flexShrink: 0,
      borderBottom: "1px solid $colors$muted",
      display: "flex",
      alignItems: "center"
    }
  }, title && /* @__PURE__ */ React.createElement(Heading, __spreadProps(__spreadValues({}, titleProps), {
    size: "subHeadline",
    css: { flex: 1 }
  }), title), hasClose && /* @__PURE__ */ React.createElement(Button, {
    appearance: "minimal",
    icon: CloseIcon,
    size: "small",
    onClick: () => onCancel == null ? void 0 : onCancel(close),
    css: { marginLeft: "auto" }
  })), /* @__PURE__ */ React.createElement(DialogContentContainer, __spreadValues({
    onScroll: (e2) => {
      e2.nativeEvent.stopPropagation();
    }
  }, contentContainerProps), typeof children === "function" ? children(close) : typeof children === "string" ? /* @__PURE__ */ React.createElement(Paragraph, null, children) : children), hasFooter && /* @__PURE__ */ React.createElement(Pane, {
    css: { borderTop: "1px solid $colors$muted" }
  }, /* @__PURE__ */ React.createElement(HStack, {
    space: "small",
    css: { padding: "$3", textAlign: "right", justifyContent: "flex-end" }
  }, hasCancel && /* @__PURE__ */ React.createElement(Button, __spreadProps(__spreadValues({}, closeButtonProps), {
    color: "secondary",
    autoFocus: true,
    tabIndex: 0,
    onClick: () => onCancel == null ? void 0 : onCancel(close)
  }), cancelLabel), /* @__PURE__ */ React.createElement(Button, {
    tabIndex: 0,
    color: "primary",
    loading,
    disabled,
    onClick: () => onConfirm == null ? void 0 : onConfirm(close),
    intent,
    iconBefore: ConfirmIcon
  }, confirmLabel))))));
}
Dialog.defaultProps = {
  isShown: false,
  hasHeader: true,
  hasClose: true,
  hasFooter: true,
  hasCancel: true,
  width: "550px",
  topOffset: "12vmin",
  sideOffset: "$3",
  minHeightContent: "$16",
  confirmLabel: "Confirm",
  isConfirmLoading: false,
  isConfirmDisabled: false,
  cancelLabel: "Cancel",
  shouldCloseOnOverlayClick: true,
  shouldCloseOnEscapePress: true,
  preventBodyScrolling: false,
  overlayProps: {}
};

// src/confirmDialog/ConfirmContext.ts
init_react_import();
import { createContext as createContext6 } from "react";
var ConfirmContext = createContext6(null);

// src/confirmDialog/ConfirmProvider.tsx
var DEFAULT_OPTIONS2 = {
  title: null,
  confirmLabel: "Ok",
  cancelLabel: "Cancel",
  dialogProps: {},
  confirmButtonProps: {},
  cancelButtonProps: {}
};
var buildOptions = (defaultOptions, options) => {
  const dialogProps = __spreadValues(__spreadValues({}, defaultOptions.dialogProps || {}), options.dialogProps || {});
  const confirmationButtonProps = __spreadValues(__spreadValues({}, defaultOptions.confirmButtonProps || {}), options.cancelButtonProps || {});
  const cancellationButtonProps = __spreadValues(__spreadValues({}, defaultOptions.confirmButtonProps || {}), options.cancelButtonProps || {});
  return __spreadProps(__spreadValues(__spreadValues(__spreadValues({}, DEFAULT_OPTIONS2), defaultOptions), options), {
    children: (options == null ? void 0 : options.children) || (options == null ? void 0 : options.message),
    dialogProps,
    confirmationButtonProps,
    cancellationButtonProps
  });
};
function ConfirmProvider({
  children,
  defaultOptions = {}
}) {
  const [options, setOptions] = useState11(__spreadValues(__spreadValues({}, DEFAULT_OPTIONS2), defaultOptions));
  const [resolveReject, setResolveReject] = useState11([]);
  const [resolve, reject] = resolveReject;
  const confirm = useCallback((options2 = {}) => {
    return new Promise((resolve2, reject2) => {
      setOptions(buildOptions(defaultOptions, options2));
      setResolveReject([resolve2, reject2]);
    });
  }, []);
  const handleClose = useCallback(() => {
    setResolveReject([]);
  }, []);
  const handleCancel = useCallback(() => {
    reject == null ? void 0 : reject();
    handleClose();
  }, [reject, handleClose]);
  const handleConfirm = useCallback(() => {
    resolve == null ? void 0 : resolve();
    handleClose();
  }, [resolve, handleClose]);
  return /* @__PURE__ */ React.createElement(Fragment, null, /* @__PURE__ */ React.createElement(ConfirmContext.Provider, {
    value: confirm
  }, children), resolveReject.length === 2 && /* @__PURE__ */ React.createElement(Dialog, __spreadProps(__spreadValues(__spreadValues({
    width: "350px",
    isShown: true
  }, options.dialogProps), options), {
    onCancel: handleCancel,
    onConfirm: handleConfirm
  })));
}

// src/locale/en.json
var emptystate_title = "This is the making of something great!";
var emptystate_description = "This is where you'll be able to see your {context} content.";
var fileupload_idle = "<b>Choose File</b>{canDrag, select, true { or <b>drag here</b>} other {}}";
var fileupload_sizeLimit = "Size Limit: {sizeLimit}";
var fileupload_error_undefined = "Invalid file";
var fileupload_error_file_invalid_type = "Invalid file type. { acceptType, select, image { File must be an image } pdf { File must be a pdf } csv { File must be a csv } other {} }";
var fileupload_error_file_too_large = "File is too large. Maximum size is {sizeLimit}";
var focuseditor_heading = "Set Focal Point";
var focuseditor_subheading = "We'll use this focal point when cropping your image in different sizes.";
var focuseditor_original = "Original";
var focuseditor_preview = "Preview";
var metadataeditor_heading = "Add a description (Alt Text)";
var metadataeditor_subheading = "You can add a description to your photos so they're accessible to more people.<br /> Good descriptions are concise but present what's in your photos accurately enough to understand their context";
var metadataeditor_label = "Image Description";
var metadataeditor_placeholder = "Describe this photo...";
var table_pagination_results = "{start}-{end} of {total}";
var apply = "Apply";
var cancel = "Cancel";
var remove = "Remove";
var en_default = {
  "emptystate.title": emptystate_title,
  "emptystate.description": emptystate_description,
  "fileupload.idle": fileupload_idle,
  "fileupload.sizeLimit": fileupload_sizeLimit,
  "fileupload.error.undefined": fileupload_error_undefined,
  "fileupload.error.file-invalid-type": fileupload_error_file_invalid_type,
  "fileupload.error.file-too-large": fileupload_error_file_too_large,
  "focuseditor.heading": focuseditor_heading,
  "focuseditor.subheading": focuseditor_subheading,
  "focuseditor.original": focuseditor_original,
  "focuseditor.preview": focuseditor_preview,
  "metadataeditor.heading": metadataeditor_heading,
  "metadataeditor.subheading": metadataeditor_subheading,
  "metadataeditor.label": metadataeditor_label,
  "metadataeditor.placeholder": metadataeditor_placeholder,
  "table.pagination.results": table_pagination_results,
  apply,
  cancel,
  remove
};

// src/theme/ThemeProvider.tsx
function ThemeProvider({
  disableGlobalStyles = false,
  disableResetStyles = false,
  children,
  toaster = {},
  i18n = {},
  featureFlags = {}
}) {
  if (!disableGlobalStyles) {
    globalStyles(disableResetStyles)();
  }
  return /* @__PURE__ */ React.createElement(OverlayProvider, null, /* @__PURE__ */ React.createElement(IdProvider, null, /* @__PURE__ */ React.createElement(FeatureFlagProvider, {
    value: __spreadValues(__spreadValues({}, DEFAULT_FEATURE_FLAGS), featureFlags)
  }, /* @__PURE__ */ React.createElement(IntlProvider, __spreadProps(__spreadValues({}, i18n), {
    defaultRichTextElements: __spreadValues({ b: (chunks) => /* @__PURE__ */ React.createElement("b", null, chunks) }, i18n.defaultRichTextElements),
    locale: i18n.locale || (navigator == null ? void 0 : navigator.language),
    defaultLocale: i18n.defaultLocale || "en",
    messages: merge2(en_default, i18n.messages)
  }), /* @__PURE__ */ React.createElement(Toaster, __spreadValues({}, toaster), /* @__PURE__ */ React.createElement(ConfirmProvider, null, children))))));
}

// src/popover/AriaPopover.tsx
var AriaPopoverElement = forwardRef10((_a2, forwardedRef) => {
  var _b = _a2, {
    title,
    children,
    isOpen,
    onClose,
    isKeyboardDismissDisabled,
    shouldCloseOnBlur,
    shouldCloseOnInteractOutside,
    isDismissable = true,
    css: css2,
    popoverRef: passedRef
  } = _b, props = __objRest(_b, [
    "title",
    "children",
    "isOpen",
    "onClose",
    "isKeyboardDismissDisabled",
    "shouldCloseOnBlur",
    "shouldCloseOnInteractOutside",
    "isDismissable",
    "css",
    "popoverRef"
  ]);
  const ref = useRef13();
  const popoverRef = mergeRefs6(ref, passedRef, forwardedRef);
  const { overlayProps } = useOverlay({
    onClose,
    isOpen,
    isDismissable,
    isKeyboardDismissDisabled,
    shouldCloseOnBlur,
    shouldCloseOnInteractOutside
  }, popoverRef);
  const { modalProps } = useModal();
  const { dialogProps, titleProps } = useDialog2({}, popoverRef);
  return /* @__PURE__ */ React.createElement(StackingProvider, {
    value: 20 /* OVERLAY */
  }, (zIndex) => /* @__PURE__ */ React.createElement(FocusScope3, {
    restoreFocus: true
  }, /* @__PURE__ */ React.createElement(Card, __spreadProps(__spreadValues({}, mergeProps7(overlayProps, dialogProps, props, modalProps)), {
    ref: popoverRef,
    border: true,
    elevation: 2,
    css: __spreadValues({
      backgroundColor: "$background",
      overflow: "hidden",
      minWidth: "200px",
      borderRadius: "$2",
      zIndex
    }, css2 || {})
  }), title && /* @__PURE__ */ React.createElement(Heading, __spreadValues({
    size: "subHeadline"
  }, titleProps), title), children, /* @__PURE__ */ React.createElement(DismissButton2, {
    onDismiss: onClose
  }))));
});

// src/combobox/ComboBox.tsx
function ComboBox(_a2) {
  var _b = _a2, {
    showHighlight = true,
    loading,
    actionItem,
    labelProps,
    css: css2
  } = _b, props = __objRest(_b, [
    "showHighlight",
    "loading",
    "actionItem",
    "labelProps",
    "css"
  ]);
  const { contains } = useFilter({ sensitivity: "base" });
  const state = useComboBoxState(__spreadProps(__spreadValues({
    menuTrigger: "focus",
    shouldCloseOnBlur: true
  }, props), {
    isDisabled: props.disabled,
    isReadOnly: props.readonly,
    isRequired: props.required,
    defaultFilter: contains,
    allowsEmptyCollection: !!actionItem
  }));
  const buttonRef = useRef14(null);
  const inputRef = useRef14(null);
  const listBoxRef = useRef14(null);
  const popoverRef = useRef14(null);
  const {
    inputProps,
    listBoxProps,
    labelProps: ariaLabelProps
  } = useComboBox(__spreadProps(__spreadValues({
    menuTrigger: "focus",
    shouldFocusWrap: true
  }, props), {
    inputRef,
    buttonRef,
    listBoxRef,
    popoverRef,
    isDisabled: props.disabled,
    isReadOnly: props.readonly,
    isRequired: props.required
  }), state);
  const { overlayProps } = useOverlayPosition2({
    targetRef: inputRef,
    overlayRef: popoverRef,
    placement: "bottom",
    offset: 5,
    isOpen: state.isOpen
  });
  delete overlayProps.style.zIndex;
  return /* @__PURE__ */ React.createElement(FieldWrapper, {
    css: css2
  }, /* @__PURE__ */ React.createElement(FieldLabelAndDescription, {
    label: props.label,
    description: props.description,
    labelProps: mergeProps8(ariaLabelProps, labelProps, { size: "regular" })
  }), /* @__PURE__ */ React.createElement(Box, {
    css: { display: "inline-block", position: "relative", width: "100%" }
  }, /* @__PURE__ */ React.createElement(TextInput, __spreadProps(__spreadValues({
    loading,
    iconBefore: SearchIcon,
    placeholder: props.placeholder,
    size: props.size
  }, inputProps), {
    onBlur: state.close,
    onFocus: state.open,
    onChange: state.setInputValue,
    ref: inputRef
  })), state.isOpen && /* @__PURE__ */ React.createElement(OverlayContainer5, null, /* @__PURE__ */ React.createElement(AriaPopoverElement, __spreadProps(__spreadValues({}, overlayProps), {
    ref: popoverRef,
    shouldCloseOnBlur: true,
    isDismissable: true,
    isOpen: state.isOpen,
    onClose: state.close,
    css: pick2(css2 != null ? css2 : {}, ["width", "minWidth", "maxWidth"])
  }), /* @__PURE__ */ React.createElement(ListBox, __spreadProps(__spreadValues({}, listBoxProps), {
    showHighlight,
    appearance: "inline",
    listBoxRef,
    state,
    actionItem,
    children: null
  }))))), /* @__PURE__ */ React.createElement(FieldErrorAndHelpText, {
    errorMessage: props.errorMessage
  }));
}

// src/combobox/index.ts
import { useAsyncList } from "react-stately";

// src/confirmDialog/ConfirmDialog.tsx
init_react_import();
import { useContext as useContext6 } from "react";
function useConfirm() {
  const confirm = useContext6(ConfirmContext);
  return confirm;
}

// src/creditcardinput/CreditCardInput.tsx
init_react_import();
import { useEffect as useEffect17, useState as useState17 } from "react";
import { useLabel as useLabel2 } from "react-aria";

// src/creditcardinput/CreditCardCodeField.tsx
init_react_import();
import cardValidator from "card-validator";
import { useFormikContext as useFormikContext4 } from "formik";
import { useEffect as useEffect13, useMemo as useMemo7 } from "react";
import { mergeProps as mergeProps20 } from "react-aria";
import { useIMask } from "react-imask";

// src/formik/useFormikHelper.ts
init_react_import();
import { useField, useFormikContext } from "formik";
import { useEffect as useEffect11, useState as useState13 } from "react";
import { mergeProps as mergeProps9 } from "react-aria";

// src/formik/focusManager.ts
init_react_import();
import { createContext as createContext7, useCallback as useCallback2, useContext as useContext7, useEffect as useEffect10, useRef as useRef15, useState as useState12 } from "react";
var FocusManagementContext = createContext7(null);
function useFocusContext() {
  const focusContext = useContext7(FocusManagementContext);
  return focusContext;
}
function useFocusManager({
  initialFocus
}) {
  const ref = useRef15();
  const [focus, setFocus] = useState12(null);
  const handleBlur = useCallback2((e2) => {
    var _a2;
    const field = (_a2 = e2 == null ? void 0 : e2.target) == null ? void 0 : _a2.name;
    if (field === focus) {
      setFocus(null);
    }
  }, [focus, setFocus, ref]);
  const handleFocus = useCallback2((e2) => {
    var _a2;
    const field = (_a2 = e2 == null ? void 0 : e2.target) == null ? void 0 : _a2.name;
    if (field !== focus) {
      setFocus(field);
    }
  }, [focus, setFocus, ref]);
  const setFieldFocus = useCallback2((name) => {
    var _a2, _b;
    const target = (_a2 = ref == null ? void 0 : ref.current) == null ? void 0 : _a2.querySelector(`[name="${name}"]`);
    if (target) {
      setFocus(target == null ? void 0 : target.name);
      (_b = target == null ? void 0 : target.focus) == null ? void 0 : _b.call(target);
    }
  }, [focus, setFocus, ref]);
  const focusNext = useCallback2(() => {
    var _a2, _b;
    const fields = (_a2 = ref == null ? void 0 : ref.current) == null ? void 0 : _a2.querySelectorAll("[name]");
    if (fields) {
      const currentIndex = Array.from(fields).findIndex((field) => field.name === focus);
      if (currentIndex !== -1) {
        const nextIndex = currentIndex + 1;
        if (nextIndex < fields.length) {
          if (!!((_b = fields[nextIndex]) == null ? void 0 : _b.name)) {
            setFieldFocus(fields[nextIndex].name);
          }
        }
      }
    }
  }, [focus, setFocus, ref]);
  const focusPrevious = useCallback2(() => {
    var _a2, _b;
    const fields = (_a2 = ref == null ? void 0 : ref.current) == null ? void 0 : _a2.querySelectorAll("[name]");
    if (fields) {
      const currentIndex = Array.from(fields).findIndex((field) => field.name === focus);
      if (currentIndex !== -1) {
        const prevIndex = currentIndex - 1;
        if (prevIndex >= 0) {
          if (!!((_b = fields[prevIndex]) == null ? void 0 : _b.name)) {
            setFieldFocus(fields[prevIndex].name);
          }
        }
      }
    }
  }, [focus, setFocus, ref]);
  useEffect10(() => {
    if (initialFocus) {
      setFieldFocus(initialFocus);
    }
  }, [initialFocus]);
  return [
    ref,
    {
      focus,
      handleFocus,
      handleBlur,
      setFocus: setFieldFocus,
      focusNext,
      focusPrevious
    }
  ];
}

// src/formik/useFormikHelper.ts
function useFormikHelper(props) {
  var _a2;
  const [field, meta, helpers] = useField({ name: props.name, type: (_a2 = props.type) != null ? _a2 : "text" });
  const { focus, handleBlur, handleFocus } = useFocusContext() || {};
  const { isSubmitting, submitCount } = useFormikContext();
  const [disabled, setDisabled] = useState13(false);
  useEffect11(() => setDisabled(isSubmitting), [isSubmitting]);
  const fieldProps = mergeProps9(field, {
    disabled,
    focused: focus === (props == null ? void 0 : props.name),
    onBlur: handleBlur,
    onFocus: handleFocus
  });
  const fieldMeta = __spreadProps(__spreadValues({}, meta), { submitCount });
  return [fieldProps, fieldMeta, helpers];
}

// src/formik/FormikSubmitButton.tsx
init_react_import();
import { useFormikContext as useFormikContext2 } from "formik";
import { motion as motion9, useAnimation as useAnimation2 } from "framer-motion";
import { useEffect as useEffect12, useState as useState14 } from "react";
var buttonAnimationVariants = {
  shake: {
    x: [-10, 10],
    transition: {
      repeat: 2,
      duration: 0.15,
      type: "tween"
    }
  },
  idle: {
    x: 0
  }
};
function FormikSubmitButton(props) {
  let { isSubmitting, errors, submitForm } = useFormikContext2();
  const { focus, handleBlur, handleFocus } = useFocusContext() || {};
  const [state, setState] = useState14("idle");
  const controls = useAnimation2();
  useEffect12(() => {
    let timer;
    const hasErrors = Object.keys(errors).length > 0;
    if (state === "idle" && isSubmitting) {
      setState("loading");
    } else if (state === "loading" && !isSubmitting && !hasErrors) {
      setState("success");
      timer = setTimeout(() => setState("idle"), 5e3);
    } else if (state === "loading" && !isSubmitting && hasErrors) {
      setState("error");
      controls.start("shake").then(() => {
        controls.stop();
        controls.start("idle");
      });
      timer = setTimeout(() => setState("idle"), 1500);
    }
    return () => {
      clearTimeout(timer);
    };
  }, [isSubmitting, errors]);
  const buttonDictionary = {
    idle: { label: (props == null ? void 0 : props.children) || "Submit", icon: props == null ? void 0 : props.iconBefore },
    loading: { label: (props == null ? void 0 : props.loadingLabel) || false },
    success: { label: "Success", intent: "success", icon: CheckCircleBoldIcon },
    error: { label: (props == null ? void 0 : props.children) || "Submit", intent: "danger" }
  };
  return /* @__PURE__ */ React.createElement(Button, __spreadValues(__spreadValues({
    as: motion9.button,
    variants: buttonAnimationVariants,
    animate: controls,
    children: buttonDictionary[state].label,
    intent: buttonDictionary[state].intent,
    iconBefore: buttonDictionary[state].icon,
    type: "button",
    name: "submit",
    loading: state === "loading",
    loadingLabel: props.loadingLabel || "Submit",
    onClick: submitForm
  }, { focused: focus === (props == null ? void 0 : props.name), onBlur: handleBlur, onFocus: handleFocus }), props));
}

// src/formik/FormikTextField.tsx
init_react_import();
import { mergeProps as mergeProps10 } from "react-aria";
function FormikTextField(props) {
  const [field, meta, helpers] = useFormikHelper(props);
  props.name === "lastName" && console.log(meta);
  return /* @__PURE__ */ React.createElement(TextInput, __spreadProps(__spreadValues({}, mergeProps10(field, props)), {
    invalid: (meta.touched || meta.submitCount > 0) && !!meta.error,
    errorMessage: (meta.touched || meta.submitCount > 0) && meta.error,
    onChange: (value) => {
      var _a2;
      (_a2 = props == null ? void 0 : props.onChange) == null ? void 0 : _a2.call(props, value);
      helpers.setValue(value);
    }
  }));
}

// src/formik/FormikCheckboxField.tsx
init_react_import();
import { mergeProps as mergeProps11 } from "react-aria";
function FormikCheckboxField(props) {
  const [field, _, helpers] = useFormikHelper(__spreadProps(__spreadValues({}, props), { type: "checkbox" }));
  return /* @__PURE__ */ React.createElement(Checkbox, __spreadProps(__spreadValues({}, mergeProps11(field, props)), {
    onChange: (value) => {
      var _a2;
      (_a2 = props == null ? void 0 : props.onChange) == null ? void 0 : _a2.call(props, value);
      helpers.setValue(value);
    }
  }));
}

// src/formik/FormikSegmentedControl.tsx
init_react_import();
import { mergeProps as mergeProps13 } from "react-aria";

// src/segmentedControl/SegmentedControl.tsx
init_react_import();

// node_modules/@react-aria/radio/dist/module.js
init_react_import();

// node_modules/@react-aria/i18n/dist/module.js
init_react_import();
import $iFADg$react, { useContext as $iFADg$useContext, useState as $iFADg$useState, useEffect as $iFADg$useEffect, useMemo as $iFADg$useMemo, useCallback as $iFADg$useCallback, useRef as $iFADg$useRef } from "react";

// node_modules/@internationalized/message/dist/module.js
init_react_import();

// node_modules/@internationalized/message/node_modules/intl-messageformat/lib/index.js
init_react_import();

// node_modules/@internationalized/message/node_modules/intl-messageformat/lib/src/core.js
init_react_import();

// node_modules/tslib/modules/index.js
init_react_import();
var import_tslib = __toESM(require_tslib(), 1);
var {
  __extends,
  __assign,
  __rest,
  __decorate,
  __param,
  __metadata,
  __awaiter,
  __generator,
  __exportStar,
  __createBinding,
  __values,
  __read,
  __spread,
  __spreadArrays,
  __spreadArray,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet
} = import_tslib.default;

// node_modules/@internationalized/message/node_modules/@formatjs/icu-messageformat-parser/lib/index.js
init_react_import();

// node_modules/@internationalized/message/node_modules/@formatjs/icu-messageformat-parser/lib/error.js
init_react_import();
var ErrorKind;
(function(ErrorKind2) {
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
  ErrorKind2[ErrorKind2["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
  ErrorKind2[ErrorKind2["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
  ErrorKind2[ErrorKind2["INVALID_TAG"] = 23] = "INVALID_TAG";
  ErrorKind2[ErrorKind2["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
  ErrorKind2[ErrorKind2["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
  ErrorKind2[ErrorKind2["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));

// node_modules/@internationalized/message/node_modules/@formatjs/icu-messageformat-parser/lib/parser.js
init_react_import();

// node_modules/@internationalized/message/node_modules/@formatjs/icu-messageformat-parser/lib/types.js
init_react_import();
var TYPE;
(function(TYPE2) {
  TYPE2[TYPE2["literal"] = 0] = "literal";
  TYPE2[TYPE2["argument"] = 1] = "argument";
  TYPE2[TYPE2["number"] = 2] = "number";
  TYPE2[TYPE2["date"] = 3] = "date";
  TYPE2[TYPE2["time"] = 4] = "time";
  TYPE2[TYPE2["select"] = 5] = "select";
  TYPE2[TYPE2["plural"] = 6] = "plural";
  TYPE2[TYPE2["pound"] = 7] = "pound";
  TYPE2[TYPE2["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function(SKELETON_TYPE2) {
  SKELETON_TYPE2[SKELETON_TYPE2["number"] = 0] = "number";
  SKELETON_TYPE2[SKELETON_TYPE2["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
function isLiteralElement(el) {
  return el.type === TYPE.literal;
}
function isArgumentElement(el) {
  return el.type === TYPE.argument;
}
function isNumberElement(el) {
  return el.type === TYPE.number;
}
function isDateElement(el) {
  return el.type === TYPE.date;
}
function isTimeElement(el) {
  return el.type === TYPE.time;
}
function isSelectElement(el) {
  return el.type === TYPE.select;
}
function isPluralElement(el) {
  return el.type === TYPE.plural;
}
function isPoundElement(el) {
  return el.type === TYPE.pound;
}
function isTagElement(el) {
  return el.type === TYPE.tag;
}
function isNumberSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.dateTime);
}

// node_modules/@internationalized/message/node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js
init_react_import();
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;

// node_modules/@internationalized/message/node_modules/@formatjs/icu-skeleton-parser/lib/index.js
init_react_import();

// node_modules/@internationalized/message/node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js
init_react_import();
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
function parseDateTimeSkeleton(skeleton) {
  var result = {};
  skeleton.replace(DATE_TIME_REGEX, function(match2) {
    var len = match2.length;
    switch (match2[0]) {
      case "G":
        result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      case "y":
        result.year = len === 2 ? "2-digit" : "numeric";
        break;
      case "Y":
      case "u":
      case "U":
      case "r":
        throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
      case "q":
      case "Q":
        throw new RangeError("`q/Q` (quarter) patterns are not supported");
      case "M":
      case "L":
        result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
        break;
      case "w":
      case "W":
        throw new RangeError("`w/W` (week) patterns are not supported");
      case "d":
        result.day = ["numeric", "2-digit"][len - 1];
        break;
      case "D":
      case "F":
      case "g":
        throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
      case "E":
        result.weekday = len === 4 ? "short" : len === 5 ? "narrow" : "short";
        break;
      case "e":
        if (len < 4) {
          throw new RangeError("`e..eee` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "c":
        if (len < 4) {
          throw new RangeError("`c..ccc` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "a":
        result.hour12 = true;
        break;
      case "b":
      case "B":
        throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
      case "h":
        result.hourCycle = "h12";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "H":
        result.hourCycle = "h23";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "K":
        result.hourCycle = "h11";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "k":
        result.hourCycle = "h24";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "j":
      case "J":
      case "C":
        throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
      case "m":
        result.minute = ["numeric", "2-digit"][len - 1];
        break;
      case "s":
        result.second = ["numeric", "2-digit"][len - 1];
        break;
      case "S":
      case "A":
        throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
      case "z":
        result.timeZoneName = len < 4 ? "short" : "long";
        break;
      case "Z":
      case "O":
      case "v":
      case "V":
      case "X":
      case "x":
        throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
    }
    return "";
  });
  return result;
}

// node_modules/@internationalized/message/node_modules/@formatjs/icu-skeleton-parser/lib/number.js
init_react_import();

// node_modules/@internationalized/message/node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js
init_react_import();
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;

// node_modules/@internationalized/message/node_modules/@formatjs/icu-skeleton-parser/lib/number.js
function parseNumberSkeletonFromString(skeleton) {
  if (skeleton.length === 0) {
    throw new Error("Number skeleton cannot be empty");
  }
  var stringTokens = skeleton.split(WHITE_SPACE_REGEX).filter(function(x) {
    return x.length > 0;
  });
  var tokens = [];
  for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
    var stringToken = stringTokens_1[_i];
    var stemAndOptions = stringToken.split("/");
    if (stemAndOptions.length === 0) {
      throw new Error("Invalid number skeleton");
    }
    var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
    for (var _a2 = 0, options_1 = options; _a2 < options_1.length; _a2++) {
      var option = options_1[_a2];
      if (option.length === 0) {
        throw new Error("Invalid number skeleton");
      }
    }
    tokens.push({ stem, options });
  }
  return tokens;
}
function icuUnitToEcma(unit) {
  return unit.replace(/^(.*?)-/, "");
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
  var result = {};
  if (str[str.length - 1] === "r") {
    result.roundingPriority = "morePrecision";
  } else if (str[str.length - 1] === "s") {
    result.roundingPriority = "lessPrecision";
  }
  str.replace(SIGNIFICANT_PRECISION_REGEX, function(_, g1, g2) {
    if (typeof g2 !== "string") {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length;
    } else if (g2 === "+") {
      result.minimumSignificantDigits = g1.length;
    } else if (g1[0] === "#") {
      result.maximumSignificantDigits = g1.length;
    } else {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length + (typeof g2 === "string" ? g2.length : 0);
    }
    return "";
  });
  return result;
}
function parseSign(str) {
  switch (str) {
    case "sign-auto":
      return {
        signDisplay: "auto"
      };
    case "sign-accounting":
    case "()":
      return {
        currencySign: "accounting"
      };
    case "sign-always":
    case "+!":
      return {
        signDisplay: "always"
      };
    case "sign-accounting-always":
    case "()!":
      return {
        signDisplay: "always",
        currencySign: "accounting"
      };
    case "sign-except-zero":
    case "+?":
      return {
        signDisplay: "exceptZero"
      };
    case "sign-accounting-except-zero":
    case "()?":
      return {
        signDisplay: "exceptZero",
        currencySign: "accounting"
      };
    case "sign-never":
    case "+_":
      return {
        signDisplay: "never"
      };
  }
}
function parseConciseScientificAndEngineeringStem(stem) {
  var result;
  if (stem[0] === "E" && stem[1] === "E") {
    result = {
      notation: "engineering"
    };
    stem = stem.slice(2);
  } else if (stem[0] === "E") {
    result = {
      notation: "scientific"
    };
    stem = stem.slice(1);
  }
  if (result) {
    var signDisplay = stem.slice(0, 2);
    if (signDisplay === "+!") {
      result.signDisplay = "always";
      stem = stem.slice(2);
    } else if (signDisplay === "+?") {
      result.signDisplay = "exceptZero";
      stem = stem.slice(2);
    }
    if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
      throw new Error("Malformed concise eng/scientific notation");
    }
    result.minimumIntegerDigits = stem.length;
  }
  return result;
}
function parseNotationOptions(opt) {
  var result = {};
  var signOpts = parseSign(opt);
  if (signOpts) {
    return signOpts;
  }
  return result;
}
function parseNumberSkeleton(tokens) {
  var result = {};
  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
    var token = tokens_1[_i];
    switch (token.stem) {
      case "percent":
      case "%":
        result.style = "percent";
        continue;
      case "%x100":
        result.style = "percent";
        result.scale = 100;
        continue;
      case "currency":
        result.style = "currency";
        result.currency = token.options[0];
        continue;
      case "group-off":
      case ",_":
        result.useGrouping = false;
        continue;
      case "precision-integer":
      case ".":
        result.maximumFractionDigits = 0;
        continue;
      case "measure-unit":
      case "unit":
        result.style = "unit";
        result.unit = icuUnitToEcma(token.options[0]);
        continue;
      case "compact-short":
      case "K":
        result.notation = "compact";
        result.compactDisplay = "short";
        continue;
      case "compact-long":
      case "KK":
        result.notation = "compact";
        result.compactDisplay = "long";
        continue;
      case "scientific":
        result = __assign(__assign(__assign({}, result), { notation: "scientific" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "engineering":
        result = __assign(__assign(__assign({}, result), { notation: "engineering" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "notation-simple":
        result.notation = "standard";
        continue;
      case "unit-width-narrow":
        result.currencyDisplay = "narrowSymbol";
        result.unitDisplay = "narrow";
        continue;
      case "unit-width-short":
        result.currencyDisplay = "code";
        result.unitDisplay = "short";
        continue;
      case "unit-width-full-name":
        result.currencyDisplay = "name";
        result.unitDisplay = "long";
        continue;
      case "unit-width-iso-code":
        result.currencyDisplay = "symbol";
        continue;
      case "scale":
        result.scale = parseFloat(token.options[0]);
        continue;
      case "integer-width":
        if (token.options.length > 1) {
          throw new RangeError("integer-width stems only accept a single optional option");
        }
        token.options[0].replace(INTEGER_WIDTH_REGEX, function(_, g1, g2, g3, g4, g5) {
          if (g1) {
            result.minimumIntegerDigits = g2.length;
          } else if (g3 && g4) {
            throw new Error("We currently do not support maximum integer digits");
          } else if (g5) {
            throw new Error("We currently do not support exact integer digits");
          }
          return "";
        });
        continue;
    }
    if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
      result.minimumIntegerDigits = token.stem.length;
      continue;
    }
    if (FRACTION_PRECISION_REGEX.test(token.stem)) {
      if (token.options.length > 1) {
        throw new RangeError("Fraction-precision stems only accept a single optional option");
      }
      token.stem.replace(FRACTION_PRECISION_REGEX, function(_, g1, g2, g3, g4, g5) {
        if (g2 === "*") {
          result.minimumFractionDigits = g1.length;
        } else if (g3 && g3[0] === "#") {
          result.maximumFractionDigits = g3.length;
        } else if (g4 && g5) {
          result.minimumFractionDigits = g4.length;
          result.maximumFractionDigits = g4.length + g5.length;
        } else {
          result.minimumFractionDigits = g1.length;
          result.maximumFractionDigits = g1.length;
        }
        return "";
      });
      var opt = token.options[0];
      if (opt === "w") {
        result = __assign(__assign({}, result), { trailingZeroDisplay: "stripIfInteger" });
      } else if (opt) {
        result = __assign(__assign({}, result), parseSignificantPrecision(opt));
      }
      continue;
    }
    if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
      result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));
      continue;
    }
    var signOpts = parseSign(token.stem);
    if (signOpts) {
      result = __assign(__assign({}, result), signOpts);
    }
    var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
    if (conciseScientificAndEngineeringOpts) {
      result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);
    }
  }
  return result;
}

// node_modules/@internationalized/message/node_modules/@formatjs/icu-messageformat-parser/lib/parser.js
var _a;
var SPACE_SEPARATOR_START_REGEX = new RegExp("^" + SPACE_SEPARATOR_REGEX.source + "*");
var SPACE_SEPARATOR_END_REGEX = new RegExp(SPACE_SEPARATOR_REGEX.source + "*$");
function createLocation(start, end) {
  return { start, end };
}
var hasNativeStartsWith = !!String.prototype.startsWith;
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n2) {
  return typeof n2 === "number" && isFinite(n2) && Math.floor(n2) === n2 && Math.abs(n2) <= 9007199254740991;
};
var REGEX_SUPPORTS_U_AND_Y = true;
try {
  re = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec("a")) === null || _a === void 0 ? void 0 : _a[0]) === "a";
} catch (_) {
  REGEX_SUPPORTS_U_AND_Y = false;
}
var re;
var startsWith = hasNativeStartsWith ? function startsWith2(s, search, position) {
  return s.startsWith(search, position);
} : function startsWith3(s, search, position) {
  return s.slice(position, position + search.length) === search;
};
var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : function fromCodePoint2() {
  var codePoints = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    codePoints[_i] = arguments[_i];
  }
  var elements = "";
  var length = codePoints.length;
  var i = 0;
  var code;
  while (length > i) {
    code = codePoints[i++];
    if (code > 1114111)
      throw RangeError(code + " is not a valid code point");
    elements += code < 65536 ? String.fromCharCode(code) : String.fromCharCode(((code -= 65536) >> 10) + 55296, code % 1024 + 56320);
  }
  return elements;
};
var fromEntries = hasNativeFromEntries ? Object.fromEntries : function fromEntries2(entries) {
  var obj = {};
  for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
    var _a2 = entries_1[_i], k = _a2[0], v = _a2[1];
    obj[k] = v;
  }
  return obj;
};
var codePointAt = hasNativeCodePointAt ? function codePointAt2(s, index2) {
  return s.codePointAt(index2);
} : function codePointAt3(s, index2) {
  var size = s.length;
  if (index2 < 0 || index2 >= size) {
    return void 0;
  }
  var first = s.charCodeAt(index2);
  var second;
  return first < 55296 || first > 56319 || index2 + 1 === size || (second = s.charCodeAt(index2 + 1)) < 56320 || second > 57343 ? first : (first - 55296 << 10) + (second - 56320) + 65536;
};
var trimStart = hasTrimStart ? function trimStart2(s) {
  return s.trimStart();
} : function trimStart3(s) {
  return s.replace(SPACE_SEPARATOR_START_REGEX, "");
};
var trimEnd = hasTrimEnd ? function trimEnd2(s) {
  return s.trimEnd();
} : function trimEnd3(s) {
  return s.replace(SPACE_SEPARATOR_END_REGEX, "");
};
function RE(s, flag) {
  return new RegExp(s, flag);
}
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
  IDENTIFIER_PREFIX_RE_1 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index2) {
    var _a2;
    IDENTIFIER_PREFIX_RE_1.lastIndex = index2;
    var match2 = IDENTIFIER_PREFIX_RE_1.exec(s);
    return (_a2 = match2[1]) !== null && _a2 !== void 0 ? _a2 : "";
  };
} else {
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index2) {
    var match2 = [];
    while (true) {
      var c = codePointAt(s, index2);
      if (c === void 0 || _isWhiteSpace(c) || _isPatternSyntax(c)) {
        break;
      }
      match2.push(c);
      index2 += c >= 65536 ? 2 : 1;
    }
    return fromCodePoint.apply(void 0, match2);
  };
}
var IDENTIFIER_PREFIX_RE_1;
var Parser = function() {
  function Parser2(message, options) {
    if (options === void 0) {
      options = {};
    }
    this.message = message;
    this.position = { offset: 0, line: 1, column: 1 };
    this.ignoreTag = !!options.ignoreTag;
    this.requiresOtherClause = !!options.requiresOtherClause;
    this.shouldParseSkeletons = !!options.shouldParseSkeletons;
  }
  Parser2.prototype.parse = function() {
    if (this.offset() !== 0) {
      throw Error("parser can only be used once");
    }
    return this.parseMessage(0, "", false);
  };
  Parser2.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {
    var elements = [];
    while (!this.isEOF()) {
      var char = this.char();
      if (char === 123) {
        var result = this.parseArgument(nestingLevel, expectingCloseTag);
        if (result.err) {
          return result;
        }
        elements.push(result.val);
      } else if (char === 125 && nestingLevel > 0) {
        break;
      } else if (char === 35 && (parentArgType === "plural" || parentArgType === "selectordinal")) {
        var position = this.clonePosition();
        this.bump();
        elements.push({
          type: TYPE.pound,
          location: createLocation(position, this.clonePosition())
        });
      } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {
        if (expectingCloseTag) {
          break;
        } else {
          return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
        }
      } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {
        var result = this.parseTag(nestingLevel, parentArgType);
        if (result.err) {
          return result;
        }
        elements.push(result.val);
      } else {
        var result = this.parseLiteral(nestingLevel, parentArgType);
        if (result.err) {
          return result;
        }
        elements.push(result.val);
      }
    }
    return { val: elements, err: null };
  };
  Parser2.prototype.parseTag = function(nestingLevel, parentArgType) {
    var startPosition = this.clonePosition();
    this.bump();
    var tagName = this.parseTagName();
    this.bumpSpace();
    if (this.bumpIf("/>")) {
      return {
        val: {
          type: TYPE.literal,
          value: "<" + tagName + "/>",
          location: createLocation(startPosition, this.clonePosition())
        },
        err: null
      };
    } else if (this.bumpIf(">")) {
      var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
      if (childrenResult.err) {
        return childrenResult;
      }
      var children = childrenResult.val;
      var endTagStartPosition = this.clonePosition();
      if (this.bumpIf("</")) {
        if (this.isEOF() || !_isAlpha(this.char())) {
          return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
        }
        var closingTagNameStartPosition = this.clonePosition();
        var closingTagName = this.parseTagName();
        if (tagName !== closingTagName) {
          return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
        }
        this.bumpSpace();
        if (!this.bumpIf(">")) {
          return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
        }
        return {
          val: {
            type: TYPE.tag,
            value: tagName,
            children,
            location: createLocation(startPosition, this.clonePosition())
          },
          err: null
        };
      } else {
        return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
      }
    } else {
      return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
    }
  };
  Parser2.prototype.parseTagName = function() {
    var startOffset = this.offset();
    this.bump();
    while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
      this.bump();
    }
    return this.message.slice(startOffset, this.offset());
  };
  Parser2.prototype.parseLiteral = function(nestingLevel, parentArgType) {
    var start = this.clonePosition();
    var value = "";
    while (true) {
      var parseQuoteResult = this.tryParseQuote(parentArgType);
      if (parseQuoteResult) {
        value += parseQuoteResult;
        continue;
      }
      var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
      if (parseUnquotedResult) {
        value += parseUnquotedResult;
        continue;
      }
      var parseLeftAngleResult = this.tryParseLeftAngleBracket();
      if (parseLeftAngleResult) {
        value += parseLeftAngleResult;
        continue;
      }
      break;
    }
    var location = createLocation(start, this.clonePosition());
    return {
      val: { type: TYPE.literal, value, location },
      err: null
    };
  };
  Parser2.prototype.tryParseLeftAngleBracket = function() {
    if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || !_isAlphaOrSlash(this.peek() || 0))) {
      this.bump();
      return "<";
    }
    return null;
  };
  Parser2.prototype.tryParseQuote = function(parentArgType) {
    if (this.isEOF() || this.char() !== 39) {
      return null;
    }
    switch (this.peek()) {
      case 39:
        this.bump();
        this.bump();
        return "'";
      case 123:
      case 60:
      case 62:
      case 125:
        break;
      case 35:
        if (parentArgType === "plural" || parentArgType === "selectordinal") {
          break;
        }
        return null;
      default:
        return null;
    }
    this.bump();
    var codePoints = [this.char()];
    this.bump();
    while (!this.isEOF()) {
      var ch = this.char();
      if (ch === 39) {
        if (this.peek() === 39) {
          codePoints.push(39);
          this.bump();
        } else {
          this.bump();
          break;
        }
      } else {
        codePoints.push(ch);
      }
      this.bump();
    }
    return fromCodePoint.apply(void 0, codePoints);
  };
  Parser2.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {
    if (this.isEOF()) {
      return null;
    }
    var ch = this.char();
    if (ch === 60 || ch === 123 || ch === 35 && (parentArgType === "plural" || parentArgType === "selectordinal") || ch === 125 && nestingLevel > 0) {
      return null;
    } else {
      this.bump();
      return fromCodePoint(ch);
    }
  };
  Parser2.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {
    var openingBracePosition = this.clonePosition();
    this.bump();
    this.bumpSpace();
    if (this.isEOF()) {
      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
    }
    if (this.char() === 125) {
      this.bump();
      return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
    }
    var value = this.parseIdentifierIfPossible().value;
    if (!value) {
      return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
    }
    this.bumpSpace();
    if (this.isEOF()) {
      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
    }
    switch (this.char()) {
      case 125: {
        this.bump();
        return {
          val: {
            type: TYPE.argument,
            value,
            location: createLocation(openingBracePosition, this.clonePosition())
          },
          err: null
        };
      }
      case 44: {
        this.bump();
        this.bumpSpace();
        if (this.isEOF()) {
          return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
      }
      default:
        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
    }
  };
  Parser2.prototype.parseIdentifierIfPossible = function() {
    var startingPosition = this.clonePosition();
    var startOffset = this.offset();
    var value = matchIdentifierAtIndex(this.message, startOffset);
    var endOffset = startOffset + value.length;
    this.bumpTo(endOffset);
    var endPosition = this.clonePosition();
    var location = createLocation(startingPosition, endPosition);
    return { value, location };
  };
  Parser2.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value, openingBracePosition) {
    var _a2;
    var typeStartPosition = this.clonePosition();
    var argType = this.parseIdentifierIfPossible().value;
    var typeEndPosition = this.clonePosition();
    switch (argType) {
      case "":
        return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
      case "number":
      case "date":
      case "time": {
        this.bumpSpace();
        var styleAndLocation = null;
        if (this.bumpIf(",")) {
          this.bumpSpace();
          var styleStartPosition = this.clonePosition();
          var result = this.parseSimpleArgStyleIfPossible();
          if (result.err) {
            return result;
          }
          var style = trimEnd(result.val);
          if (style.length === 0) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
          }
          var styleLocation = createLocation(styleStartPosition, this.clonePosition());
          styleAndLocation = { style, styleLocation };
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        var location_1 = createLocation(openingBracePosition, this.clonePosition());
        if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, "::", 0)) {
          var skeleton = trimStart(styleAndLocation.style.slice(2));
          if (argType === "number") {
            var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
            if (result.err) {
              return result;
            }
            return {
              val: { type: TYPE.number, value, location: location_1, style: result.val },
              err: null
            };
          } else {
            if (skeleton.length === 0) {
              return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
            }
            var style = {
              type: SKELETON_TYPE.dateTime,
              pattern: skeleton,
              location: styleAndLocation.styleLocation,
              parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(skeleton) : {}
            };
            var type = argType === "date" ? TYPE.date : TYPE.time;
            return {
              val: { type, value, location: location_1, style },
              err: null
            };
          }
        }
        return {
          val: {
            type: argType === "number" ? TYPE.number : argType === "date" ? TYPE.date : TYPE.time,
            value,
            location: location_1,
            style: (_a2 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a2 !== void 0 ? _a2 : null
          },
          err: null
        };
      }
      case "plural":
      case "selectordinal":
      case "select": {
        var typeEndPosition_1 = this.clonePosition();
        this.bumpSpace();
        if (!this.bumpIf(",")) {
          return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));
        }
        this.bumpSpace();
        var identifierAndLocation = this.parseIdentifierIfPossible();
        var pluralOffset = 0;
        if (argType !== "select" && identifierAndLocation.value === "offset") {
          if (!this.bumpIf(":")) {
            return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
          }
          this.bumpSpace();
          var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
          if (result.err) {
            return result;
          }
          this.bumpSpace();
          identifierAndLocation = this.parseIdentifierIfPossible();
          pluralOffset = result.val;
        }
        var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
        if (optionsResult.err) {
          return optionsResult;
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        var location_2 = createLocation(openingBracePosition, this.clonePosition());
        if (argType === "select") {
          return {
            val: {
              type: TYPE.select,
              value,
              options: fromEntries(optionsResult.val),
              location: location_2
            },
            err: null
          };
        } else {
          return {
            val: {
              type: TYPE.plural,
              value,
              options: fromEntries(optionsResult.val),
              offset: pluralOffset,
              pluralType: argType === "plural" ? "cardinal" : "ordinal",
              location: location_2
            },
            err: null
          };
        }
      }
      default:
        return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
    }
  };
  Parser2.prototype.tryParseArgumentClose = function(openingBracePosition) {
    if (this.isEOF() || this.char() !== 125) {
      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
    }
    this.bump();
    return { val: true, err: null };
  };
  Parser2.prototype.parseSimpleArgStyleIfPossible = function() {
    var nestedBraces = 0;
    var startPosition = this.clonePosition();
    while (!this.isEOF()) {
      var ch = this.char();
      switch (ch) {
        case 39: {
          this.bump();
          var apostrophePosition = this.clonePosition();
          if (!this.bumpUntil("'")) {
            return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
          }
          this.bump();
          break;
        }
        case 123: {
          nestedBraces += 1;
          this.bump();
          break;
        }
        case 125: {
          if (nestedBraces > 0) {
            nestedBraces -= 1;
          } else {
            return {
              val: this.message.slice(startPosition.offset, this.offset()),
              err: null
            };
          }
          break;
        }
        default:
          this.bump();
          break;
      }
    }
    return {
      val: this.message.slice(startPosition.offset, this.offset()),
      err: null
    };
  };
  Parser2.prototype.parseNumberSkeletonFromString = function(skeleton, location) {
    var tokens = [];
    try {
      tokens = parseNumberSkeletonFromString(skeleton);
    } catch (e2) {
      return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);
    }
    return {
      val: {
        type: SKELETON_TYPE.number,
        tokens,
        location,
        parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}
      },
      err: null
    };
  };
  Parser2.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
    var _a2;
    var hasOtherClause = false;
    var options = [];
    var parsedSelectors = /* @__PURE__ */ new Set();
    var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
    while (true) {
      if (selector.length === 0) {
        var startPosition = this.clonePosition();
        if (parentArgType !== "select" && this.bumpIf("=")) {
          var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
          if (result.err) {
            return result;
          }
          selectorLocation = createLocation(startPosition, this.clonePosition());
          selector = this.message.slice(startPosition.offset, this.offset());
        } else {
          break;
        }
      }
      if (parsedSelectors.has(selector)) {
        return this.error(parentArgType === "select" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
      }
      if (selector === "other") {
        hasOtherClause = true;
      }
      this.bumpSpace();
      var openingBracePosition = this.clonePosition();
      if (!this.bumpIf("{")) {
        return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
      }
      var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
      if (fragmentResult.err) {
        return fragmentResult;
      }
      var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
      if (argCloseResult.err) {
        return argCloseResult;
      }
      options.push([
        selector,
        {
          value: fragmentResult.val,
          location: createLocation(openingBracePosition, this.clonePosition())
        }
      ]);
      parsedSelectors.add(selector);
      this.bumpSpace();
      _a2 = this.parseIdentifierIfPossible(), selector = _a2.value, selectorLocation = _a2.location;
    }
    if (options.length === 0) {
      return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
    }
    if (this.requiresOtherClause && !hasOtherClause) {
      return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
    }
    return { val: options, err: null };
  };
  Parser2.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {
    var sign = 1;
    var startingPosition = this.clonePosition();
    if (this.bumpIf("+")) {
    } else if (this.bumpIf("-")) {
      sign = -1;
    }
    var hasDigits = false;
    var decimal = 0;
    while (!this.isEOF()) {
      var ch = this.char();
      if (ch >= 48 && ch <= 57) {
        hasDigits = true;
        decimal = decimal * 10 + (ch - 48);
        this.bump();
      } else {
        break;
      }
    }
    var location = createLocation(startingPosition, this.clonePosition());
    if (!hasDigits) {
      return this.error(expectNumberError, location);
    }
    decimal *= sign;
    if (!isSafeInteger(decimal)) {
      return this.error(invalidNumberError, location);
    }
    return { val: decimal, err: null };
  };
  Parser2.prototype.offset = function() {
    return this.position.offset;
  };
  Parser2.prototype.isEOF = function() {
    return this.offset() === this.message.length;
  };
  Parser2.prototype.clonePosition = function() {
    return {
      offset: this.position.offset,
      line: this.position.line,
      column: this.position.column
    };
  };
  Parser2.prototype.char = function() {
    var offset = this.position.offset;
    if (offset >= this.message.length) {
      throw Error("out of bound");
    }
    var code = codePointAt(this.message, offset);
    if (code === void 0) {
      throw Error("Offset " + offset + " is at invalid UTF-16 code unit boundary");
    }
    return code;
  };
  Parser2.prototype.error = function(kind, location) {
    return {
      val: null,
      err: {
        kind,
        message: this.message,
        location
      }
    };
  };
  Parser2.prototype.bump = function() {
    if (this.isEOF()) {
      return;
    }
    var code = this.char();
    if (code === 10) {
      this.position.line += 1;
      this.position.column = 1;
      this.position.offset += 1;
    } else {
      this.position.column += 1;
      this.position.offset += code < 65536 ? 1 : 2;
    }
  };
  Parser2.prototype.bumpIf = function(prefix3) {
    if (startsWith(this.message, prefix3, this.offset())) {
      for (var i = 0; i < prefix3.length; i++) {
        this.bump();
      }
      return true;
    }
    return false;
  };
  Parser2.prototype.bumpUntil = function(pattern) {
    var currentOffset = this.offset();
    var index2 = this.message.indexOf(pattern, currentOffset);
    if (index2 >= 0) {
      this.bumpTo(index2);
      return true;
    } else {
      this.bumpTo(this.message.length);
      return false;
    }
  };
  Parser2.prototype.bumpTo = function(targetOffset) {
    if (this.offset() > targetOffset) {
      throw Error("targetOffset " + targetOffset + " must be greater than or equal to the current offset " + this.offset());
    }
    targetOffset = Math.min(targetOffset, this.message.length);
    while (true) {
      var offset = this.offset();
      if (offset === targetOffset) {
        break;
      }
      if (offset > targetOffset) {
        throw Error("targetOffset " + targetOffset + " is at invalid UTF-16 code unit boundary");
      }
      this.bump();
      if (this.isEOF()) {
        break;
      }
    }
  };
  Parser2.prototype.bumpSpace = function() {
    while (!this.isEOF() && _isWhiteSpace(this.char())) {
      this.bump();
    }
  };
  Parser2.prototype.peek = function() {
    if (this.isEOF()) {
      return null;
    }
    var code = this.char();
    var offset = this.offset();
    var nextCode = this.message.charCodeAt(offset + (code >= 65536 ? 2 : 1));
    return nextCode !== null && nextCode !== void 0 ? nextCode : null;
  };
  return Parser2;
}();
function _isAlpha(codepoint) {
  return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;
}
function _isAlphaOrSlash(codepoint) {
  return _isAlpha(codepoint) || codepoint === 47;
}
function _isPotentialElementNameChar(c) {
  return c === 45 || c === 46 || c >= 48 && c <= 57 || c === 95 || c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 183 || c >= 192 && c <= 214 || c >= 216 && c <= 246 || c >= 248 && c <= 893 || c >= 895 && c <= 8191 || c >= 8204 && c <= 8205 || c >= 8255 && c <= 8256 || c >= 8304 && c <= 8591 || c >= 11264 && c <= 12271 || c >= 12289 && c <= 55295 || c >= 63744 && c <= 64975 || c >= 65008 && c <= 65533 || c >= 65536 && c <= 983039;
}
function _isWhiteSpace(c) {
  return c >= 9 && c <= 13 || c === 32 || c === 133 || c >= 8206 && c <= 8207 || c === 8232 || c === 8233;
}
function _isPatternSyntax(c) {
  return c >= 33 && c <= 35 || c === 36 || c >= 37 && c <= 39 || c === 40 || c === 41 || c === 42 || c === 43 || c === 44 || c === 45 || c >= 46 && c <= 47 || c >= 58 && c <= 59 || c >= 60 && c <= 62 || c >= 63 && c <= 64 || c === 91 || c === 92 || c === 93 || c === 94 || c === 96 || c === 123 || c === 124 || c === 125 || c === 126 || c === 161 || c >= 162 && c <= 165 || c === 166 || c === 167 || c === 169 || c === 171 || c === 172 || c === 174 || c === 176 || c === 177 || c === 182 || c === 187 || c === 191 || c === 215 || c === 247 || c >= 8208 && c <= 8213 || c >= 8214 && c <= 8215 || c === 8216 || c === 8217 || c === 8218 || c >= 8219 && c <= 8220 || c === 8221 || c === 8222 || c === 8223 || c >= 8224 && c <= 8231 || c >= 8240 && c <= 8248 || c === 8249 || c === 8250 || c >= 8251 && c <= 8254 || c >= 8257 && c <= 8259 || c === 8260 || c === 8261 || c === 8262 || c >= 8263 && c <= 8273 || c === 8274 || c === 8275 || c >= 8277 && c <= 8286 || c >= 8592 && c <= 8596 || c >= 8597 && c <= 8601 || c >= 8602 && c <= 8603 || c >= 8604 && c <= 8607 || c === 8608 || c >= 8609 && c <= 8610 || c === 8611 || c >= 8612 && c <= 8613 || c === 8614 || c >= 8615 && c <= 8621 || c === 8622 || c >= 8623 && c <= 8653 || c >= 8654 && c <= 8655 || c >= 8656 && c <= 8657 || c === 8658 || c === 8659 || c === 8660 || c >= 8661 && c <= 8691 || c >= 8692 && c <= 8959 || c >= 8960 && c <= 8967 || c === 8968 || c === 8969 || c === 8970 || c === 8971 || c >= 8972 && c <= 8991 || c >= 8992 && c <= 8993 || c >= 8994 && c <= 9e3 || c === 9001 || c === 9002 || c >= 9003 && c <= 9083 || c === 9084 || c >= 9085 && c <= 9114 || c >= 9115 && c <= 9139 || c >= 9140 && c <= 9179 || c >= 9180 && c <= 9185 || c >= 9186 && c <= 9254 || c >= 9255 && c <= 9279 || c >= 9280 && c <= 9290 || c >= 9291 && c <= 9311 || c >= 9472 && c <= 9654 || c === 9655 || c >= 9656 && c <= 9664 || c === 9665 || c >= 9666 && c <= 9719 || c >= 9720 && c <= 9727 || c >= 9728 && c <= 9838 || c === 9839 || c >= 9840 && c <= 10087 || c === 10088 || c === 10089 || c === 10090 || c === 10091 || c === 10092 || c === 10093 || c === 10094 || c === 10095 || c === 10096 || c === 10097 || c === 10098 || c === 10099 || c === 10100 || c === 10101 || c >= 10132 && c <= 10175 || c >= 10176 && c <= 10180 || c === 10181 || c === 10182 || c >= 10183 && c <= 10213 || c === 10214 || c === 10215 || c === 10216 || c === 10217 || c === 10218 || c === 10219 || c === 10220 || c === 10221 || c === 10222 || c === 10223 || c >= 10224 && c <= 10239 || c >= 10240 && c <= 10495 || c >= 10496 && c <= 10626 || c === 10627 || c === 10628 || c === 10629 || c === 10630 || c === 10631 || c === 10632 || c === 10633 || c === 10634 || c === 10635 || c === 10636 || c === 10637 || c === 10638 || c === 10639 || c === 10640 || c === 10641 || c === 10642 || c === 10643 || c === 10644 || c === 10645 || c === 10646 || c === 10647 || c === 10648 || c >= 10649 && c <= 10711 || c === 10712 || c === 10713 || c === 10714 || c === 10715 || c >= 10716 && c <= 10747 || c === 10748 || c === 10749 || c >= 10750 && c <= 11007 || c >= 11008 && c <= 11055 || c >= 11056 && c <= 11076 || c >= 11077 && c <= 11078 || c >= 11079 && c <= 11084 || c >= 11085 && c <= 11123 || c >= 11124 && c <= 11125 || c >= 11126 && c <= 11157 || c === 11158 || c >= 11159 && c <= 11263 || c >= 11776 && c <= 11777 || c === 11778 || c === 11779 || c === 11780 || c === 11781 || c >= 11782 && c <= 11784 || c === 11785 || c === 11786 || c === 11787 || c === 11788 || c === 11789 || c >= 11790 && c <= 11798 || c === 11799 || c >= 11800 && c <= 11801 || c === 11802 || c === 11803 || c === 11804 || c === 11805 || c >= 11806 && c <= 11807 || c === 11808 || c === 11809 || c === 11810 || c === 11811 || c === 11812 || c === 11813 || c === 11814 || c === 11815 || c === 11816 || c === 11817 || c >= 11818 && c <= 11822 || c === 11823 || c >= 11824 && c <= 11833 || c >= 11834 && c <= 11835 || c >= 11836 && c <= 11839 || c === 11840 || c === 11841 || c === 11842 || c >= 11843 && c <= 11855 || c >= 11856 && c <= 11857 || c === 11858 || c >= 11859 && c <= 11903 || c >= 12289 && c <= 12291 || c === 12296 || c === 12297 || c === 12298 || c === 12299 || c === 12300 || c === 12301 || c === 12302 || c === 12303 || c === 12304 || c === 12305 || c >= 12306 && c <= 12307 || c === 12308 || c === 12309 || c === 12310 || c === 12311 || c === 12312 || c === 12313 || c === 12314 || c === 12315 || c === 12316 || c === 12317 || c >= 12318 && c <= 12319 || c === 12320 || c === 12336 || c === 64830 || c === 64831 || c >= 65093 && c <= 65094;
}

// node_modules/@internationalized/message/node_modules/@formatjs/icu-messageformat-parser/lib/index.js
function pruneLocation(els) {
  els.forEach(function(el) {
    delete el.location;
    if (isSelectElement(el) || isPluralElement(el)) {
      for (var k in el.options) {
        delete el.options[k].location;
        pruneLocation(el.options[k].value);
      }
    } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {
      delete el.style.location;
    } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {
      delete el.style.location;
    } else if (isTagElement(el)) {
      pruneLocation(el.children);
    }
  });
}
function parse2(message, opts) {
  if (opts === void 0) {
    opts = {};
  }
  opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
  var result = new Parser(message, opts).parse();
  if (result.err) {
    var error = SyntaxError(ErrorKind[result.err.kind]);
    error.location = result.err.location;
    error.originalMessage = result.err.message;
    throw error;
  }
  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
    pruneLocation(result.val);
  }
  return result.val;
}

// node_modules/@internationalized/message/node_modules/@formatjs/fast-memoize/lib/index.js
init_react_import();
function memoize(fn, options) {
  var cache2 = options && options.cache ? options.cache : cacheDefault;
  var serializer = options && options.serializer ? options.serializer : serializerDefault;
  var strategy = options && options.strategy ? options.strategy : strategyDefault;
  return strategy(fn, {
    cache: cache2,
    serializer
  });
}
function isPrimitive(value) {
  return value == null || typeof value === "number" || typeof value === "boolean";
}
function monadic(fn, cache2, serializer, arg) {
  var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
  var computedValue = cache2.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.call(this, arg);
    cache2.set(cacheKey, computedValue);
  }
  return computedValue;
}
function variadic(fn, cache2, serializer) {
  var args = Array.prototype.slice.call(arguments, 3);
  var cacheKey = serializer(args);
  var computedValue = cache2.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.apply(this, args);
    cache2.set(cacheKey, computedValue);
  }
  return computedValue;
}
function assemble(fn, context2, strategy, cache2, serialize) {
  return strategy.bind(context2, fn, cache2, serialize);
}
function strategyDefault(fn, options) {
  var strategy = fn.length === 1 ? monadic : variadic;
  return assemble(fn, this, strategy, options.cache.create(), options.serializer);
}
function strategyVariadic(fn, options) {
  return assemble(fn, this, variadic, options.cache.create(), options.serializer);
}
function strategyMonadic(fn, options) {
  return assemble(fn, this, monadic, options.cache.create(), options.serializer);
}
var serializerDefault = function() {
  return JSON.stringify(arguments);
};
function ObjectWithoutPrototypeCache() {
  this.cache = /* @__PURE__ */ Object.create(null);
}
ObjectWithoutPrototypeCache.prototype.get = function(key) {
  return this.cache[key];
};
ObjectWithoutPrototypeCache.prototype.set = function(key, value) {
  this.cache[key] = value;
};
var cacheDefault = {
  create: function create() {
    return new ObjectWithoutPrototypeCache();
  }
};
var strategies = {
  variadic: strategyVariadic,
  monadic: strategyMonadic
};

// node_modules/@internationalized/message/node_modules/intl-messageformat/lib/src/formatters.js
init_react_import();

// node_modules/@internationalized/message/node_modules/intl-messageformat/lib/src/error.js
init_react_import();
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["MISSING_VALUE"] = "MISSING_VALUE";
  ErrorCode2["INVALID_VALUE"] = "INVALID_VALUE";
  ErrorCode2["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var FormatError = function(_super) {
  __extends(FormatError2, _super);
  function FormatError2(msg, code, originalMessage) {
    var _this = _super.call(this, msg) || this;
    _this.code = code;
    _this.originalMessage = originalMessage;
    return _this;
  }
  FormatError2.prototype.toString = function() {
    return "[formatjs Error: " + this.code + "] " + this.message;
  };
  return FormatError2;
}(Error);
var InvalidValueError = function(_super) {
  __extends(InvalidValueError2, _super);
  function InvalidValueError2(variableId, value, options, originalMessage) {
    return _super.call(this, 'Invalid values for "' + variableId + '": "' + value + '". Options are "' + Object.keys(options).join('", "') + '"', ErrorCode.INVALID_VALUE, originalMessage) || this;
  }
  return InvalidValueError2;
}(FormatError);
var InvalidValueTypeError = function(_super) {
  __extends(InvalidValueTypeError2, _super);
  function InvalidValueTypeError2(value, type, originalMessage) {
    return _super.call(this, 'Value for "' + value + '" must be of type ' + type, ErrorCode.INVALID_VALUE, originalMessage) || this;
  }
  return InvalidValueTypeError2;
}(FormatError);
var MissingValueError = function(_super) {
  __extends(MissingValueError2, _super);
  function MissingValueError2(variableId, originalMessage) {
    return _super.call(this, 'The intl string context variable "' + variableId + '" was not provided to the string "' + originalMessage + '"', ErrorCode.MISSING_VALUE, originalMessage) || this;
  }
  return MissingValueError2;
}(FormatError);

// node_modules/@internationalized/message/node_modules/intl-messageformat/lib/src/formatters.js
var PART_TYPE;
(function(PART_TYPE2) {
  PART_TYPE2[PART_TYPE2["literal"] = 0] = "literal";
  PART_TYPE2[PART_TYPE2["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
  if (parts.length < 2) {
    return parts;
  }
  return parts.reduce(function(all, part) {
    var lastPart = all[all.length - 1];
    if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {
      all.push(part);
    } else {
      lastPart.value += part.value;
    }
    return all;
  }, []);
}
function isFormatXMLElementFn(el) {
  return typeof el === "function";
}
function formatToParts(els, locales, formatters, formats, values, currentPluralValue, originalMessage) {
  if (els.length === 1 && isLiteralElement(els[0])) {
    return [
      {
        type: PART_TYPE.literal,
        value: els[0].value
      }
    ];
  }
  var result = [];
  for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
    var el = els_1[_i];
    if (isLiteralElement(el)) {
      result.push({
        type: PART_TYPE.literal,
        value: el.value
      });
      continue;
    }
    if (isPoundElement(el)) {
      if (typeof currentPluralValue === "number") {
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getNumberFormat(locales).format(currentPluralValue)
        });
      }
      continue;
    }
    var varName = el.value;
    if (!(values && varName in values)) {
      throw new MissingValueError(varName, originalMessage);
    }
    var value = values[varName];
    if (isArgumentElement(el)) {
      if (!value || typeof value === "string" || typeof value === "number") {
        value = typeof value === "string" || typeof value === "number" ? String(value) : "";
      }
      result.push({
        type: typeof value === "string" ? PART_TYPE.literal : PART_TYPE.object,
        value
      });
      continue;
    }
    if (isDateElement(el)) {
      var style = typeof el.style === "string" ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTimeElement(el)) {
      var style = typeof el.style === "string" ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isNumberElement(el)) {
      var style = typeof el.style === "string" ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : void 0;
      if (style && style.scale) {
        value = value * (style.scale || 1);
      }
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getNumberFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTagElement(el)) {
      var children = el.children, value_1 = el.value;
      var formatFn = values[value_1];
      if (!isFormatXMLElementFn(formatFn)) {
        throw new InvalidValueTypeError(value_1, "function", originalMessage);
      }
      var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);
      var chunks = formatFn(parts.map(function(p) {
        return p.value;
      }));
      if (!Array.isArray(chunks)) {
        chunks = [chunks];
      }
      result.push.apply(result, chunks.map(function(c) {
        return {
          type: typeof c === "string" ? PART_TYPE.literal : PART_TYPE.object,
          value: c
        };
      }));
    }
    if (isSelectElement(el)) {
      var opt = el.options[value] || el.options.other;
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
      continue;
    }
    if (isPluralElement(el)) {
      var opt = el.options["=" + value];
      if (!opt) {
        if (!Intl.PluralRules) {
          throw new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API, originalMessage);
        }
        var rule = formatters.getPluralRules(locales, { type: el.pluralType }).select(value - (el.offset || 0));
        opt = el.options[rule] || el.options.other;
      }
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));
      continue;
    }
  }
  return mergeLiteral(result);
}

// node_modules/@internationalized/message/node_modules/intl-messageformat/lib/src/core.js
function mergeConfig(c1, c2) {
  if (!c2) {
    return c1;
  }
  return __assign(__assign(__assign({}, c1 || {}), c2 || {}), Object.keys(c1).reduce(function(all, k) {
    all[k] = __assign(__assign({}, c1[k]), c2[k] || {});
    return all;
  }, {}));
}
function mergeConfigs(defaultConfig, configs) {
  if (!configs) {
    return defaultConfig;
  }
  return Object.keys(defaultConfig).reduce(function(all, k) {
    all[k] = mergeConfig(defaultConfig[k], configs[k]);
    return all;
  }, __assign({}, defaultConfig));
}
function createFastMemoizeCache(store) {
  return {
    create: function() {
      return {
        get: function(key) {
          return store[key];
        },
        set: function(key, value) {
          store[key] = value;
        }
      };
    }
  };
}
function createDefaultFormatters(cache2) {
  if (cache2 === void 0) {
    cache2 = {
      number: {},
      dateTime: {},
      pluralRules: {}
    };
  }
  return {
    getNumberFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache2.number),
      strategy: strategies.variadic
    }),
    getDateTimeFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache2.dateTime),
      strategy: strategies.variadic
    }),
    getPluralRules: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache2.pluralRules),
      strategy: strategies.variadic
    })
  };
}
var IntlMessageFormat = function() {
  function IntlMessageFormat2(message, locales, overrideFormats, opts) {
    var _this = this;
    if (locales === void 0) {
      locales = IntlMessageFormat2.defaultLocale;
    }
    this.formatterCache = {
      number: {},
      dateTime: {},
      pluralRules: {}
    };
    this.format = function(values) {
      var parts = _this.formatToParts(values);
      if (parts.length === 1) {
        return parts[0].value;
      }
      var result = parts.reduce(function(all, part) {
        if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== "string") {
          all.push(part.value);
        } else {
          all[all.length - 1] += part.value;
        }
        return all;
      }, []);
      if (result.length <= 1) {
        return result[0] || "";
      }
      return result;
    };
    this.formatToParts = function(values) {
      return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, void 0, _this.message);
    };
    this.resolvedOptions = function() {
      return {
        locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0]
      };
    };
    this.getAst = function() {
      return _this.ast;
    };
    if (typeof message === "string") {
      this.message = message;
      if (!IntlMessageFormat2.__parse) {
        throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
      }
      this.ast = IntlMessageFormat2.__parse(message, {
        ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag
      });
    } else {
      this.ast = message;
    }
    if (!Array.isArray(this.ast)) {
      throw new TypeError("A message must be provided as a String or AST.");
    }
    this.formats = mergeConfigs(IntlMessageFormat2.formats, overrideFormats);
    this.locales = locales;
    this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);
  }
  Object.defineProperty(IntlMessageFormat2, "defaultLocale", {
    get: function() {
      if (!IntlMessageFormat2.memoizedDefaultLocale) {
        IntlMessageFormat2.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;
      }
      return IntlMessageFormat2.memoizedDefaultLocale;
    },
    enumerable: false,
    configurable: true
  });
  IntlMessageFormat2.memoizedDefaultLocale = null;
  IntlMessageFormat2.__parse = parse2;
  IntlMessageFormat2.formats = {
    number: {
      integer: {
        maximumFractionDigits: 0
      },
      currency: {
        style: "currency"
      },
      percent: {
        style: "percent"
      }
    },
    date: {
      short: {
        month: "numeric",
        day: "numeric",
        year: "2-digit"
      },
      medium: {
        month: "short",
        day: "numeric",
        year: "numeric"
      },
      long: {
        month: "long",
        day: "numeric",
        year: "numeric"
      },
      full: {
        weekday: "long",
        month: "long",
        day: "numeric",
        year: "numeric"
      }
    },
    time: {
      short: {
        hour: "numeric",
        minute: "numeric"
      },
      medium: {
        hour: "numeric",
        minute: "numeric",
        second: "numeric"
      },
      long: {
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        timeZoneName: "short"
      },
      full: {
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        timeZoneName: "short"
      }
    }
  };
  return IntlMessageFormat2;
}();

// node_modules/@internationalized/message/node_modules/intl-messageformat/lib/index.js
var lib_default = IntlMessageFormat;

// node_modules/@internationalized/message/dist/module.js
function $parcel$export10(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $70eee6030fd7c1a1$exports = {};
$parcel$export10($70eee6030fd7c1a1$exports, "MessageDictionary", () => $70eee6030fd7c1a1$export$64839e615120df17);
var $70eee6030fd7c1a1$export$64839e615120df17 = class {
  getStringForLocale(key, locale) {
    let strings = this.messages[locale];
    if (!strings) {
      strings = $70eee6030fd7c1a1$var$getStringsForLocale(locale, this.messages, this.defaultLocale);
      this.messages[locale] = strings;
    }
    let string = strings[key];
    if (!string)
      throw new Error(`Could not find intl message ${key} in ${locale} locale`);
    return string;
  }
  constructor(messages, defaultLocale = "en-US") {
    this.messages = __spreadValues({}, messages);
    this.defaultLocale = defaultLocale;
  }
};
function $70eee6030fd7c1a1$var$getStringsForLocale(locale, strings, defaultLocale = "en-US") {
  if (strings[locale])
    return strings[locale];
  let language = $70eee6030fd7c1a1$var$getLanguage(locale);
  for (let key in strings) {
    if (key.startsWith(language + "-"))
      return strings[key];
  }
  return strings[defaultLocale];
}
function $70eee6030fd7c1a1$var$getLanguage(locale) {
  if (Intl.Locale)
    return new Intl.Locale(locale).language;
  return locale.split("-")[0];
}
var $a96338b8d4eb3cb0$exports = {};
$parcel$export10($a96338b8d4eb3cb0$exports, "MessageFormatter", () => $a96338b8d4eb3cb0$export$526ebc05ff964723);
var $a96338b8d4eb3cb0$export$526ebc05ff964723 = class {
  format(key, variables) {
    let message = this.cache[key];
    if (!message) {
      let msg = this.messages.getStringForLocale(key, this.locale);
      if (!msg)
        throw new Error(`Could not find intl message ${key} in ${this.locale} locale`);
      message = new lib_default(msg, this.locale);
      this.cache[key] = message;
    }
    let varCopy;
    if (variables)
      varCopy = Object.keys(variables).reduce((acc, key2) => {
        acc[key2] = variables[key2] == null ? false : variables[key2];
        return acc;
      }, {});
    return message.format(varCopy);
  }
  constructor(locale, messages) {
    this.locale = locale;
    this.messages = messages;
    this.cache = {};
  }
};

// node_modules/@internationalized/date/dist/module.js
init_react_import();
var $7c5f6fbf42389787$var$HOUR_PARTS = 1080;
var $7c5f6fbf42389787$var$DAY_PARTS = 24 * $7c5f6fbf42389787$var$HOUR_PARTS;
var $7c5f6fbf42389787$var$MONTH_DAYS = 29;
var $7c5f6fbf42389787$var$MONTH_FRACT = 12 * $7c5f6fbf42389787$var$HOUR_PARTS + 793;
var $7c5f6fbf42389787$var$MONTH_PARTS = $7c5f6fbf42389787$var$MONTH_DAYS * $7c5f6fbf42389787$var$DAY_PARTS + $7c5f6fbf42389787$var$MONTH_FRACT;
var $fb18d541ea1ad717$var$formatterCache = /* @__PURE__ */ new Map();
var $fb18d541ea1ad717$export$ad991b66133851cf = class {
  format(value) {
    return this.formatter.format(value);
  }
  formatToParts(value) {
    return this.formatter.formatToParts(value);
  }
  formatRange(start, end) {
    if (typeof this.formatter.formatRange === "function")
      return this.formatter.formatRange(start, end);
    if (end < start)
      throw new RangeError("End date must be >= start date");
    return `${this.formatter.format(start)} \u2013 ${this.formatter.format(end)}`;
  }
  formatRangeToParts(start, end) {
    if (typeof this.formatter.formatRangeToParts === "function")
      return this.formatter.formatRangeToParts(start, end);
    if (end < start)
      throw new RangeError("End date must be >= start date");
    let startParts = this.formatter.formatToParts(start);
    let endParts = this.formatter.formatToParts(end);
    return [
      ...startParts.map((p) => __spreadProps(__spreadValues({}, p), {
        source: "startRange"
      })),
      {
        type: "literal",
        value: " \u2013 ",
        source: "shared"
      },
      ...endParts.map((p) => __spreadProps(__spreadValues({}, p), {
        source: "endRange"
      }))
    ];
  }
  resolvedOptions() {
    let resolvedOptions = this.formatter.resolvedOptions();
    if ($fb18d541ea1ad717$var$hasBuggyResolvedHourCycle()) {
      if (!this.resolvedHourCycle)
        this.resolvedHourCycle = $fb18d541ea1ad717$var$getResolvedHourCycle(resolvedOptions.locale, this.options);
      resolvedOptions.hourCycle = this.resolvedHourCycle;
      resolvedOptions.hour12 = this.resolvedHourCycle === "h11" || this.resolvedHourCycle === "h12";
    }
    return resolvedOptions;
  }
  constructor(locale, options = {}) {
    this.formatter = $fb18d541ea1ad717$var$getCachedDateFormatter(locale, options);
    this.options = options;
  }
};
var $fb18d541ea1ad717$var$hour12Preferences = {
  true: {
    ja: "h11"
  },
  false: {}
};
function $fb18d541ea1ad717$var$getCachedDateFormatter(locale, options = {}) {
  if (typeof options.hour12 === "boolean" && $fb18d541ea1ad717$var$hasBuggyHour12Behavior()) {
    options = __spreadValues({}, options);
    let pref = $fb18d541ea1ad717$var$hour12Preferences[String(options.hour12)][locale.split("-")[0]];
    let defaultHourCycle = options.hour12 ? "h12" : "h23";
    options.hourCycle = pref !== null && pref !== void 0 ? pref : defaultHourCycle;
    delete options.hour12;
  }
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  if ($fb18d541ea1ad717$var$formatterCache.has(cacheKey))
    return $fb18d541ea1ad717$var$formatterCache.get(cacheKey);
  let numberFormatter = new Intl.DateTimeFormat(locale, options);
  $fb18d541ea1ad717$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
var $fb18d541ea1ad717$var$_hasBuggyHour12Behavior = null;
function $fb18d541ea1ad717$var$hasBuggyHour12Behavior() {
  if ($fb18d541ea1ad717$var$_hasBuggyHour12Behavior == null)
    $fb18d541ea1ad717$var$_hasBuggyHour12Behavior = new Intl.DateTimeFormat("en-US", {
      hour: "numeric",
      hour12: false
    }).format(new Date(2020, 2, 3, 0)) === "24";
  return $fb18d541ea1ad717$var$_hasBuggyHour12Behavior;
}
var $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle = null;
function $fb18d541ea1ad717$var$hasBuggyResolvedHourCycle() {
  if ($fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle == null)
    $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle = new Intl.DateTimeFormat("fr", {
      hour: "numeric",
      hour12: false
    }).resolvedOptions().hourCycle === "h12";
  return $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle;
}
function $fb18d541ea1ad717$var$getResolvedHourCycle(locale, options) {
  if (!options.timeStyle && !options.hour)
    return void 0;
  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, "");
  locale += (locale.includes("-u-") ? "" : "-u") + "-nu-latn";
  let formatter = $fb18d541ea1ad717$var$getCachedDateFormatter(locale, __spreadProps(__spreadValues({}, options), {
    timeZone: void 0
  }));
  let min2 = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find((p) => p.type === "hour").value, 10);
  let max2 = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find((p) => p.type === "hour").value, 10);
  if (min2 === 0 && max2 === 23)
    return "h23";
  if (min2 === 24 && max2 === 23)
    return "h24";
  if (min2 === 0 && max2 === 11)
    return "h11";
  if (min2 === 12 && max2 === 11)
    return "h12";
  throw new Error("Unexpected hour cycle result");
}

// node_modules/@internationalized/number/dist/module.js
init_react_import();
var $488c6ddbf4ef74c2$var$formatterCache = /* @__PURE__ */ new Map();
var $488c6ddbf4ef74c2$var$supportsSignDisplay = false;
try {
  $488c6ddbf4ef74c2$var$supportsSignDisplay = new Intl.NumberFormat("de-DE", {
    signDisplay: "exceptZero"
  }).resolvedOptions().signDisplay === "exceptZero";
} catch (e2) {
}
var $488c6ddbf4ef74c2$var$supportsUnit = false;
try {
  $488c6ddbf4ef74c2$var$supportsUnit = new Intl.NumberFormat("de-DE", {
    style: "unit",
    unit: "degree"
  }).resolvedOptions().style === "unit";
} catch (e1) {
}
var $488c6ddbf4ef74c2$var$UNITS = {
  degree: {
    narrow: {
      default: "\xB0",
      "ja-JP": " \u5EA6",
      "zh-TW": "\u5EA6",
      "sl-SI": " \xB0"
    }
  }
};
var $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5 = class {
  format(value) {
    let res = "";
    if (!$488c6ddbf4ef74c2$var$supportsSignDisplay && this.options.signDisplay != null)
      res = $488c6ddbf4ef74c2$export$711b50b3c525e0f2(this.numberFormatter, this.options.signDisplay, value);
    else
      res = this.numberFormatter.format(value);
    if (this.options.style === "unit" && !$488c6ddbf4ef74c2$var$supportsUnit) {
      var ref;
      let { unit, unitDisplay = "short", locale } = this.resolvedOptions();
      let values = (ref = $488c6ddbf4ef74c2$var$UNITS[unit]) === null || ref === void 0 ? void 0 : ref[unitDisplay];
      res += values[locale] || values.default;
    }
    return res;
  }
  formatToParts(value) {
    return this.numberFormatter.formatToParts(value);
  }
  resolvedOptions() {
    let options = this.numberFormatter.resolvedOptions();
    if (!$488c6ddbf4ef74c2$var$supportsSignDisplay && this.options.signDisplay != null)
      options = __spreadProps(__spreadValues({}, options), {
        signDisplay: this.options.signDisplay
      });
    if (!$488c6ddbf4ef74c2$var$supportsUnit && this.options.style === "unit")
      options = __spreadProps(__spreadValues({}, options), {
        style: "unit",
        unit: this.options.unit,
        unitDisplay: this.options.unitDisplay
      });
    return options;
  }
  constructor(locale, options = {}) {
    this.numberFormatter = $488c6ddbf4ef74c2$var$getCachedNumberFormatter(locale, options);
    this.options = options;
  }
};
function $488c6ddbf4ef74c2$var$getCachedNumberFormatter(locale, options = {}) {
  let { numberingSystem } = options;
  if (numberingSystem && locale.indexOf("-u-nu-") === -1)
    locale = `${locale}-u-nu-${numberingSystem}`;
  if (options.style === "unit" && !$488c6ddbf4ef74c2$var$supportsUnit) {
    var ref;
    let { unit, unitDisplay = "short" } = options;
    if (!unit)
      throw new Error('unit option must be provided with style: "unit"');
    if (!((ref = $488c6ddbf4ef74c2$var$UNITS[unit]) === null || ref === void 0 ? void 0 : ref[unitDisplay]))
      throw new Error(`Unsupported unit ${unit} with unitDisplay = ${unitDisplay}`);
    options = __spreadProps(__spreadValues({}, options), {
      style: "decimal"
    });
  }
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  if ($488c6ddbf4ef74c2$var$formatterCache.has(cacheKey))
    return $488c6ddbf4ef74c2$var$formatterCache.get(cacheKey);
  let numberFormatter = new Intl.NumberFormat(locale, options);
  $488c6ddbf4ef74c2$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
function $488c6ddbf4ef74c2$export$711b50b3c525e0f2(numberFormat, signDisplay, num) {
  if (signDisplay === "auto")
    return numberFormat.format(num);
  else if (signDisplay === "never")
    return numberFormat.format(Math.abs(num));
  else {
    let needsPositiveSign = false;
    if (signDisplay === "always")
      needsPositiveSign = num > 0 || Object.is(num, 0);
    else if (signDisplay === "exceptZero") {
      if (Object.is(num, -0) || Object.is(num, 0))
        num = Math.abs(num);
      else
        needsPositiveSign = num > 0;
    }
    if (needsPositiveSign) {
      let negative = numberFormat.format(-num);
      let noSign = numberFormat.format(num);
      let minus = negative.replace(noSign, "").replace(/\u200e|\u061C/, "");
      if ([
        ...minus
      ].length !== 1)
        console.warn("@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case");
      let positive = negative.replace(noSign, "!!!").replace(minus, "+").replace("!!!", noSign);
      return positive;
    } else
      return numberFormat.format(num);
  }
}
var $6c7bd7858deea686$var$CURRENCY_SIGN_REGEX = new RegExp("^.*\\(.*\\).*$");

// node_modules/@react-aria/i18n/dist/module.js
function $parcel$export11(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $18f2051aff69b9bf$exports = {};
$parcel$export11($18f2051aff69b9bf$exports, "I18nProvider", () => $18f2051aff69b9bf$export$a54013f0d02a8f82);
$parcel$export11($18f2051aff69b9bf$exports, "useLocale", () => $18f2051aff69b9bf$export$43bb16f9c6d9e3f7);
var $148a7a147e38ea7f$var$RTL_SCRIPTS = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
var $148a7a147e38ea7f$var$RTL_LANGS = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd764(locale) {
  if (Intl.Locale) {
    let script = new Intl.Locale(locale).maximize().script;
    return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(script);
  }
  let lang = locale.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);
}
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {
  let locale = typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  return {
    locale,
    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? "rtl" : "ltr"
  };
}
var $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
var $1e5a04cdaf7d1af8$var$listeners = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale() {
  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners)
    listener($1e5a04cdaf7d1af8$var$currentLocale);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {
  let isSSR = $9d939cbc98267846$export$535bd6ca7f90a273();
  let [defaultLocale, setDefaultLocale] = $iFADg$useState($1e5a04cdaf7d1af8$var$currentLocale);
  $iFADg$useEffect(() => {
    if ($1e5a04cdaf7d1af8$var$listeners.size === 0)
      window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners.size === 0)
        window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    };
  }, []);
  if (isSSR)
    return {
      locale: "en-US",
      direction: "ltr"
    };
  return defaultLocale;
}
var $18f2051aff69b9bf$var$I18nContext = /* @__PURE__ */ $iFADg$react.createContext(null);
function $18f2051aff69b9bf$export$a54013f0d02a8f82(props) {
  let { locale, children } = props;
  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();
  let value = locale ? {
    locale,
    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? "rtl" : "ltr"
  } : defaultLocale;
  return /* @__PURE__ */ $iFADg$react.createElement($18f2051aff69b9bf$var$I18nContext.Provider, {
    value
  }, children);
}
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {
  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();
  let context2 = $iFADg$useContext($18f2051aff69b9bf$var$I18nContext);
  return context2 || defaultLocale;
}
var $321bc95feeb923dd$exports = {};
$parcel$export11($321bc95feeb923dd$exports, "useMessageFormatter", () => $321bc95feeb923dd$export$ec23bf898b1eed85);
var $321bc95feeb923dd$var$cache = /* @__PURE__ */ new WeakMap();
function $321bc95feeb923dd$var$getCachedDictionary(strings) {
  let dictionary = $321bc95feeb923dd$var$cache.get(strings);
  if (!dictionary) {
    dictionary = new $70eee6030fd7c1a1$export$64839e615120df17(strings);
    $321bc95feeb923dd$var$cache.set(strings, dictionary);
  }
  return dictionary;
}
function $321bc95feeb923dd$export$ec23bf898b1eed85(strings) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let dictionary = $iFADg$useMemo(() => $321bc95feeb923dd$var$getCachedDictionary(strings), [
    strings
  ]);
  let formatter = $iFADg$useMemo(() => new $a96338b8d4eb3cb0$export$526ebc05ff964723(locale, dictionary), [
    locale,
    dictionary
  ]);
  return $iFADg$useCallback((key, variables) => formatter.format(key, variables), [
    formatter
  ]);
}
var $896ba0a80a8f4d36$exports = {};
$parcel$export11($896ba0a80a8f4d36$exports, "useDateFormatter", () => $896ba0a80a8f4d36$export$85fd5fdf27bacc79);
function $896ba0a80a8f4d36$export$85fd5fdf27bacc79(options) {
  let lastOptions = $iFADg$useRef(null);
  if (options && lastOptions.current && $896ba0a80a8f4d36$var$isEqual(options, lastOptions.current))
    options = lastOptions.current;
  lastOptions.current = options;
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  return $iFADg$useMemo(() => new $fb18d541ea1ad717$export$ad991b66133851cf(locale, options), [
    locale,
    options
  ]);
}
function $896ba0a80a8f4d36$var$isEqual(a, b) {
  if (a === b)
    return true;
  let aKeys = Object.keys(a);
  let bKeys = Object.keys(b);
  if (aKeys.length !== bKeys.length)
    return false;
  for (let key of aKeys) {
    if (b[key] !== a[key])
      return false;
  }
  return true;
}
var $a916eb452884faea$exports = {};
$parcel$export11($a916eb452884faea$exports, "useNumberFormatter", () => $a916eb452884faea$export$b7a616150fdb9f44);
function $a916eb452884faea$export$b7a616150fdb9f44(options = {}) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  return $iFADg$useMemo(() => new $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5(locale, options), [
    locale,
    options
  ]);
}
var $325a3faab7a68acd$exports = {};
$parcel$export11($325a3faab7a68acd$exports, "useCollator", () => $325a3faab7a68acd$export$a16aca283550c30d);
var $325a3faab7a68acd$var$cache = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d(options) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  if ($325a3faab7a68acd$var$cache.has(cacheKey))
    return $325a3faab7a68acd$var$cache.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);
  return formatter;
}
var $bb77f239b46e8c72$exports = {};
$parcel$export11($bb77f239b46e8c72$exports, "useFilter", () => $bb77f239b46e8c72$export$3274cf84b703fff);
function $bb77f239b46e8c72$export$3274cf84b703fff(options) {
  let collator = $325a3faab7a68acd$export$a16aca283550c30d(__spreadValues({
    usage: "search"
  }, options));
  return {
    startsWith(string, substring) {
      if (substring.length === 0)
        return true;
      string = string.normalize("NFC");
      substring = substring.normalize("NFC");
      return collator.compare(string.slice(0, substring.length), substring) === 0;
    },
    endsWith(string, substring) {
      if (substring.length === 0)
        return true;
      string = string.normalize("NFC");
      substring = substring.normalize("NFC");
      return collator.compare(string.slice(-substring.length), substring) === 0;
    },
    contains(string, substring) {
      if (substring.length === 0)
        return true;
      string = string.normalize("NFC");
      substring = substring.normalize("NFC");
      let scan = 0;
      let sliceLen = substring.length;
      for (; scan + sliceLen <= string.length; scan++) {
        let slice = string.slice(scan, scan + sliceLen);
        if (collator.compare(substring, slice) === 0)
          return true;
      }
      return false;
    }
  };
}

// node_modules/@react-aria/radio/dist/module.js
function $parcel$export12(e2, n2, v, s) {
  Object.defineProperty(e2, n2, { get: v, set: s, enumerable: true, configurable: true });
}
var $0d5c49892c1215da$exports = {};
$parcel$export12($0d5c49892c1215da$exports, "useRadio", () => $0d5c49892c1215da$export$37b0961d2f4751e2);
var $884aeceb3d67f00f$export$3b7b268d09480394 = /* @__PURE__ */ new WeakMap();
function $0d5c49892c1215da$export$37b0961d2f4751e2(props, state, ref) {
  let { value, children, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby } = props;
  const isDisabled = props.isDisabled || state.isDisabled;
  let hasChildren = children != null;
  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
  if (!hasChildren && !hasAriaLabel)
    console.warn("If you do not provide children, you must specify an aria-label for accessibility");
  let checked = state.selectedValue === value;
  let onChange = (e2) => {
    e2.stopPropagation();
    state.setSelectedValue(value);
  };
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad21({
    isDisabled
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c($3ef42575df84b30b$export$9d1611c77c2fe928(props, {
    onFocus: () => state.setLastFocusedValue(value)
  }), ref);
  let interactions = $3ef42575df84b30b$export$9d1611c77c2fe928(pressProps, focusableProps);
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
    labelable: true
  });
  let tabIndex = state.lastFocusedValue === value || state.lastFocusedValue == null ? 0 : -1;
  if (isDisabled)
    tabIndex = void 0;
  return {
    inputProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, __spreadProps(__spreadValues({}, interactions), {
      type: "radio",
      name: $884aeceb3d67f00f$export$3b7b268d09480394.get(state),
      tabIndex,
      disabled: isDisabled,
      checked,
      value,
      onChange
    }))
  };
}
var $430f30ed08ec25fa$exports = {};
$parcel$export12($430f30ed08ec25fa$exports, "useRadioGroup", () => $430f30ed08ec25fa$export$62b9571f283ff5c2);
function $430f30ed08ec25fa$export$62b9571f283ff5c2(props, state) {
  let { name, validationState, isReadOnly, isRequired, isDisabled, orientation = "vertical" } = props;
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let { labelProps, fieldProps } = $d191a55c9702f145$export$8467354a121f1b9f(__spreadProps(__spreadValues({}, props), {
    labelElementType: "span"
  }));
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
    labelable: true
  });
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec({
    onBlurWithin() {
      if (!state.selectedValue)
        state.setLastFocusedValue(null);
    }
  });
  let onKeyDown = (e2) => {
    let nextDir;
    switch (e2.key) {
      case "ArrowRight":
        if (direction === "rtl" && orientation !== "vertical")
          nextDir = "prev";
        else
          nextDir = "next";
        break;
      case "ArrowLeft":
        if (direction === "rtl" && orientation !== "vertical")
          nextDir = "next";
        else
          nextDir = "prev";
        break;
      case "ArrowDown":
        nextDir = "next";
        break;
      case "ArrowUp":
        nextDir = "prev";
        break;
      default:
        return;
    }
    e2.preventDefault();
    let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(e2.currentTarget, {
      from: e2.target
    });
    let nextElem;
    if (nextDir === "next") {
      nextElem = walker.nextNode();
      if (!nextElem) {
        walker.currentNode = e2.currentTarget;
        nextElem = walker.firstChild();
      }
    } else {
      nextElem = walker.previousNode();
      if (!nextElem) {
        walker.currentNode = e2.currentTarget;
        nextElem = walker.lastChild();
      }
    }
    if (nextElem) {
      nextElem.focus();
      state.setSelectedValue(nextElem.value);
    }
  };
  let groupName = $bdb11010cef70236$export$f680877a34711e37(name);
  $884aeceb3d67f00f$export$3b7b268d09480394.set(state, groupName);
  return {
    radioGroupProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, __spreadValues(__spreadValues({
      role: "radiogroup",
      onKeyDown,
      "aria-invalid": validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-readonly": isReadOnly || void 0,
      "aria-required": isRequired || void 0,
      "aria-disabled": isDisabled || void 0,
      "aria-orientation": orientation
    }, fieldProps), focusWithinProps)),
    labelProps
  };
}

// src/segmentedControl/SegmentedControl.tsx
import { AnimateSharedLayout as AnimateSharedLayout2, motion as motion10 } from "framer-motion";
import { createContext as createContext8, useContext as useContext8, useMemo as useMemo6, useRef as useRef16 } from "react";
import { mergeProps as mergeProps12, useFocusRing as useFocusRing4, useId, VisuallyHidden as VisuallyHidden3 } from "react-aria";
var SegmentedControlContext = createContext8(null);
var ControlOptionFactory = styled("label", {
  border: "1px solid $gray3",
  backgroundColor: "$background",
  paddingInline: "$7",
  borderRadius: "$controlRegular",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  userSelect: "none",
  position: "relative",
  cursor: "pointer",
  "&, label, span, div": {
    fontWeight: "$medium",
    whiteSpace: "nowrap"
  },
  "&:hover": {
    backgroundColor: "$gray5"
  },
  variants: {
    focusVisible: {
      true: {
        boxShadow: `0 0 0 3px hsl($colors$hsl_primary / 0.3)`
      }
    },
    isDisabled: { true: { backgroundColor: "$gray5", color: "$disabled", cursor: "not-allowed" } },
    controlSize: {
      small: {
        height: "$controlHeightSmall",
        paddingInline: "$3",
        svg: {
          display: "none"
        }
      },
      regular: {
        height: "$controlHeightRegular",
        paddingInline: "$7",
        svg: {
          size: fontPxToNum(3)
        }
      },
      large: {
        height: "$controlHeightLarge",
        paddingInline: "$8",
        svg: {
          size: fontPxToNum(4)
        }
      }
    },
    isSelected: {
      true: {
        borderColor: "$primary",
        borderWidth: "2px",
        backgroundColor: "$primary",
        color: "$white",
        position: "absolute",
        zIndex: "$focused",
        width: "calc(100% + 2px)",
        height: "calc(100% + 2px)",
        cursor: "default",
        "&:hover": {
          backgroundColor: "$primary"
        }
      }
    }
  },
  defaultVariants: {
    controlSize: "regular"
  },
  compoundVariants: [
    {
      isDisabled: true,
      isSelected: true,
      css: {
        borderColor: "$gray3",
        backgroundColor: "$gray3",
        color: "$disabled",
        cursor: "not-allowed",
        pointerEvents: "none"
      }
    }
  ]
});
var SegmentedControlGrid = styled("div", {
  $$optionsCount: "1",
  display: "grid",
  gridTemplateColumns: "repeat($$optionsCount, 1fr)",
  ".gc-control-parent:first-child": {
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0
  },
  ".gc-control-parent:not(:first-child):not(:last-child)": {
    borderRadius: 0,
    borderLeftWidth: 0
  },
  ".gc-control-parent:last-child": {
    borderTopLeftRadius: 0,
    borderBottomLeftRadius: 0,
    borderLeftWidth: 0
  },
  variants: {
    size: {
      small: {}
    }
  }
});
function SegmentedControl(props) {
  var _a2;
  const { label, labelProps, description, options } = props;
  const mapBooleanProps = {
    isDisabled: props.disabled,
    isReadOnly: props.readonly,
    isRequired: props.required
  };
  const state = $a54cdc5c1942b639$export$bca9d026f8e704eb(__spreadProps(__spreadValues(__spreadValues({}, props), mapBooleanProps), {
    defaultValue: options[0].value
  }));
  const { radioGroupProps, labelProps: ariaLabelProps } = $430f30ed08ec25fa$export$62b9571f283ff5c2(__spreadProps(__spreadValues(__spreadValues({}, props), mapBooleanProps), { label }), state);
  const layoutId = useId();
  const controlOptions = useMemo6(() => options.map((option, index2) => /* @__PURE__ */ React.createElement(ControlOption, __spreadValues({
    key: option.value,
    size: props.size,
    first: index2 === 0,
    last: index2 === options.length - 1
  }, option))), [options]);
  return /* @__PURE__ */ React.createElement(FieldWrapper, __spreadValues({
    as: "fieldset"
  }, radioGroupProps), /* @__PURE__ */ React.createElement(FieldLabelAndDescription, {
    label,
    labelProps: mergeProps12(ariaLabelProps, labelProps),
    description
  }), /* @__PURE__ */ React.createElement(SegmentedControlGrid, {
    css: { $$optionsCount: (_a2 = options.length) != null ? _a2 : 1 }
  }, /* @__PURE__ */ React.createElement(SegmentedControlContext.Provider, {
    value: state
  }, /* @__PURE__ */ React.createElement(AnimateSharedLayout2, {
    key: layoutId
  }, controlOptions))));
}
SegmentedControl.defaultProps = {
  size: "regular"
};
var controlOptionTransition = {
  type: "spring",
  bounce: 0.15,
  duration: 0.3
};
function ControlOption(props) {
  const { label, size } = props;
  const state = useContext8(SegmentedControlContext);
  const ref = useRef16(null);
  const { inputProps } = $0d5c49892c1215da$export$37b0961d2f4751e2(__spreadProps(__spreadValues({}, props), { "aria-label": label }), state, ref);
  const { isFocusVisible, focusProps } = useFocusRing4();
  const isSelected = state.selectedValue === props.value;
  const borderRadiusAccessor = (props == null ? void 0 : props.first) ? "first" : (props == null ? void 0 : props.last) ? "last" : "default";
  const animateStyles = {
    first: {
      borderTopLeftRadius: 5,
      borderBottomLeftRadius: 5,
      borderTopRightRadius: 0,
      borderBottomRightRadius: 0
    },
    last: {
      borderTopLeftRadius: 0,
      borderBottomLeftRadius: 0,
      borderTopRightRadius: 5,
      borderBottomRightRadius: 5
    },
    default: {
      borderRadius: 0
    }
  }[borderRadiusAccessor];
  return /* @__PURE__ */ React.createElement(ControlOptionFactory, {
    isDisabled: state.isDisabled,
    className: "gc-control-parent",
    key: props.value,
    controlSize: size
  }, /* @__PURE__ */ React.createElement(VisuallyHidden3, null, /* @__PURE__ */ React.createElement("input", __spreadValues(__spreadValues({}, inputProps), focusProps))), /* @__PURE__ */ React.createElement(HStack, {
    align: "center",
    space: "small"
  }, /* @__PURE__ */ React.createElement(Label, {
    as: "span",
    css: { pointerEvents: "none" },
    size
  }, label)), isSelected && /* @__PURE__ */ React.createElement(ControlOptionFactory, {
    controlSize: size,
    isSelected: true,
    isDisabled: state.isDisabled,
    focusVisible: isFocusVisible,
    className: "gc-control-selector",
    as: motion10.div,
    initial: false,
    animate: animateStyles,
    transition: controlOptionTransition,
    layoutId: "gc-control-selector"
  }, /* @__PURE__ */ React.createElement(HStack, {
    align: "center",
    space: "small"
  }, /* @__PURE__ */ React.createElement(CheckCircleIcon, {
    size: "$3"
  }), /* @__PURE__ */ React.createElement(Label, {
    as: "span",
    css: { pointerEvents: "none" },
    size
  }, label))));
}

// src/formik/FormikSegmentedControl.tsx
function FormikSegementedControl(props) {
  const [field, _, helpers] = useFormikHelper(props);
  return /* @__PURE__ */ React.createElement(SegmentedControl, __spreadProps(__spreadValues({}, mergeProps13(field, props)), {
    onChange: (value) => {
      var _a2;
      (_a2 = props == null ? void 0 : props.onChange) == null ? void 0 : _a2.call(props, value);
      helpers.setValue(value);
    }
  }));
}

// src/formik/FormikForm.tsx
init_react_import();
import { Form as FormikBaseForm, useFormikContext as useFormikContext3 } from "formik";
import { forwardRef as forwardRef11 } from "react";
import { mergeRefs as mergeRefs7 } from "react-laag";
var FormikForm = forwardRef11((_a2, forwardedRef) => {
  var _b = _a2, { action, children, initialFocus } = _b, props = __objRest(_b, ["action", "children", "initialFocus"]);
  const [ref, value] = useFocusManager({ initialFocus });
  const _action = action != null ? action : "#";
  const { handleReset, handleSubmit } = useFormikContext3();
  return /* @__PURE__ */ React.createElement(FocusManagementContext.Provider, {
    value
  }, /* @__PURE__ */ React.createElement(Form, __spreadValues({
    as: FormikBaseForm,
    ref: mergeRefs7(ref, forwardedRef),
    onSubmit: handleSubmit,
    onReset: handleReset,
    action: _action
  }, props), typeof children === "function" ? children(value) : children));
});

// src/formik/FormikSelectField.tsx
init_react_import();
import { mergeProps as mergeProps15 } from "react-aria";

// src/select/Select.tsx
init_react_import();
import { mergeRefs as mergeRefs8 } from "react-laag";
import { isEmpty } from "lodash-es";
import { forwardRef as forwardRef12, useRef as useRef17, useState as useState15 } from "react";
var SelectFactory = styled("select", {
  $$shadowColor: "$colors$gray3",
  cursor: "pointer",
  display: "flex",
  WebkitAppearance: "none",
  MozAppearance: "none",
  border: "none",
  boxShadow: "0 0 0 1px $$shadowColor",
  fontSize: "$body",
  width: "100%",
  minWidth: "$8",
  borderRadius: "$1",
  color: "$label",
  backgroundColor: "$background",
  paddingLeft: "$3",
  paddingRight: "$3",
  "&:focus": {
    $$shadowColor: "$colors$primary",
    outline: "none",
    boxShadow: `0 0 0 1px $$shadowColor, 0 0 0 1px $$shadowColor inset`
  },
  "&[disabled]": {
    cursor: "not-allowed",
    backgroundColor: "$gray4"
  },
  "&:invalid": {
    $$shadowColor: "$colors$danger",
    backgroundColor: "hsl($hsl_danger / 0.15)",
    "&::placeholder": {
      color: "hsl($hsl_danger / 0.65)"
    },
    "&:focus": {
      boxShadow: `0 0 0 2px $$shadowColor`
    }
  },
  variants: {
    size: {
      small: {
        borderRadius: "calc($1 / 2)",
        padding: "0 $4 0 $3",
        height: "calc($controlHeightSmall - 2px)",
        fontSize: "$2"
      },
      regular: {
        padding: "0 $5 0 $3",
        height: "calc($controlHeightRegular - 2px)",
        fontSize: "$3"
      },
      large: {
        padding: "0 $6 0 $4",
        height: "calc($controlHeightLarge - 2px)"
      }
    },
    placeholder: {
      true: {
        color: "$placeholderText"
      },
      false: {}
    }
  },
  defaultVariants: {
    size: "regular"
  }
});
var Select = forwardRef12((_a2, forwardedRef) => {
  var _b = _a2, { placeholder } = _b, props = __objRest(_b, ["placeholder"]);
  const [value, setValue] = useState15(props.value || props.defaultValue);
  const ref = useRef17();
  const validityProps = useCustomValidity(ref, props);
  return /* @__PURE__ */ React.createElement(Box, {
    css: {
      display: "inline-flex",
      flex: "1",
      width: "100%",
      position: "relative",
      alignItems: "center"
    }
  }, /* @__PURE__ */ React.createElement(SelectFactory, __spreadProps(__spreadValues(__spreadValues({}, validityProps), props), {
    onChange: (e2) => {
      var _a3;
      (_a3 = props.onChange) == null ? void 0 : _a3.call(props, e2);
      setValue(e2.currentTarget.value);
    },
    placeholder: isEmpty(value) && !!placeholder,
    ref: mergeRefs8(forwardedRef, ref)
  }), placeholder && /* @__PURE__ */ React.createElement("option", {
    selected: true,
    value: "",
    disabled: true
  }, placeholder), props.children), /* @__PURE__ */ React.createElement(ChevronDownIcon, {
    color: "$gray1",
    css: {
      height: "25%",
      position: "absolute",
      right: "$2",
      top: "40%",
      pointerEvents: "none",
      backgroundImage: "linear-gradient(to left transparent, $colors$background)",
      color: "$gray2"
    }
  }));
});
Select.toString = SelectFactory.toString;
Select.defaultProps = {
  disabled: false,
  invalid: false
};

// src/select/SelectField.tsx
init_react_import();
import { mergeProps as mergeProps14, useLabel } from "react-aria";
function SelectField(props) {
  const { labelProps: ariaLabelProps, fieldProps } = useLabel(props);
  const { label, description, labelProps, invalid = null, validationMessage, helpText } = props;
  return /* @__PURE__ */ React.createElement(FieldWrapper, {
    css: props.css
  }, /* @__PURE__ */ React.createElement(FieldLabelAndDescription, {
    label,
    labelProps: mergeProps14(ariaLabelProps, labelProps),
    description
  }), /* @__PURE__ */ React.createElement(Select, __spreadValues({}, mergeProps14(fieldProps, props))), /* @__PURE__ */ React.createElement(FieldErrorAndHelpText, {
    helpText,
    errorMessage: validationMessage,
    invalid
  }));
}
SelectField.defaultProps = {
  disabled: false,
  invalid: false,
  size: "regular"
};

// src/select/MultiSelect.tsx
init_react_import();
var MultiSelectFactory = styled("select", {
  cursor: "pointer",
  display: "flex",
  WebkitAppearance: "none",
  MozAppearance: "none",
  border: "none",
  boxShadow: "0 0 0 1.5px $colors$gray3",
  fontSize: "$body",
  width: "100%",
  minWidth: "$8",
  borderRadius: "$1",
  color: "$label",
  backgroundColor: "$background",
  paddingLeft: "$3",
  paddingRight: "$3",
  "&:focus": {
    outline: "none",
    boxShadow: `0 0 0 2px hsl($colors$hsl_primary / 0.25)`,
    option: {
      "&:checked": {
        background: "linear-gradient(0deg, hsl($colors$hsl_primary / 0.1) 0%, hsl($colors$hsl_primary / 0.1) 100%)"
      }
    }
  },
  "&[disabled]": {
    cursor: "not-allowed",
    backgroundColor: "$gray4"
  },
  option: {
    whiteSpace: "nowrap",
    textOverflow: "ellipsis",
    overflow: "hidden",
    width: "100%",
    marginTop: "calc($1 / 2)",
    borderRadius: "calc($1 / 2)",
    padding: "$1",
    "&:checked": {
      background: "linear-gradient(0deg, $colors$gray5 0%, $colors$gray5 100%)"
    }
  },
  variants: {
    size: {
      small: {
        borderRadius: "calc($1 / 2)",
        padding: "calc($1 / 4) calc($1 / 2)"
      },
      regular: {
        padding: "calc($1 / 4) calc($1 / 2)",
        fontSize: "$3"
      },
      large: {
        padding: "calc($1 / 4) calc($1 / 2)"
      }
    }
  },
  defaultVariants: {
    size: "regular"
  }
});
function MultiSelect(props) {
  return /* @__PURE__ */ React.createElement(VStack, {
    css: { width: "100%" },
    space: "small"
  }, props.label && /* @__PURE__ */ React.createElement(Label, null, props.label), /* @__PURE__ */ React.createElement(MultiSelectFactory, __spreadValues({
    multiple: true
  }, props)));
}
MultiSelect.defaultProps = {
  disabled: false,
  invalid: false
};

// src/formik/FormikSelectField.tsx
function FormikSelectField(props) {
  const [field, meta] = useFormikHelper(props);
  return /* @__PURE__ */ React.createElement(SelectField, __spreadProps(__spreadValues({}, mergeProps15(field, props)), {
    invalid: (meta.touched || meta.submitCount > 0) && !!meta.error,
    errorMessage: (meta.touched || meta.submitCount > 0) && meta.error
  }));
}

// src/formik/FormikTextArea.tsx
init_react_import();
import { mergeProps as mergeProps17 } from "react-aria";

// src/textarea/TextArea.tsx
init_react_import();
import { forwardRef as forwardRef13, useRef as useRef18, useState as useState16 } from "react";
import { mergeProps as mergeProps16, useTextField } from "react-aria";
import { mergeRefs as mergeRefs9 } from "react-laag";
import TextAreaAutosize from "react-textarea-autosize";
var TextAreaFactory = styled(TextAreaAutosize, {
  $$shadowColor: "$colors$gray3",
  WebkitAppearance: "none",
  MozAppearance: "none",
  border: "none",
  boxShadow: "0 0 0 1px $$shadowColor",
  borderRadius: "$1",
  color: "$label",
  backgroundColor: "$background",
  width: "100%",
  padding: "$2 $3",
  transition: "box-shadow $fast, height $fast",
  fontFamily: "$sans",
  lineHeight: "1.15",
  "&::placeholder": {
    color: "$placeholderText"
  },
  "&[disabled]": {
    cursor: "not-allowed"
  },
  "&:focus": {
    $$shadowColor: "$colors$primary",
    outline: "none",
    backgroundColor: "$background",
    boxShadow: `0 0 0 2px $$shadowColor`
  },
  "&:disabled": {
    $$shadowColor: "$colors$gray3",
    color: "$gray2",
    backgroundColor: "$gray4"
  },
  "&:invalid": {
    $$shadowColor: "$colors$danger",
    backgroundColor: "hsl($hsl_danger / 0.15)",
    "&::placeholder": {
      color: "hsl($hsl_danger / 0.65)"
    },
    "&:focus": {
      boxShadow: `0 0 0 2px $$shadowColor`
    }
  },
  variants: {
    resize: {
      true: { resize: "vertical" },
      false: {
        resize: "none"
      }
    },
    size: {
      regular: {
        fontSize: "$3",
        padding: "$2 $3"
      },
      large: {
        fontSize: "$4",
        padding: "$3 $4",
        borderRadius: "$2",
        height: "$8"
      }
    }
  },
  defaultVariants: {
    resize: false,
    size: "regular"
  }
});
var TextArea = forwardRef13((_a2, forwardedRef) => {
  var _b = _a2, {
    css: css2,
    maxRows = 8,
    minRows = 3,
    invalid,
    labelProps,
    errorMessage,
    helpText,
    description,
    hideWordCount
  } = _b, props = __objRest(_b, [
    "css",
    "maxRows",
    "minRows",
    "invalid",
    "labelProps",
    "errorMessage",
    "helpText",
    "description",
    "hideWordCount"
  ]);
  const { label } = props;
  const ref = useRef18();
  const aliasProps = {
    isDisabled: props.disabled,
    isRequired: props.required,
    "aria-details": description
  };
  const { labelProps: ariaLabelProps, inputProps } = useTextField(__spreadProps(__spreadValues(__spreadValues({}, aliasProps), props), { inputElementType: "textarea" }), ref);
  const [textLength, setTextLength] = useState16(0);
  const validityProps = useCustomValidity(ref, { errorMessage, invalid });
  const showWordCount = props.maxLength && !hideWordCount;
  const helpTextMaybeWithWordCount = showWordCount ? /* @__PURE__ */ React.createElement(HStack, {
    justify: "between",
    css: { width: "100%" }
  }, /* @__PURE__ */ React.createElement("span", null, helpText), /* @__PURE__ */ React.createElement("span", null, `${textLength} / ${props.maxLength}`)) : helpText;
  return /* @__PURE__ */ React.createElement(FieldWrapper, {
    css: css2
  }, /* @__PURE__ */ React.createElement(FieldLabelAndDescription, {
    label,
    labelProps: mergeProps16(ariaLabelProps, labelProps),
    description
  }), /* @__PURE__ */ React.createElement(TextAreaFactory, __spreadProps(__spreadValues(__spreadValues({
    maxRows,
    minRows,
    resize: props.resize
  }, inputProps), validityProps), {
    onChange: (e2) => {
      var _a3, _b2;
      (_a3 = props.onChange) == null ? void 0 : _a3.call(props, e2);
      if (showWordCount) {
        setTextLength((_b2 = e2.currentTarget.value) == null ? void 0 : _b2.length);
      }
    },
    ref: mergeRefs9(ref, forwardedRef)
  })), /* @__PURE__ */ React.createElement(FieldErrorAndHelpText, {
    helpText: helpTextMaybeWithWordCount,
    errorMessage,
    invalid
  }));
});
TextArea.displayName = "TextArea";
TextArea.toString = TextAreaFactory.toString;
TextArea.defaultProps = { size: "regular" };

// src/formik/FormikTextArea.tsx
function FormikTextArea(props) {
  const [field, meta] = useFormikHelper(props);
  return /* @__PURE__ */ React.createElement(TextArea, __spreadProps(__spreadValues({}, mergeProps17(field, props)), {
    invalid: (meta.touched || meta.submitCount > 0) && !!meta.error,
    errorMessage: (meta.touched || meta.submitCount > 0) && meta.error
  }));
}

// src/formik/FormikNumberField.tsx
init_react_import();
import { mergeProps as mergeProps18 } from "react-aria";
function FormikNumberField(props) {
  const [field, meta, helpers] = useFormikHelper(props);
  return /* @__PURE__ */ React.createElement(NumberInput, __spreadProps(__spreadValues({}, mergeProps18(field, props)), {
    invalid: (meta.touched || meta.submitCount > 0) && !!meta.error,
    errorMessage: (meta.touched || meta.submitCount > 0) && meta.error,
    onChange: (value) => {
      var _a2;
      (_a2 = props == null ? void 0 : props.onChange) == null ? void 0 : _a2.call(props, value);
      helpers.setValue(value);
    }
  }));
}

// src/formik/FormikAmountSelector.tsx
init_react_import();
import { mergeProps as mergeProps19 } from "react-aria";
function FormikAmountSelector(props) {
  const [field, meta, helpers] = useFormikHelper(props);
  return /* @__PURE__ */ React.createElement(AmountSelector, __spreadProps(__spreadValues({}, mergeProps19(field, props)), {
    invalid: (meta.touched || meta.submitCount > 0) && !!meta.error,
    errorMessage: (meta.touched || meta.submitCount > 0) && meta.error,
    onChange: (value) => {
      var _a2;
      (_a2 = props == null ? void 0 : props.onChange) == null ? void 0 : _a2.call(props, value);
      helpers.setValue(value);
    }
  }));
}

// src/creditcardinput/CreditCardCodeField.tsx
var DEFAULT_PLACEHOLDER = "CVC";
var DEFAULT_NAME = "cardCode" /* CODE */;
var DEFAULT_ARIA_LABEL = "CVC";
function FormikCreditCardCodeField(_a2) {
  var _b = _a2, {
    name = DEFAULT_NAME,
    placeholder = DEFAULT_PLACEHOLDER
  } = _b, props = __objRest(_b, [
    "name",
    "placeholder"
  ]);
  var _a3, _b2, _c, _d;
  const { registerField, unregisterField, values } = useFormikContext4();
  const [field, meta, helpers] = useFormikHelper(__spreadValues({ name }, props));
  useEffect13(() => {
    registerField(name, {
      validate: (value) => cardValidator.cvv(value).isValid ? void 0 : `Invalid Code`
    });
    return () => unregisterField(name);
  }, [registerField, unregisterField, name]);
  const validation = useMemo7(() => {
    return cardValidator.number(values["cardNumber" /* NUMBER */]);
  }, [values == null ? void 0 : values["cardNumber" /* NUMBER */]]);
  return /* @__PURE__ */ React.createElement(BaseCreditCardCodeField, __spreadProps(__spreadValues({
    "aria-label": DEFAULT_ARIA_LABEL
  }, mergeProps20(field, props, { name, placeholder })), {
    placeholder: ((_b2 = (_a3 = validation == null ? void 0 : validation.card) == null ? void 0 : _a3.code) == null ? void 0 : _b2.name) || placeholder,
    codeSize: (_d = (_c = validation == null ? void 0 : validation.card) == null ? void 0 : _c.code) == null ? void 0 : _d.size,
    invalid: (meta.touched || meta.submitCount > 0) && !!meta.error,
    onChange: (value) => {
      var _a4;
      (_a4 = props == null ? void 0 : props.onChange) == null ? void 0 : _a4.call(props, value);
      helpers.setValue(value);
    },
    errorMessage: (meta.touched || meta.submitCount > 0) && meta.error
  }));
}
function BaseCreditCardCodeField(_a2) {
  var _b = _a2, {
    onChange,
    label,
    codeSize = 3,
    placeholder
  } = _b, props = __objRest(_b, [
    "onChange",
    "label",
    "codeSize",
    "placeholder"
  ]);
  const sizeToMask = (size) => "0".repeat(size);
  const { ref, maskRef, unmaskedValue } = useIMask({
    mask: sizeToMask(codeSize)
  });
  useEffect13(() => {
    maskRef.current.updateOptions({ mask: sizeToMask(codeSize) });
  }, [codeSize]);
  useEffect13(() => {
    if (unmaskedValue) {
      onChange == null ? void 0 : onChange(unmaskedValue);
    }
  }, [unmaskedValue]);
  return /* @__PURE__ */ React.createElement(TextInput, __spreadProps(__spreadValues({}, props), {
    label: !!label ? label != null ? label : placeholder : null,
    placeholder: placeholder || DEFAULT_PLACEHOLDER,
    "aria-label": placeholder || label || "CVC",
    ref,
    autoComplete: "cc-csc",
    autoCorrect: "off",
    spellCheck: "false",
    id: "cardCvc",
    inputMode: "numeric"
  }));
}

// src/creditcardinput/CreditCardExpiryField.tsx
init_react_import();
import cardValidator2 from "card-validator";
import { useFormikContext as useFormikContext5 } from "formik";
import { useEffect as useEffect14, useRef as useRef19 } from "react";
import { mergeProps as mergeProps21 } from "react-aria";
import { IMask, useIMask as useIMask2 } from "react-imask";
var DEFAULT_PLACEHOLDER2 = "MM / YY";
var DEFAULT_NAME2 = "cardExpiry" /* EXPIRY */;
var DEFAULT_ARIA_LABEL2 = "Expiry date";
function FormikCreditCardExpiryField(_a2) {
  var _b = _a2, {
    name = DEFAULT_NAME2,
    placeholder = DEFAULT_PLACEHOLDER2
  } = _b, props = __objRest(_b, [
    "name",
    "placeholder"
  ]);
  const { registerField, unregisterField } = useFormikContext5();
  const [field, meta, helpers] = useFormikHelper(__spreadValues({ name }, props));
  useEffect14(() => {
    registerField(name, {
      validate: (value) => cardValidator2.expirationDate(`${value == null ? void 0 : value.month} / ${value == null ? void 0 : value.year}`).isValid ? void 0 : `Invalid expiry date`
    });
    return () => unregisterField(name);
  }, [registerField, unregisterField, name]);
  return /* @__PURE__ */ React.createElement(BaseCreditCardExpiryField, __spreadProps(__spreadValues({
    "aria-label": DEFAULT_ARIA_LABEL2
  }, mergeProps21(field, props, { name, placeholder })), {
    invalid: (meta.touched || meta.submitCount > 0) && !!meta.error,
    onChange: (value) => {
      var _a3;
      (_a3 = props == null ? void 0 : props.onChange) == null ? void 0 : _a3.call(props, value);
      helpers.setValue(value);
    },
    errorMessage: (meta.touched || meta.submitCount > 0) && meta.error
  }));
}
function BaseCreditCardExpiryField(_a2) {
  var _b = _a2, {
    value,
    onChange
  } = _b, props = __objRest(_b, [
    "value",
    "onChange"
  ]);
  const currentDate = useRef19(new Date());
  const currentYear = Number(currentDate.current.getFullYear().toString().slice(2));
  const {
    ref,
    value: maskedValue,
    setUnmaskedValue
  } = useIMask2({
    mask: "MM / YY",
    blocks: {
      MM: { mask: IMask.MaskedRange, from: 1, to: 12 },
      YY: { mask: IMask.MaskedRange, from: currentYear, to: currentYear + 19 }
    }
  });
  useEffect14(() => {
    const [month, year] = maskedValue.split(" / ");
    onChange == null ? void 0 : onChange({ month, year });
  }, [maskedValue]);
  useEffect14(() => {
    if (!value)
      return;
    setUnmaskedValue(`${value.month} / ${value.year}`);
  }, [value]);
  return /* @__PURE__ */ React.createElement(TextInput, __spreadProps(__spreadValues({}, props), {
    ref,
    autoComplete: "cc-exp",
    autoCorrect: "off",
    spellCheck: "false",
    id: "cardExpiry",
    type: "text",
    inputMode: "numeric"
  }));
}

// src/creditcardinput/CreditCardNameField.tsx
init_react_import();
import cardValidator3 from "card-validator";
import { useFormikContext as useFormikContext6 } from "formik";
import { useEffect as useEffect15 } from "react";
import { mergeProps as mergeProps22 } from "react-aria";
var DEFAULT_PLACEHOLDER3 = "Name on card";
var DEFAULT_NAME3 = "cardName" /* NAME */;
var DEFAULT_ARIA_LABEL3 = "Name on card";
function FormikCreditCardNameField(_a2) {
  var _b = _a2, {
    name = DEFAULT_NAME3,
    placeholder = DEFAULT_PLACEHOLDER3
  } = _b, props = __objRest(_b, [
    "name",
    "placeholder"
  ]);
  const { registerField, unregisterField } = useFormikContext6();
  const [field, meta, helpers] = useFormikHelper(__spreadValues({ name }, props));
  useEffect15(() => {
    registerField(name, {
      validate: (value) => cardValidator3.cardholderName(value).isValid ? void 0 : `Must provide a name`
    });
    return () => unregisterField(name);
  }, [registerField, unregisterField, name]);
  return /* @__PURE__ */ React.createElement(BaseCreditCardNameField, __spreadProps(__spreadValues({
    "aria-label": DEFAULT_ARIA_LABEL3
  }, mergeProps22(field, props, { name, placeholder })), {
    onChange: (value) => {
      var _a3;
      (_a3 = props == null ? void 0 : props.onChange) == null ? void 0 : _a3.call(props, value);
      helpers.setValue(value);
    },
    invalid: (meta.touched || meta.submitCount > 0) && !!meta.error,
    errorMessage: (meta.touched || meta.submitCount > 0) && meta.error
  }));
}
function BaseCreditCardNameField(props) {
  return /* @__PURE__ */ React.createElement(TextInput, __spreadProps(__spreadValues({}, props), {
    autoComplete: "ccname",
    autoCorrect: "off",
    spellCheck: "false",
    id: "billingName"
  }));
}

// src/creditcardinput/CreditCardNumberField.tsx
init_react_import();
import cardValidator4 from "card-validator";
import { useFormikContext as useFormikContext7 } from "formik";
import { useCallback as useCallback3, useEffect as useEffect16, useMemo as useMemo8 } from "react";
import { mergeProps as mergeProps23 } from "react-aria";
import { useIMask as useIMask3 } from "react-imask";
var DEFAULT_NAME4 = "cardNumber" /* NUMBER */;
var DEFAULT_PLACEHOLDER4 = "Card Number";
var DEFAULT_ARIA_LABEL4 = "Credit Card Number";
function FormikCreditCardNumberField(_a2) {
  var _b = _a2, {
    name = DEFAULT_NAME4,
    placeholder = DEFAULT_PLACEHOLDER4
  } = _b, props = __objRest(_b, [
    "name",
    "placeholder"
  ]);
  const { values, registerField, unregisterField } = useFormikContext7();
  const [field, meta, helpers] = useFormikHelper(__spreadValues({ name, placeholder }, props));
  useEffect16(() => {
    registerField(name, {
      validate: (value) => cardValidator4.number(value).isValid ? void 0 : `Invalid card number`
    });
    return () => unregisterField(name);
  }, [registerField, unregisterField, name]);
  const validation = useMemo8(() => {
    return cardValidator4.number(values["cardNumber" /* NUMBER */]);
  }, [values == null ? void 0 : values["cardNumber" /* NUMBER */]]);
  return /* @__PURE__ */ React.createElement(BaseCreditCardNumberField, __spreadProps(__spreadValues({
    "aria-label": DEFAULT_ARIA_LABEL4
  }, mergeProps23(field, props, { name, placeholder })), {
    card: validation == null ? void 0 : validation.card,
    onChange: (value) => {
      var _a3;
      (_a3 = props == null ? void 0 : props.onChange) == null ? void 0 : _a3.call(props, value);
      helpers.setValue(value);
    },
    invalid: (meta.touched || meta.submitCount > 0) && !!meta.error,
    errorMessage: (meta.touched || meta.submitCount > 0) && meta.error
  }));
}
function getCardIcon(cardType) {
  switch (cardType) {
    case "discover":
      return CreditCardDiscoverIcon;
    case "american-express":
      return CreditCardAmexIcon;
    case "mastercard":
      return CreditCardMastercardIcon;
    case "visa":
      return CreditCardVisaIcon;
    default:
      return CreditCardIcon;
  }
}
function BaseCreditCardNumberField(_a2) {
  var _b = _a2, {
    card,
    onChange,
    value
  } = _b, props = __objRest(_b, [
    "card",
    "onChange",
    "value"
  ]);
  const { gaps = [4, 8, 12], lengths = [16] } = card != null ? card : {};
  const gapsToMask = useCallback3(({ gaps: gaps2, lengths: lengths2 }) => {
    let mask = "0".repeat(lengths2[0]);
    gaps2.forEach((gap, i) => {
      mask = mask.slice(0, gap + i) + " " + mask.slice(gap + i);
    });
    return mask;
  }, [gaps, lengths]);
  const { ref, maskRef, unmaskedValue, setUnmaskedValue } = useIMask3({
    mask: gapsToMask({ gaps, lengths })
  });
  useEffect16(() => {
    if (unmaskedValue && unmaskedValue !== value) {
      onChange == null ? void 0 : onChange(unmaskedValue);
    }
  }, [unmaskedValue]);
  useEffect16(() => {
    if (value && unmaskedValue !== String(value)) {
      setUnmaskedValue(String(value));
    }
  }, [value]);
  useEffect16(() => {
    maskRef.current.updateOptions({ mask: gapsToMask({ gaps, lengths }) });
  }, [gaps, lengths]);
  const Icon3 = getCardIcon(card == null ? void 0 : card.type);
  return /* @__PURE__ */ React.createElement(TextInput, __spreadProps(__spreadValues({
    ref
  }, props), {
    css: { input: { paddingLeft: "$10" } },
    iconBefore: () => /* @__PURE__ */ React.createElement(Icon3, {
      multicolored: true,
      size: "$5",
      name: card == null ? void 0 : card.niceType
    }),
    autoComplete: "ccname",
    autoCorrect: "off",
    spellCheck: "false",
    id: "cardName",
    type: "text"
  }));
}

// src/creditcardinput/useCardValidator.ts
init_react_import();
import cardValidator5 from "card-validator";
import { useMemo as useMemo9 } from "react";
function useCardValidator(values) {
  const number = useMemo9(() => {
    var _a2;
    return cardValidator5.number((_a2 = values["cardNumber" /* NUMBER */]) != null ? _a2 : "");
  }, [values["cardNumber" /* NUMBER */]]);
  const expiry = useMemo9(() => {
    var _a2;
    return cardValidator5.expirationDate((_a2 = values["cardExpiry" /* EXPIRY */]) != null ? _a2 : "");
  }, [values["cardExpiry" /* EXPIRY */]]);
  const cvc = useMemo9(() => {
    var _a2, _b, _c, _d;
    return cardValidator5.cvv((_a2 = values["cardCode" /* CODE */]) != null ? _a2 : "", (_d = (_c = (_b = number == null ? void 0 : number.card) == null ? void 0 : _b.code) == null ? void 0 : _c.size) != null ? _d : 3);
  }, [values["cardCode" /* CODE */]]);
  const name = useMemo9(() => {
    var _a2;
    return cardValidator5.cardholderName((_a2 = values["cardName" /* NAME */]) != null ? _a2 : "");
  }, [values["cardName" /* NAME */]]);
  const result = useMemo9(() => ({
    ["cardNumber" /* NUMBER */]: number,
    ["cardExpiry" /* EXPIRY */]: expiry,
    ["cardCode" /* CODE */]: cvc,
    ["cardName" /* NAME */]: name
  }), [number, expiry, cvc, name]);
  return result;
}

// src/creditcardinput/CreditCardInput.tsx
var DEFAULT_PLACEHOLDERS = {
  ["cardNumber" /* NUMBER */]: "Card number",
  ["cardName" /* NAME */]: "Name on card",
  ["cardExpiry" /* EXPIRY */]: "MM / YY",
  ["cardCode" /* CODE */]: "CVC"
};
var DEFAULT_NAMES = {
  ["cardNumber" /* NUMBER */]: "cardNumber",
  ["cardName" /* NAME */]: "cardName",
  ["cardExpiry" /* EXPIRY */]: "cardExpiry",
  ["cardCode" /* CODE */]: "cardCvc"
};
var ARIA_LABELS = {
  ["cardNumber" /* NUMBER */]: "Card number",
  ["cardName" /* NAME */]: "Name on card",
  ["cardExpiry" /* EXPIRY */]: "Expiry",
  ["cardCode" /* CODE */]: "CVC"
};
function CreditCardInput(_a2) {
  var _b = _a2, { css: css2, onChange, initialValues = {} } = _b, props = __objRest(_b, ["css", "onChange", "initialValues"]);
  var _a3, _b2, _c, _d, _e, _f, _g, _h;
  const [fieldValues, setFieldValues] = useState17({});
  const [fieldsTouched, setFieldsTouched] = useState17({});
  const placeholders = props.placeholders === false ? {} : __spreadValues(__spreadValues({}, DEFAULT_PLACEHOLDERS), props.placeholders);
  const names = props.names === false ? {} : __spreadValues(__spreadValues({}, DEFAULT_NAMES), props.names);
  const labels = (_a3 = props.labels) != null ? _a3 : {};
  const { fieldProps, labelProps } = useLabel2({ label: props.label || "Credit card field", id: props.id });
  const validation = useCardValidator(fieldValues);
  useEffect17(() => {
    onChange == null ? void 0 : onChange({ values: fieldValues, meta: validation, touched: fieldsTouched });
  }, [validation, fieldValues, fieldsTouched]);
  useEffect17(() => {
    if (initialValues) {
      setFieldValues(initialValues);
    }
  }, []);
  function handlers(name) {
    return {
      onChange: (value) => setFieldValues(__spreadProps(__spreadValues({}, fieldValues), { [name]: value })),
      onBlur: () => setFieldsTouched(__spreadProps(__spreadValues({}, fieldsTouched), { [name]: true })),
      invalid: fieldsTouched[name] && !(validation == null ? void 0 : validation[name].isValid),
      value: fieldValues[name],
      placeholder: placeholders[name],
      label: labels[name],
      "aria-label": ARIA_LABELS[name],
      errorMessage: fieldsTouched[name] && !(validation == null ? void 0 : validation[name].isValid) && `${ARIA_LABELS[name]} is invalid`,
      validation,
      name: names[name]
    };
  }
  return /* @__PURE__ */ React.createElement(FieldWrapper, __spreadValues({
    as: "fieldset",
    css: css2
  }, fieldProps), props.label && /* @__PURE__ */ React.createElement(Label, __spreadValues({
    size: "regular"
  }, labelProps), props.label), /* @__PURE__ */ React.createElement(VStack, {
    space: "small"
  }, /* @__PURE__ */ React.createElement(BaseCreditCardNumberField, __spreadValues({
    card: (_b2 = validation == null ? void 0 : validation.cardNumber) == null ? void 0 : _b2.card
  }, handlers("cardNumber" /* NUMBER */))), /* @__PURE__ */ React.createElement(BaseCreditCardNameField, __spreadValues({}, handlers("cardName" /* NAME */))), /* @__PURE__ */ React.createElement(HStack, {
    space: "small"
  }, /* @__PURE__ */ React.createElement(BaseCreditCardExpiryField, __spreadValues({}, handlers("cardExpiry" /* EXPIRY */))), /* @__PURE__ */ React.createElement(BaseCreditCardCodeField, __spreadProps(__spreadValues({
    codeSize: (_e = (_d = (_c = validation == null ? void 0 : validation.cardNumber) == null ? void 0 : _c.card) == null ? void 0 : _d.code) == null ? void 0 : _e.size
  }, handlers("cardCode" /* CODE */)), {
    placeholder: ((_h = (_g = (_f = validation == null ? void 0 : validation.cardNumber) == null ? void 0 : _f.card) == null ? void 0 : _g.code) == null ? void 0 : _h.name) || placeholders["cardCode" /* CODE */]
  })))));
}

// src/emptyState/EmptyState.tsx
init_react_import();
import { FormattedMessage as FormattedMessage2 } from "react-intl";
import { Link as Link2 } from "react-router-dom";
function getActionButtonElementType(actionProps) {
  if (actionProps.href) {
    return "a";
  }
  if (actionProps.to) {
    return Link2;
  }
  return "button";
}
var DescriptionFactory = styled("span", {
  capsize: {
    lineGap: 15
  },
  textAlign: "center",
  maxWidth: "600px"
});
var EmptyStateWrapper = styled("div", {
  padding: "$2",
  width: "100%",
  variants: {
    appearance: {
      card: {
        padding: "$9"
      },
      inline: {}
    }
  }
});
function EmptyState(_a2) {
  var _b = _a2, {
    intent,
    illustration: Illustration = GenericEmptyIcon,
    title,
    description,
    descriptionContext,
    action,
    appearance = "inline"
  } = _b, props = __objRest(_b, [
    "intent",
    "illustration",
    "title",
    "description",
    "descriptionContext",
    "action",
    "appearance"
  ]);
  Illustration = typeof Illustration === "function" ? /* @__PURE__ */ React.createElement(Illustration, {
    size: "300px"
  }) : Illustration;
  return /* @__PURE__ */ React.createElement(EmptyStateWrapper, __spreadValues({
    as: appearance === "card" ? Card : void 0,
    appearance,
    border: true
  }, props), /* @__PURE__ */ React.createElement(VStack, {
    align: "center",
    justify: "center"
  }, Illustration && /* @__PURE__ */ React.createElement(VStack, {
    align: "center",
    css: { paddingBottom: "$4" }
  }, Illustration), /* @__PURE__ */ React.createElement(VStack, {
    align: "center"
  }, /* @__PURE__ */ React.createElement(Heading, {
    size: "title3",
    css: {
      textAlign: "center",
      capsize: { fontSize: 24, lineGap: 15 }
    }
  }, title ? title : /* @__PURE__ */ React.createElement(FormattedMessage2, {
    id: "emptystate.title"
  })), /* @__PURE__ */ React.createElement(DescriptionFactory, null, description ? description : /* @__PURE__ */ React.createElement(FormattedMessage2, {
    id: "emptystate.description",
    defaultMessage: description,
    values: { context: descriptionContext }
  }))), (action == null ? void 0 : action.title) && ((action == null ? void 0 : action.onClick) || (action == null ? void 0 : action.to) || (action == null ? void 0 : action.href)) ? /* @__PURE__ */ React.createElement(Box, {
    css: { paddingTop: "$3" }
  }, /* @__PURE__ */ React.createElement(Button, __spreadValues({
    as: getActionButtonElementType(action),
    intent
  }, action), action.title)) : null));
}

// src/fileUpload/FileUpload.tsx
init_react_import();
import { useMachine as useMachine2 } from "@xstate/react";
import { AnimatePresence as AnimatePresence5, AnimateSharedLayout as AnimateSharedLayout3, motion as motion11 } from "framer-motion";
import { noop as noop5 } from "lodash-es";
import { useEffect as useEffect18, useMemo as useMemo10 } from "react";
import { useDropzone as useDropzone3 } from "react-dropzone";
import { FormattedMessage as FormattedMessage3, useIntl as useIntl3 } from "react-intl";
var FileUploadRoot = styled(motion11.div, {
  border: "1.5px dashed $gray2",
  background: "$gray6",
  padding: "$6",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  borderRadius: "$1",
  transition: "$normal",
  userSelect: "none",
  cursor: "pointer",
  height: "275px",
  "&[disabled]": {
    cursor: "not-allowed",
    color: "$gray2"
  },
  variants: {
    hasFiles: {
      true: {
        borderRadius: "$2",
        height: "90px",
        borderStyle: "solid"
      }
    },
    dragState: {
      ACTIVE: {
        borderColor: "$gray1",
        backgroundColor: "$gray5"
      },
      ACCEPT: {
        borderColor: "$gray1",
        backgroundColor: "$gray5"
      },
      REJECT: {
        color: "$danger",
        borderColor: "$danger"
      }
    }
  }
});
var icons2 = {
  ["IDLE" /* IDLE */]: UploadIcon,
  ["ACCEPT" /* ACCEPT */]: AddSmallIcon,
  ["ACTIVE" /* ACTIVE */]: AddSmallIcon,
  ["REJECT" /* REJECT */]: RemoveSmallIcon
};
function FileUpload({
  maxSize = 52428800,
  noDrag = false,
  disabled,
  accept,
  iconSize: iconSize2 = "clamp(20px, 75%, 100px)",
  initialFiles = [],
  onDrop = noop5,
  onChange = noop5
}) {
  const { formatMessage } = useIntl3();
  const sizeLimit = useMemo10(() => formatBytes(maxSize, 1), [maxSize]);
  const acceptType = useMemo10(() => {
    if (Array.isArray(accept))
      return;
    switch (true) {
      case /image/gi.test(accept):
        return "image";
      case /pdf/gi.test(accept):
        return "pdf";
      case /csv/gi.test(accept):
        return "csv";
      default:
        return void 0;
    }
  }, [accept]);
  const [state, send] = useMachine2(fileUploadMachine, {
    context: { files: initialFiles }
  });
  const { context: context2 } = state;
  const {
    getRootProps,
    getInputProps,
    inputRef,
    isDragActive,
    isDragAccept,
    isDragReject,
    fileRejections,
    isFileDialogActive
  } = useDropzone3({
    onFileDialogCancel: () => {
      send({ type: "CANCEL_DIALOG" });
    },
    maxSize,
    noDrag,
    multiple: false,
    preventDropOnDocument: true,
    onDropAccepted: (acceptedFiles) => {
      onChange(acceptedFiles);
      send({ type: "ADD_FILE", files: acceptedFiles });
    },
    onDropRejected: (rejections) => {
      var _a2, _b;
      send({
        type: "REJECT",
        message: formatMessage({
          id: `fileupload.error.${(_b = (_a2 = rejections == null ? void 0 : rejections[0]) == null ? void 0 : _a2.errors) == null ? void 0 : _b[0].code}`,
          defaultMessage: "Invalid file"
        }, { sizeLimit, acceptType })
      });
    },
    onDragLeave: () => send("RESET"),
    onDragOver: () => {
      var _a2, _b;
      switch (true) {
        case isDragAccept:
          send("HOVER", { status: "ACCEPT" /* ACCEPT */ });
          break;
        case isDragReject:
          send("HOVER", {
            status: "REJECT" /* REJECT */,
            message: formatMessage({
              id: `fileupload.error.${(_b = (_a2 = fileRejections == null ? void 0 : fileRejections[0]) == null ? void 0 : _a2.errors) == null ? void 0 : _b[0].code}`,
              defaultMessage: "Invalid file"
            }, { sizeLimit, acceptType })
          });
          break;
        case isDragActive:
          send("HOVER", { status: "ACTIVE" /* ACTIVE */ });
          break;
      }
    },
    onDrop,
    disabled,
    accept
  });
  const Icon3 = icons2[context2.hoverStatus];
  useEffect18(() => {
    if (isFileDialogActive)
      send({ type: "OPEN_DIALOG" });
  }, [isFileDialogActive]);
  return /* @__PURE__ */ React.createElement(AnimateSharedLayout3, {
    type: "crossfade"
  }, /* @__PURE__ */ React.createElement(FileUploadRoot, __spreadValues({}, getRootProps({ dragState: context2.hoverStatus, disabled, hasFiles: context2.files.length > 0 })), /* @__PURE__ */ React.createElement("input", __spreadValues({}, getInputProps())), /* @__PURE__ */ React.createElement(AnimatePresence5, {
    presenceAffectsLayout: true,
    exitBeforeEnter: true
  }, context2.files.length > 0 ? context2.files.map((file) => /* @__PURE__ */ React.createElement(HStack, {
    css: { width: "100%", justifyContent: "space-between" },
    key: file.name + file.size
  }, /* @__PURE__ */ React.createElement(VStack, {
    space: "small",
    as: motion11.div,
    initial: { opacity: 0, y: "50%" },
    animate: { opacity: 1, y: 0 }
  }, /* @__PURE__ */ React.createElement(Paragraph, {
    css: {
      fontWeight: "$medium",
      display: "-webkit-box",
      WebkitLineClamp: "1",
      wordBreak: "break-word",
      overflow: "hidden",
      textOverflow: "ellipsis",
      WebkitBoxOrient: "vertical"
    }
  }, file.name), /* @__PURE__ */ React.createElement(Text, {
    size: "caption1"
  }, formatBytes(file.size))), /* @__PURE__ */ React.createElement(Button, {
    onClick: () => {
      const fileName = file.name;
      const dataTransfer = new DataTransfer();
      const files = Array.from(inputRef.current.files);
      for (const file2 of files) {
        file2.name !== fileName && dataTransfer.items.add(file2);
      }
      inputRef.current.files = dataTransfer.files;
      const newFiles = Array.from(dataTransfer.files);
      onChange(newFiles);
      send({ type: "REMOVE_FILE", files: newFiles });
    },
    icon: CloseIcon,
    appearance: "minimal"
  }))) : /* @__PURE__ */ React.createElement(VStack, {
    as: motion11.div,
    align: "center",
    justify: "center"
  }, /* @__PURE__ */ React.createElement(Icon3, {
    as: motion11.svg,
    layout: true,
    layoutId: "icon",
    initial: false,
    animate: { opacity: 1 },
    exit: { height: 0, opacity: 0 },
    size: iconSize2
  }), /* @__PURE__ */ React.createElement(VStack, {
    align: "center",
    as: motion11.div,
    layout: true,
    layoutId: "text",
    animate: state.matches("idle") || context2.message ? { opacity: 1, y: 0 } : { opacity: 0, y: "-100%" },
    exit: { opacity: 0, y: "-100%" }
  }, /* @__PURE__ */ React.createElement(FileUploadDescription2, {
    state,
    maxSize,
    noDrag
  }))))));
}
function FileUploadDescription2({ state, maxSize, noDrag }) {
  const sizeLimit = useMemo10(() => formatBytes(maxSize, 1), [maxSize]);
  switch (state.value) {
    case "rejected":
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Text, null, "Invalid file"), /* @__PURE__ */ React.createElement(Text, {
        size: "caption2"
      }, state.context.message));
    case "idle":
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Text, null, /* @__PURE__ */ React.createElement(FormattedMessage3, {
        id: "fileupload.idle",
        values: { canDrag: !noDrag }
      })), maxSize !== Infinity && /* @__PURE__ */ React.createElement(Text, {
        size: "caption2"
      }, /* @__PURE__ */ React.createElement(FormattedMessage3, {
        id: "fileupload.sizeLimit",
        values: { sizeLimit }
      })));
    default:
      return null;
  }
}

// src/inputGroup/InputGroup.tsx
init_react_import();
import { forwardRef as forwardRef14 } from "react";
var CONTROLS_SELECTOR = `&:is(${Button}, ${TextInput}, ${Select}), ${Button}, ${TextInput}, ${Select}`;
var INPUT_SELECTOR = `&:is(${TextInput}, ${Select}), ${TextInput}, ${Select}`;
var InputGroupFactory = styled("div", {
  display: "flex",
  alignItems: "center",
  width: "100%",
  variants: {
    size: {
      small: {
        [CONTROLS_SELECTOR]: {
          height: "$controlHeightSmall"
        },
        [INPUT_SELECTOR]: {
          height: "calc($controlHeightSmall - 2px)"
        }
      },
      regular: {
        [CONTROLS_SELECTOR]: {
          height: "$controlHeightRegular"
        },
        [INPUT_SELECTOR]: {
          height: "calc($controlHeightRegular - 2px)"
        }
      },
      large: {
        [CONTROLS_SELECTOR]: {
          height: "$controlHeightLarge"
        },
        [INPUT_SELECTOR]: {
          height: "calc($controlHeightLarge - 2px)"
        }
      }
    }
  },
  "> :first-child": {
    [CONTROLS_SELECTOR]: {
      borderTopRightRadius: 0,
      borderBottomRightRadius: 0
    },
    [`&:is(${Label}), ${Label}`]: {
      breakAfter: "always"
    }
  },
  "> :not(:first-child):not(:last-child)": {
    [CONTROLS_SELECTOR]: {
      borderRadius: 0
    },
    [`&${Button}`]: {
      border: "1px solid #FFFFFF50",
      borderWidth: "0 0.5px"
    }
  },
  "> :last-child": {
    [CONTROLS_SELECTOR]: {
      borderTopLeftRadius: 0,
      borderBottomLeftRadius: 0
    },
    [`> ${TextInput}`]: {
      marginLeft: "1px"
    }
  },
  defaultVariants: {
    size: "regular"
  }
});
var InputGroup = forwardRef14((props, forwardedRef) => {
  return /* @__PURE__ */ React.createElement(InputGroupFactory, __spreadValues({
    ref: forwardedRef
  }, props));
});
InputGroup.displayName = "InputGroup";

// src/menu/index.ts
init_react_import();

// src/menu/Menu.tsx
init_react_import();
import { useRef as useRef21 } from "react";
import { useMenu } from "react-aria";
import { useTreeState } from "react-stately";

// src/menu/MenuGroup.tsx
init_react_import();
import { useMenuSection, useSeparator as useSeparator2 } from "react-aria";
import { Section as Section2 } from "react-stately";

// src/menu/MenuItem.tsx
init_react_import();
import { useRef as useRef20 } from "react";
import { useMenuItem } from "react-aria";
var MenuItemFactory = styled("li", {
  appearance: "none",
  WebkitAppearance: "none",
  textDecoration: "none",
  listStyle: "none",
  display: "flex",
  alignItems: "center",
  cursor: "pointer",
  outline: "none",
  userSelect: "none",
  "&:hover": {
    backgroundColor: "$gray5"
  },
  "&:focus": {
    backgroundColor: "$gray4"
  },
  "&:active": {
    backgroundColor: "$gray3"
  },
  variants: {
    isFocused: {
      true: {
        backgroundColor: "$gray4"
      }
    },
    size: {
      small: {
        padding: "$1 0",
        height: "$controlHeightSmall"
      },
      regular: {
        padding: "$2 0",
        height: "$controlHeightRegular"
      },
      large: {
        padding: "$3 0",
        height: "$controlHeightLarge"
      }
    }
  },
  defaultVariants: {
    size: "regular"
  }
});
function _MenuItem(_a2) {
  var _b = _a2, { children, onSelect, onKeyPress, onClick, state, item } = _b, props = __objRest(_b, ["children", "onSelect", "onKeyPress", "onClick", "state", "item"]);
  var _a3;
  const onAction = props.onAction || onClick || onSelect || onKeyPress;
  const ref = useRef20(null);
  const isDisabled = state.disabledKeys.has(item.key);
  const isFocused = state.selectionManager.focusedKey === item.key;
  const { menuItemProps, keyboardShortcutProps, labelProps } = useMenuItem(__spreadValues({ key: item.key || props.key, onAction, isDisabled }, props), state, ref);
  const color = item.props.intent || props.intent || "label";
  const Icon3 = item.props.icon;
  const HelperText = item.props.helperText;
  return /* @__PURE__ */ React.createElement(MenuItemFactory, __spreadProps(__spreadValues(__spreadValues({
    as: item.props.as
  }, menuItemProps), props), {
    ref,
    isFocused
  }), typeof Icon3 === "function" ? /* @__PURE__ */ React.createElement(Icon3, {
    role: "presentation",
    size: "$4",
    css: {
      color: `$${color}`,
      marginLeft: "$3"
    }
  }) : Icon3, /* @__PURE__ */ React.createElement(Text, __spreadProps(__spreadValues({}, labelProps), {
    css: { color: `$${color}`, marginInline: "$3", flex: "1" },
    size: "caption1"
  }), (_a3 = item.rendered) != null ? _a3 : children), HelperText ? typeof HelperText === "function" ? /* @__PURE__ */ React.createElement(HelperText, {
    role: "presentation",
    size: "$3",
    css: {
      color: "$secondary",
      marginRight: "$3"
    }
  }) : typeof HelperText === "string" ? /* @__PURE__ */ React.createElement(Text, __spreadProps(__spreadValues({}, keyboardShortcutProps), {
    css: { marginRight: "$3", color: "$secondary" },
    size: "caption2"
  }), HelperText) : HelperText : null);
}
var MenuItem = _Item;

// src/menu/MenuDivider.tsx
init_react_import();
var MenuDivider = styled("li", {
  borderBottom: "1px solid $colors$gray4"
});

// src/menu/MenuGroup.tsx
var MenuGroupFactory = styled("li", {
  paddingBlock: "$1",
  padding: 0,
  listStyle: "none"
});
function _MenuGroup({ section, state, onAction }) {
  let { itemProps, headingProps, groupProps } = useMenuSection({
    heading: section.rendered,
    "aria-label": section["aria-label"]
  });
  let { separatorProps } = useSeparator2({
    elementType: "li"
  });
  return /* @__PURE__ */ React.createElement(React.Fragment, null, section.key !== state.collection.getFirstKey() && /* @__PURE__ */ React.createElement(MenuDivider, __spreadProps(__spreadValues({}, separatorProps), {
    style: {
      borderTop: "1px solid $colors$gray4",
      margin: "2px 5px"
    }
  })), /* @__PURE__ */ React.createElement("li", __spreadValues({}, itemProps), section.rendered && /* @__PURE__ */ React.createElement(Heading, __spreadProps(__spreadValues({
    size: "groupHeadline"
  }, headingProps), {
    css: { padding: "$2", color: "$secondaryLabel" }
  }), section.rendered), /* @__PURE__ */ React.createElement(MenuGroupFactory, __spreadValues({}, groupProps), [...section.childNodes].map((node) => /* @__PURE__ */ React.createElement(_MenuItem, __spreadValues({
    as: node.props.as,
    key: node.key,
    item: node,
    state,
    onAction
  }, node.props))))));
}
var MenuGroup = Section2;

// src/menu/Menu.tsx
var MenuFactory = styled("ul", {
  outline: "none",
  paddingBlock: "$1"
});
function Menu(props) {
  const state = useTreeState(__spreadProps(__spreadValues({}, props), { selectionMode: "none" }));
  const ref = useRef21();
  const { menuProps } = useMenu(props, state, ref);
  return /* @__PURE__ */ React.createElement(MenuFactory, __spreadValues(__spreadProps(__spreadValues({}, menuProps), {
    ref
  }), props), [...state.collection].map((item) => {
    var _a2, _b, _c, _d;
    switch (item.type) {
      case "section":
        return /* @__PURE__ */ React.createElement(_MenuGroup, __spreadValues({
          as: (_a2 = item.props) == null ? void 0 : _a2.as,
          key: item.key,
          section: item,
          state,
          onAction: ((_b = item.props) == null ? void 0 : _b.onAction) || props.onAction
        }, item.props));
      case "item":
      default:
        return /* @__PURE__ */ React.createElement(_MenuItem, __spreadValues({
          as: (_c = item.props) == null ? void 0 : _c.as,
          key: item.key,
          item,
          state,
          onAction: ((_d = item.props) == null ? void 0 : _d.onAction) || props.onAction
        }, item.props));
    }
  }));
}

// src/queryBuilder/QueryBuilder.tsx
init_react_import();
import { useState as useState18 } from "react";
import {
  BasicConfig,
  Builder,
  Query,
  Utils as Utils2
} from "react-awesome-query-builder";
import { useDebounce } from "react-use";

// src/queryBuilder/queryBuilderStyles.ts
init_react_import();
var groupContainer = {
  backgroundColor: "$groupedBackground",
  border: "1px solid $gray4",
  borderRadius: "$1",
  padding: "$3"
};
var queryBuilderStyles = css({
  ".query-builder": {
    userSelect: "none",
    "&.qb-dragging": {
      cursor: "grabbing",
      button: {
        pointerEvents: "none"
      }
    }
  },
  ".group .group": __spreadValues({}, groupContainer),
  ".group--header, .group--children": {
    display: "flex",
    flexDirection: "column",
    gap: "$3",
    paddingBlockEnd: "$6"
  },
  ".rule": __spreadProps(__spreadValues({}, groupContainer), {
    display: "flex",
    flexDirection: "row",
    gap: "$3",
    alignItems: "center",
    justifyContent: "space-between"
  }),
  ".rule--body--wrapper": {
    width: "100%"
  },
  ".rule--body": {
    flexGrow: 1,
    alignItems: "center",
    display: "grid",
    gridTemplateColumns: "repeat(3, 1fr) auto",
    gap: "$3"
  },
  ".rule--widget": {
    display: "flex",
    flexDirection: "row",
    gap: "$1",
    alignItems: "center",
    ".widget--widget": {
      width: "100%"
    }
  },
  ".group--children": {
    $$lineWidth: "1px",
    $$lineColor: "$colors$gray3",
    "& > .group-or-rule-container > .group-or-rule": {
      position: "relative",
      marginInlineStart: "$5",
      "&::before": {
        top: "-$2",
        borderWidth: "0 0 $$lineWidth $$lineWidth"
      },
      "&::after": {
        top: "50%",
        borderWidth: "0 0 0 $$lineWidth"
      },
      "&::before, &::after": {
        content: '""',
        position: "absolute",
        left: "-$3",
        width: "$3",
        height: "calc(50% + $2)",
        borderColor: "$$lineColor",
        borderStyle: "solid",
        boxSizing: "border-box"
      }
    },
    "& > .group-or-rule-container:first-child > .group-or-rule": {
      "&::before": {
        top: "calc(-$6 - $$lineWidth)",
        height: "calc(50% + calc($6 + $$lineWidth))"
      }
    },
    "& > .group-or-rule-container:last-child > .group-or-rule": {
      "&::after": {
        top: "calc(50% + $$lineWidth)",
        height: "calc(50% + $6 + $$lineWidth)"
      }
    }
  }
});

// src/queryBuilder/widgets/QueryBuilderBoolean.tsx
init_react_import();
import { Utils } from "react-awesome-query-builder";

// src/switch/Switch.tsx
init_react_import();
import { useToggleState as useToggleState2 } from "react-stately";
import { motion as motion12 } from "framer-motion";
import { useRef as useRef22 } from "react";
import { useFocusRing as useFocusRing5, useSwitch, VisuallyHidden as VisuallyHidden4 } from "react-aria";
var SwitchWrapper = styled(motion12.svg, {
  $$fill: "$colors$gray3",
  width: 44,
  height: 24,
  transition: "$fast",
  cursor: "pointer",
  variants: {
    selected: {
      true: {
        $$fill: "$colors$primary"
      },
      false: {}
    },
    disabled: {
      true: {
        $$fill: "$colors$gray5",
        "&, rect, circle": {
          cursor: "not-allowed"
        },
        circle: {
          fill: "$colors$gray3"
        }
      }
    }
  }
});
var SwitchBackground = styled(motion12.rect, {
  width: 44,
  height: 24,
  fill: "$$fill",
  transition: "$fast"
});
var SwitchCircle = styled(motion12.rect, {
  fill: "$white",
  size: 20
});
var SwitchLabel = styled("label", HStack, {
  variants: {
    disabled: {
      true: {
        cursor: "not-allowed"
      }
    }
  }
});
var Switch = (_a2) => {
  var _b = _a2, { label, selected, disabled } = _b, props = __objRest(_b, ["label", "selected", "disabled"]);
  var _a3, _b2, _c;
  (_a3 = props.children) != null ? _a3 : props.children = label;
  (_b2 = props.isSelected) != null ? _b2 : props.isSelected = selected;
  (_c = props.isDisabled) != null ? _c : props.isDisabled = disabled;
  const state = useToggleState2(props);
  const ref = useRef22(null);
  const { inputProps } = useSwitch(props, state, ref);
  const { isFocusVisible, focusProps } = useFocusRing5();
  return /* @__PURE__ */ React.createElement(SwitchLabel, {
    align: "center",
    space: "small"
  }, /* @__PURE__ */ React.createElement(VisuallyHidden4, null, /* @__PURE__ */ React.createElement("input", __spreadProps(__spreadValues(__spreadValues({}, inputProps), focusProps), {
    ref
  }))), /* @__PURE__ */ React.createElement(SwitchWrapper, {
    "aria-hidden": "true",
    selected: state.isSelected,
    disabled: inputProps.disabled
  }, /* @__PURE__ */ React.createElement(SwitchBackground, {
    rx: 12
  }), /* @__PURE__ */ React.createElement(SwitchCircle, {
    x: state.isSelected ? 22 : 2,
    y: 2,
    rx: 12,
    layout: true,
    transition: { type: "spring", duration: 0.5 }
  }), isFocusVisible && /* @__PURE__ */ React.createElement(Box, {
    as: "rect",
    x: 1,
    y: 1,
    width: 42,
    height: 22,
    rx: 11,
    fill: "none",
    strokeWidth: 2,
    stroke: "currentColor",
    css: { color: "$focusStroke" }
  })), /* @__PURE__ */ React.createElement(Label, {
    as: "span",
    css: { userSelect: "none" },
    disabled: inputProps.disabled
  }, label));
};

// src/queryBuilder/widgets/QueryBuilderBoolean.tsx
function QueryBuilderBoolean({ customProps, value, setValue, labelYes, labelNo, readonly }) {
  const onChange = () => {
    setValue(!value);
  };
  const id = Utils.uuid();
  return /* @__PURE__ */ React.createElement(Switch, __spreadValues({
    id,
    selected: !!value,
    disabled: readonly,
    onChange,
    label: value ? labelYes : labelNo
  }, customProps));
}

// src/queryBuilder/widgets/QueryBuilderButton.tsx
init_react_import();
var QueryBuilderButtonIcons = {
  delRule: TrashIcon
};
var QueryBuilderButtonBeforeIcons = {
  addRule: AddCircleIcon,
  addGroup: AddCircleIcon,
  addRuleGroupExt: AddCircleIcon,
  addRuleGroup: AddCircleIcon,
  delRuleGroup: TrashIcon,
  delGroup: TrashIcon
};
var QueryBuilderButtonIntents = {
  delGroup: "danger",
  delRuleGroup: "danger",
  delRule: "danger"
};
var QueryBuilderButtonAppearance = {
  addRuleGroup: "minimal",
  addRuleGroupExt: "minimal",
  delGroup: "minimal",
  delRuleGroup: "minimal",
  delRule: "minimal"
};
function QueryBuilderButton({ type, label, onClick }) {
  var _a2;
  const icon = QueryBuilderButtonIcons[type];
  const iconBefore = QueryBuilderButtonBeforeIcons[type];
  const appearance = (_a2 = QueryBuilderButtonAppearance[type]) != null ? _a2 : "outline";
  const intent = QueryBuilderButtonIntents[type];
  return /* @__PURE__ */ React.createElement(Button, {
    intent,
    children: label,
    onClick,
    iconBefore,
    icon: icon ? icon : null,
    appearance
  });
}

// src/queryBuilder/widgets/QueryBuilderButtonGroup.tsx
init_react_import();
function QueryBuilderButtonGroup({ children }) {
  return /* @__PURE__ */ React.createElement(HStack, null, children);
}

// src/queryBuilder/widgets/QueryBuilderConfirmModal.tsx
init_react_import();
function QueryBuilderConfirmModal({
  okText: confirmLabel = "OK",
  onOk,
  title = "Are you sure?",
  cancelText: cancelLabel = "Cancel",
  confirmFn
}) {
  confirmFn({
    title: null,
    children: title,
    confirmLabel,
    cancelLabel,
    intent: "danger",
    dialogProps: { contentContainerProps: { css: { textAlign: "center" } } }
  }).then(onOk).catch(() => {
  });
}

// src/queryBuilder/widgets/QueryBuilderConjunctions.tsx
init_react_import();

// src/radio/index.ts
init_react_import();

// src/radio/RadioGroup.tsx
init_react_import();
import { forwardRef as forwardRef15 } from "react";
import { useRadioGroup as useRadioGroup2, useVisuallyHidden } from "react-aria";

// src/radio/RadioContext.ts
init_react_import();
import { createContext as createContext9 } from "react";
var RadioContext = createContext9(null);

// src/radio/RadioGroup.tsx
var RadioGroupWrapper = styled("fieldset", {
  display: "inline-flex",
  gap: "$small",
  variants: {
    orientation: {
      horizontal: {
        flexDirection: "row"
      },
      vertical: {
        flexDirection: "column"
      }
    }
  },
  defaultVariants: {
    orientation: "vertical"
  }
});
function useRadioGroupStateWithSize(props) {
  const { size, orientation } = props;
  const state = $a54cdc5c1942b639$export$bca9d026f8e704eb(props);
  return __spreadProps(__spreadValues({}, state), {
    size,
    orientation
  });
}
var RadioGroup = forwardRef15((_a2, forwardedRef) => {
  var _b = _a2, { disabled, required, hideLabel } = _b, props = __objRest(_b, ["disabled", "required", "hideLabel"]);
  const propsAliases = { isDisabled: disabled, isRequired: required };
  const { label, children } = props;
  const state = useRadioGroupStateWithSize(__spreadValues(__spreadValues({}, propsAliases), props));
  const { radioGroupProps, labelProps } = useRadioGroup2(__spreadValues(__spreadValues({}, propsAliases), props), state);
  const { visuallyHiddenProps } = useVisuallyHidden();
  return /* @__PURE__ */ React.createElement(RadioGroupWrapper, __spreadProps(__spreadValues({
    orientation: props.orientation
  }, radioGroupProps), {
    ref: forwardedRef
  }), /* @__PURE__ */ React.createElement(Label, __spreadValues(__spreadValues({
    as: "legend",
    css: { paddingInline: "0px", paddingBottom: "$small" }
  }, labelProps), hideLabel ? visuallyHiddenProps : {}), label), /* @__PURE__ */ React.createElement(RadioContext.Provider, {
    value: state
  }, children));
});
RadioGroup.defaultProps = {
  orientation: "vertical"
};

// src/radio/Radio.tsx
init_react_import();
import { motion as motion13, useReducedMotion as useReducedMotion2 } from "framer-motion";
import { forwardRef as forwardRef16, useContext as useContext9, useRef as useRef23 } from "react";
import { useFocusRing as useFocusRing6, useRadio as useRadio2 } from "react-aria";
import { mergeRefs as mergeRefs10 } from "react-laag";

// src/radio/RadioFactory.tsx
init_react_import();
var checkedStyles = {
  "& > svg": {
    display: "block"
  }
};
var RadioFactory = styled("input", {
  $$borderWidth: "2px",
  $$shadowColor: "$colors$gray3",
  $$size: "$sizes$5",
  clip: "rect(1px, 1px, 1px, 1px)",
  height: "1px",
  overflow: "hidden",
  padding: "0",
  position: "absolute",
  whiteSpace: "nowrap",
  width: "1px",
  opacity: "0",
  "& + div": {
    $$borderWidth: "2px",
    $$shadowColor: "$colors$gray3",
    $$size: "$sizes$5",
    WebkitFontSmoothing: "antialiased",
    textDecoration: "none",
    border: "none",
    outline: "none",
    cursor: "pointer",
    color: "$white",
    backgroundColor: "transparent",
    borderRadius: "$round",
    boxShadow: `inset 0 0 0 $$borderWidth $$shadowColor`,
    size: "$$size",
    marginRight: "$2",
    transition: "$fast"
  },
  "& + div > svg": { display: "none", color: "$radio" },
  "&:not([disabled]):hover + div": {
    backgroundColor: "$gray5",
    $$shadowColor: "$colors$gray3"
  },
  "&:checked + div": __spreadProps(__spreadValues({}, checkedStyles), {
    color: "$label",
    backgroundColor: "transparent"
  }),
  "&[disabled] + div": {
    backgroundColor: "$gray5",
    cursor: "not-allowed"
  },
  "&[disabled]": {
    cursor: "not-allowed",
    color: "$disabled"
  },
  "&[disabled]:checked + div": __spreadProps(__spreadValues({}, checkedStyles), {
    backgroundColor: "$gray5",
    cursor: "not-allowed",
    boxShadow: `inset 0 0 0 1px hsl($colors$hsl_gray / 0.5), inset 0 -1px 1px 0 $gray1`,
    "& > svg": {
      color: "$gray2"
    }
  }),
  "&:focus-visible + div": {
    $$shadowColor: "$colors$radio"
  },
  variants: {
    size: {
      small: {
        $$size: "$sizes$2"
      },
      regular: {
        $$size: "$sizes$5"
      },
      large: {
        $$size: "$sizes$7"
      }
    }
  }
});

// src/radio/Radio.tsx
var RadioLabel = styled("label", {
  display: "inline-flex",
  alignItems: "center",
  verticalAlign: "middle",
  cursor: "pointer",
  position: "relative",
  userSelect: "none",
  variants: {
    disabled: {
      true: {
        cursor: "not-allowed"
      }
    }
  }
});
var RadioCircle = styled(motion13.rect, {
  fill: "currentColor",
  size: 17
});
var RadioWrapper = styled(motion13.svg, {
  width: 25,
  height: 25
});
var radioCircleVariants = {
  hidden: {
    scale: 0.5,
    originX: "50%",
    originY: "50%"
  },
  visible: {
    scale: 1,
    originX: "50%",
    originY: "50%"
  }
};
var Radio = forwardRef16((_a2, forwardedRef) => {
  var _b = _a2, { css: css2, disabled } = _b, props = __objRest(_b, ["css", "disabled"]);
  const { children, label } = props;
  const propsAliases = { isDisabled: disabled };
  const _a3 = useContext9(RadioContext), { size } = _a3, state = __objRest(_a3, ["size"]);
  const ref = useRef23(null);
  const { inputProps } = useRadio2(__spreadValues(__spreadValues({}, props), propsAliases), state, ref);
  const { focusProps } = useFocusRing6();
  const shouldReduceMotion = useReducedMotion2();
  return /* @__PURE__ */ React.createElement(RadioLabel, {
    disabled
  }, /* @__PURE__ */ React.createElement(RadioFactory, __spreadProps(__spreadValues(__spreadValues({
    size,
    disabled
  }, inputProps), focusProps), {
    ref: mergeRefs10(ref, forwardedRef)
  })), /* @__PURE__ */ React.createElement(Box, {
    css: {
      boxSizing: "border-box",
      display: "flex",
      flex: "none",
      alignItems: "center",
      justifyContent: "center",
      size: "$2",
      pointerEvents: "none"
    },
    "aria-hidden": "true"
  }, /* @__PURE__ */ React.createElement(RadioWrapper, null, /* @__PURE__ */ React.createElement(RadioCircle, {
    rx: 100,
    x: 4,
    y: 4,
    variants: radioCircleVariants,
    animate: state.selectedValue === props.value ? "visible" : "hidden",
    initial: { transformOrigin: "50% 50%" },
    transition: { duration: shouldReduceMotion ? 0.01 : 0.2 }
  }))), /* @__PURE__ */ React.createElement(Label, {
    as: "span",
    disabled,
    size
  }, label || children));
});

// src/queryBuilder/widgets/QueryBuilderConjunctions.tsx
function QueryBuilderConjunctions({
  id,
  not,
  setNot,
  conjunctionOptions,
  setConjunction,
  selectedConjunction,
  disabled,
  readonly,
  showNot,
  notLabel
}) {
  const conjunctionsCount = Object.keys(conjunctionOptions).length;
  const lessThanTwo = disabled;
  const showOptions = conjunctionsCount > 1 && !lessThanTwo;
  const onNotChange = (checked) => setNot(checked);
  const onChange = (value) => setConjunction(value);
  const Not = () => /* @__PURE__ */ React.createElement(Checkbox, {
    label: notLabel,
    key: id,
    id: id + "__not",
    checked: not,
    disabled: readonly,
    onChange: onNotChange
  });
  const Options = () => /* @__PURE__ */ React.createElement(RadioGroup, {
    label: "conjunctions",
    hideLabel: true,
    orientation: "horizontal",
    defaultValue: selectedConjunction,
    onChange
  }, Object.keys(conjunctionOptions).map((key) => {
    const { id: id2, label } = conjunctionOptions[key];
    return /* @__PURE__ */ React.createElement(Radio, {
      label,
      key: id2,
      id: id2,
      disabled: readonly,
      value: key
    });
  }));
  return /* @__PURE__ */ React.createElement(Card, {
    css: { backgroundColor: "$groupedBackground", width: "fit-content" },
    border: true
  }, /* @__PURE__ */ React.createElement(HStack, {
    align: "center",
    css: { minHeight: "$10", padding: "$2 $4" }
  }, /* @__PURE__ */ React.createElement(Label, null, !showNot && !showOptions ? "Rule" : "Rule:"), showNot ? Not() : null, showOptions ? Options() : null));
}

// src/queryBuilder/widgets/QueryBuilderDate.tsx
init_react_import();
function QueryBuilderDate({ value, setValue, readonly, maxLength, placeholder, customProps }) {
  const onChange = (value2) => {
    let val = value2;
    if (val === "")
      val = void 0;
    setValue(val);
  };
  const dateValue = value || new Date();
  return /* @__PURE__ */ React.createElement(TextInput, __spreadValues({
    type: "date",
    value: dateValue,
    placeholder: !readonly ? placeholder : "",
    maxLength,
    onChange
  }, customProps));
}

// src/queryBuilder/widgets/QueryBuilderFieldSelect.tsx
init_react_import();
function QueryBuilderFieldSelect({ items, setField, selectedKey, readonly, placeholder }) {
  const onChange = (e2) => {
    if (e2.target.value === void 0)
      return;
    setField(e2.target.value);
  };
  const hasValue = selectedKey != null;
  const renderOptions = (fields) => Object.keys(fields).map((fieldKey) => {
    const field = fields[fieldKey];
    const { items: items2, path, label, disabled } = field;
    if (items2) {
      return /* @__PURE__ */ React.createElement("optgroup", {
        disabled,
        key: path,
        label
      }, renderOptions(items2));
    } else {
      return /* @__PURE__ */ React.createElement("option", {
        disabled,
        key: path,
        value: path
      }, label);
    }
  });
  return /* @__PURE__ */ React.createElement(Select, {
    placeholder,
    onChange,
    value: hasValue ? selectedKey : "",
    disabled: readonly
  }, !hasValue && /* @__PURE__ */ React.createElement("option", {
    value: "",
    disabled: true
  }), renderOptions(items));
}

// src/queryBuilder/widgets/QueryBuilderMultiSelect.tsx
init_react_import();

// src/queryBuilder/utils.ts
init_react_import();
import { isObject } from "lodash-es";
function listValue(value, title) {
  return isObject(value) ? value : { value, title: title !== void 0 ? title : value };
}
function mapListValues(listValues, func) {
  let ret = [];
  if (Array.isArray(listValues)) {
    for (let v of listValues) {
      ret.push(func(listValue(v)));
    }
  } else {
    for (let value in listValues) {
      ret.push(func(listValue(value, listValues[value])));
    }
  }
  return ret;
}

// src/queryBuilder/widgets/QueryBuilderMultiSelect.tsx
function QueryBuilderMultiSelect({ listValues, value, placeholder, setValue, readonly }) {
  var _a2;
  const renderOptions = () => mapListValues(listValues, ({ title, value: value2 }) => {
    return /* @__PURE__ */ React.createElement("option", {
      key: value2,
      value: value2
    }, title);
  });
  const getMultiSelectValues = (multiselect) => {
    let values = [];
    const options = multiselect.options;
    for (let i = 0; i < options.length; i++) {
      const opt = options[i];
      if (opt.selected) {
        values.push(opt.value);
      }
    }
    if (!values.length)
      values = void 0;
    return values;
  };
  const onChange = (e2) => setValue(getMultiSelectValues(e2.target));
  const hasValue = value != null;
  return /* @__PURE__ */ React.createElement(MultiSelect, {
    placeholder,
    onChange,
    value: hasValue ? value : (_a2 = listValues == null ? void 0 : listValues[0]) == null ? void 0 : _a2.value,
    disabled: readonly
  }, renderOptions());
}

// src/queryBuilder/widgets/QueryBuilderNumber.tsx
init_react_import();
function QueryBuilderNumber({
  value,
  setValue,
  readonly,
  min: min2,
  max: max2,
  step,
  placeholder,
  customProps
}) {
  const onChange = (value2) => {
    let val = value2;
    if (val === "" || val === null)
      val = void 0;
    else
      val = Number(val);
    setValue(val);
  };
  const numberValue = value == void 0 ? "" : value;
  return /* @__PURE__ */ React.createElement(TextInput, __spreadValues({
    type: "number",
    value: numberValue,
    placeholder: !readonly ? placeholder : "",
    min: min2,
    max: max2,
    step,
    disabled: readonly,
    onChange
  }, customProps));
}

// src/queryBuilder/widgets/QueryBuilderText.tsx
init_react_import();
function QueryBuilderText({ value, setValue, readonly, maxLength, placeholder, customProps }) {
  const onChange = (value2) => {
    let val = value2;
    if (val === "")
      val = void 0;
    setValue(val);
  };
  const textValue = value || "";
  return /* @__PURE__ */ React.createElement(TextInput, __spreadValues({
    value: textValue,
    placeholder: !readonly ? placeholder : "",
    maxLength,
    onChange
  }, customProps));
}

// src/queryBuilder/widgets/QueryBuilderValueSelect.tsx
init_react_import();
function QueryBuilderValueSelect({ listValues, value, placeholder, setValue, readonly }) {
  var _a2;
  const renderOptions = () => mapListValues(listValues, ({ title, value: value2 }) => {
    return /* @__PURE__ */ React.createElement("option", {
      key: value2,
      value: value2
    }, title);
  });
  const onChange = (e2) => setValue(e2.target.value);
  const hasValue = value != null;
  return /* @__PURE__ */ React.createElement(Select, {
    placeholder,
    onChange,
    value: hasValue ? value : (_a2 = listValues == null ? void 0 : listValues[0]) == null ? void 0 : _a2.value,
    disabled: readonly
  }, renderOptions());
}

// src/queryBuilder/QueryBuilder.tsx
var { uuid, checkTree, loadTree, getTree } = Utils2;
var conjunctions = {
  AND: BasicConfig.conjunctions.AND,
  OR: BasicConfig.conjunctions.OR
};
var OPERATOR_LABELS = {
  like: "contains",
  not_like: "does not contain",
  equal: "is",
  not_equal: "is not",
  is_empty: "is blank",
  is_not_empty: "is not blank",
  select_equals: "is",
  select_not_equals: "is not",
  select_any_in: "is one of",
  select_not_any_in: "is not any of",
  greater: "is greater than",
  greater_or_equal: "is greater or equal to",
  less: "is less than",
  less_or_equal: "is less or equal to",
  between: "is between",
  not_between: "is not between",
  starts_with: "starts with",
  ends_with: "ends with"
};
var operators = __spreadValues({}, Object.entries(OPERATOR_LABELS).reduce((obj, [key, label]) => {
  obj[key] = __spreadProps(__spreadValues({}, BasicConfig.operators[key]), { label });
  return obj;
}, {}));
var widgets = __spreadProps(__spreadValues({}, BasicConfig.widgets), {
  boolean: __spreadProps(__spreadValues({}, BasicConfig.widgets.boolean), {
    factory: QueryBuilderBoolean,
    labelNo: "false",
    labelYes: "true"
  }),
  date: __spreadProps(__spreadValues({}, BasicConfig.widgets.date), {
    factory: QueryBuilderDate,
    dateFormat: "DD.MM.YYYY",
    valueFormat: "YYYY-MM-DD"
  }),
  time: __spreadProps(__spreadValues({}, BasicConfig.widgets.time), {
    factory: QueryBuilderDate,
    timeFormat: "HH:mm",
    valueFormat: "HH:mm:ss"
  }),
  datetime: __spreadProps(__spreadValues({}, BasicConfig.widgets.datetime), {
    factory: QueryBuilderDate,
    timeFormat: "HH:mm",
    dateFormat: "DD.MM.YYYY",
    valueFormat: "YYYY-MM-DD HH:mm:ss"
  }),
  select: __spreadProps(__spreadValues({}, BasicConfig.widgets.select), {
    factory: QueryBuilderValueSelect
  }),
  multiselect: __spreadProps(__spreadValues({}, BasicConfig.widgets.multiselect), {
    factory: QueryBuilderMultiSelect
  }),
  number: __spreadProps(__spreadValues({}, BasicConfig.widgets.number), {
    factory: QueryBuilderNumber
  }),
  text: __spreadProps(__spreadValues({}, BasicConfig.widgets.text), {
    factory: QueryBuilderText
  })
});
var types = __spreadValues({}, BasicConfig.types);
var localeSettings = {
  locale: {
    moment: "en"
  },
  valueLabel: "Value",
  valuePlaceholder: "Value",
  fieldLabel: "Field",
  operatorLabel: "Operator",
  fieldPlaceholder: "Select field",
  operatorPlaceholder: "Select operator",
  deleteLabel: null,
  addGroupLabel: "Add group",
  addRuleLabel: "Add rule",
  addSubRuleLabel: "Add sub rule",
  delGroupLabel: null,
  notLabel: "Not",
  valueSourcesPopupTitle: "Select value source",
  removeRuleConfirmOptions: {
    title: "Are you sure you want to delete this rule?",
    okText: "Yes",
    okType: "danger"
  },
  removeGroupConfirmOptions: {
    title: "Are you sure you want to delete this group?",
    okText: "Yes",
    okType: "danger"
  }
};
var settings = __spreadProps(__spreadValues(__spreadValues({}, BasicConfig.settings), localeSettings), {
  valueSourcesInfo: {
    value: {
      label: "Value"
    },
    field: {
      label: "Field",
      widget: "field"
    },
    func: {
      label: "Function",
      widget: "func"
    }
  },
  canReorder: false,
  canRegroup: false,
  showLabels: false,
  maxNesting: 3,
  canLeaveEmptyGroup: true,
  groupActionsPosition: "bottomLeft",
  delGroupLabel: "Delete Group",
  deleteLabel: "Delete",
  useConfirm,
  renderConfirm: QueryBuilderConfirmModal,
  renderButton: QueryBuilderButton,
  renderButtonGroup: QueryBuilderButtonGroup,
  renderConjs: QueryBuilderConjunctions,
  renderField: QueryBuilderFieldSelect,
  renderOperator: QueryBuilderFieldSelect,
  renderFunc: QueryBuilderFieldSelect
});
var funcs = {};
var BASE_CONFIG = {
  conjunctions,
  operators,
  widgets,
  types,
  settings,
  funcs,
  fields: {}
};
var EMPTY_VALUE = {
  id: uuid(),
  type: "group"
};
function QueryBuilder({ initialValue, fields, onChange, settings: settings2 = {} }) {
  const config5 = __spreadProps(__spreadValues({}, BASE_CONFIG), {
    settings: __spreadValues(__spreadValues({}, BASE_CONFIG.settings), settings2),
    fields: __spreadValues(__spreadValues({}, BASE_CONFIG.fields), fields)
  });
  const [state, setState] = useState18({ tree: checkTree(loadTree(initialValue != null ? initialValue : EMPTY_VALUE), config5), config: config5 });
  useDebounce(() => {
    const { tree: immutableTree, config: config6 } = state;
    const jsonTree = getTree(immutableTree);
    onChange == null ? void 0 : onChange({ immutableTree, config: config6, jsonTree });
  }, 200, [state]);
  const onBuilderChange = (immutableTree, config6) => {
    setState({ tree: immutableTree, config: config6 });
  };
  const renderBuilder = (props) => /* @__PURE__ */ React.createElement(Builder, __spreadValues({}, props));
  return /* @__PURE__ */ React.createElement("div", {
    className: queryBuilderStyles()
  }, /* @__PURE__ */ React.createElement(Query, __spreadProps(__spreadValues({}, config5), {
    value: state.tree,
    onChange: onBuilderChange,
    renderBuilder
  })));
}

// src/router/StackRouter.tsx
init_react_import();
import { AnimatePresence as AnimatePresence7, motion as motion15, useAnimation as useAnimation3, useMotionValue } from "framer-motion";
import { pick as pick3 } from "lodash-es";
import { Children as Children2, useEffect as useEffect19 } from "react";

// node_modules/react-router/esm/react-router.js
init_react_import();

// node_modules/react-router/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
init_react_import();

// node_modules/react-router/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
init_react_import();
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}

// node_modules/react-router/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

// node_modules/react-router/esm/react-router.js
var import_prop_types2 = __toESM(require_prop_types());
import React5 from "react";

// node_modules/history/esm/history.js
init_react_import();

// node_modules/history/node_modules/@babel/runtime/helpers/esm/extends.js
init_react_import();
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}

// node_modules/resolve-pathname/esm/resolve-pathname.js
init_react_import();
function isAbsolute(pathname) {
  return pathname.charAt(0) === "/";
}
function spliceOne(list, index2) {
  for (var i = index2, k = i + 1, n2 = list.length; k < n2; i += 1, k += 1) {
    list[i] = list[k];
  }
  list.pop();
}
function resolvePathname(to, from) {
  if (from === void 0)
    from = "";
  var toParts = to && to.split("/") || [];
  var fromParts = from && from.split("/") || [];
  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;
  if (to && isAbsolute(to)) {
    fromParts = toParts;
  } else if (toParts.length) {
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }
  if (!fromParts.length)
    return "/";
  var hasTrailingSlash;
  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === "." || last === ".." || last === "";
  } else {
    hasTrailingSlash = false;
  }
  var up = 0;
  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];
    if (part === ".") {
      spliceOne(fromParts, i);
    } else if (part === "..") {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }
  if (!mustEndAbs)
    for (; up--; up)
      fromParts.unshift("..");
  if (mustEndAbs && fromParts[0] !== "" && (!fromParts[0] || !isAbsolute(fromParts[0])))
    fromParts.unshift("");
  var result = fromParts.join("/");
  if (hasTrailingSlash && result.substr(-1) !== "/")
    result += "/";
  return result;
}
var resolve_pathname_default = resolvePathname;

// node_modules/value-equal/esm/value-equal.js
init_react_import();
function valueOf(obj) {
  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);
}
function valueEqual(a, b) {
  if (a === b)
    return true;
  if (a == null || b == null)
    return false;
  if (Array.isArray(a)) {
    return Array.isArray(b) && a.length === b.length && a.every(function(item, index2) {
      return valueEqual(item, b[index2]);
    });
  }
  if (typeof a === "object" || typeof b === "object") {
    var aValue = valueOf(a);
    var bValue = valueOf(b);
    if (aValue !== a || bValue !== b)
      return valueEqual(aValue, bValue);
    return Object.keys(Object.assign({}, a, b)).every(function(key) {
      return valueEqual(a[key], b[key]);
    });
  }
  return false;
}
var value_equal_default = valueEqual;

// node_modules/tiny-warning/dist/tiny-warning.esm.js
init_react_import();
var isProduction = false;
function warning(condition, message) {
  if (!isProduction) {
    if (condition) {
      return;
    }
    var text = "Warning: " + message;
    if (typeof console !== "undefined") {
      console.warn(text);
    }
    try {
      throw Error(text);
    } catch (x) {
    }
  }
}
var tiny_warning_esm_default = warning;

// node_modules/tiny-invariant/dist/tiny-invariant.esm.js
init_react_import();
var isProduction2 = false;
var prefix2 = "Invariant failed";
function invariant(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction2) {
    throw new Error(prefix2);
  }
  throw new Error(prefix2 + ": " + (message || ""));
}
var tiny_invariant_esm_default = invariant;

// node_modules/history/esm/history.js
function parsePath(path) {
  var pathname = path || "/";
  var search = "";
  var hash = "";
  var hashIndex = pathname.indexOf("#");
  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }
  var searchIndex = pathname.indexOf("?");
  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }
  return {
    pathname,
    search: search === "?" ? "" : search,
    hash: hash === "#" ? "" : hash
  };
}
function createPath(location) {
  var pathname = location.pathname, search = location.search, hash = location.hash;
  var path = pathname || "/";
  if (search && search !== "?")
    path += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#")
    path += hash.charAt(0) === "#" ? hash : "#" + hash;
  return path;
}
function createLocation2(path, state, key, currentLocation) {
  var location;
  if (typeof path === "string") {
    location = parsePath(path);
    location.state = state;
  } else {
    location = _extends2({}, path);
    if (location.pathname === void 0)
      location.pathname = "";
    if (location.search) {
      if (location.search.charAt(0) !== "?")
        location.search = "?" + location.search;
    } else {
      location.search = "";
    }
    if (location.hash) {
      if (location.hash.charAt(0) !== "#")
        location.hash = "#" + location.hash;
    } else {
      location.hash = "";
    }
    if (state !== void 0 && location.state === void 0)
      location.state = state;
  }
  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e2) {
    if (e2 instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. This is likely caused by an invalid percent-encoding.');
    } else {
      throw e2;
    }
  }
  if (key)
    location.key = key;
  if (currentLocation) {
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== "/") {
      location.pathname = resolve_pathname_default(location.pathname, currentLocation.pathname);
    }
  } else {
    if (!location.pathname) {
      location.pathname = "/";
    }
  }
  return location;
}
function locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && value_equal_default(a.state, b.state);
}
function createTransitionManager() {
  var prompt = null;
  function setPrompt(nextPrompt) {
    true ? tiny_warning_esm_default(prompt == null, "A history supports only one prompt at a time") : void 0;
    prompt = nextPrompt;
    return function() {
      if (prompt === nextPrompt)
        prompt = null;
    };
  }
  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    if (prompt != null) {
      var result = typeof prompt === "function" ? prompt(location, action) : prompt;
      if (typeof result === "string") {
        if (typeof getUserConfirmation === "function") {
          getUserConfirmation(result, callback);
        } else {
          true ? tiny_warning_esm_default(false, "A history needs a getUserConfirmation function in order to use a prompt message") : void 0;
          callback(true);
        }
      } else {
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }
  var listeners = [];
  function appendListener(fn) {
    var isActive = true;
    function listener() {
      if (isActive)
        fn.apply(void 0, arguments);
    }
    listeners.push(listener);
    return function() {
      isActive = false;
      listeners = listeners.filter(function(item) {
        return item !== listener;
      });
    };
  }
  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    listeners.forEach(function(listener) {
      return listener.apply(void 0, args);
    });
  }
  return {
    setPrompt,
    confirmTransitionTo,
    appendListener,
    notifyListeners
  };
}
var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
function clamp2(n2, lowerBound, upperBound) {
  return Math.min(Math.max(n2, lowerBound), upperBound);
}
function createMemoryHistory(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, getUserConfirmation = _props.getUserConfirmation, _props$initialEntries = _props.initialEntries, initialEntries = _props$initialEntries === void 0 ? ["/"] : _props$initialEntries, _props$initialIndex = _props.initialIndex, initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex, _props$keyLength = _props.keyLength, keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var transitionManager = createTransitionManager();
  function setState(nextState) {
    _extends2(history, nextState);
    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  }
  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }
  var index2 = clamp2(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function(entry) {
    return typeof entry === "string" ? createLocation2(entry, void 0, createKey()) : createLocation2(entry, void 0, entry.key || createKey());
  });
  var createHref = createPath;
  function push(path, state) {
    true ? tiny_warning_esm_default(!(typeof path === "object" && path.state !== void 0 && state !== void 0), "You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored") : void 0;
    var action = "PUSH";
    var location = createLocation2(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok) {
      if (!ok)
        return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);
      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }
      setState({
        action,
        location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  }
  function replace(path, state) {
    true ? tiny_warning_esm_default(!(typeof path === "object" && path.state !== void 0 && state !== void 0), "You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored") : void 0;
    var action = "REPLACE";
    var location = createLocation2(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok) {
      if (!ok)
        return;
      history.entries[history.index] = location;
      setState({
        action,
        location
      });
    });
  }
  function go(n2) {
    var nextIndex = clamp2(history.index + n2, 0, history.entries.length - 1);
    var action = "POP";
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok) {
      if (ok) {
        setState({
          action,
          location,
          index: nextIndex
        });
      } else {
        setState();
      }
    });
  }
  function goBack() {
    go(-1);
  }
  function goForward() {
    go(1);
  }
  function canGo(n2) {
    var nextIndex = history.index + n2;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  }
  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }
    return transitionManager.setPrompt(prompt);
  }
  function listen(listener) {
    return transitionManager.appendListener(listener);
  }
  var history = {
    length: entries.length,
    action: "POP",
    location: entries[index2],
    index: index2,
    entries,
    createHref,
    push,
    replace,
    go,
    goBack,
    goForward,
    canGo,
    block,
    listen
  };
  return history;
}

// node_modules/react-router/node_modules/mini-create-react-context/dist/esm/index.js
init_react_import();
import React4, { Component } from "react";
var import_prop_types = __toESM(require_prop_types());
var MAX_SIGNED_31_BIT_INT = 1073741823;
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {};
function getUniqueId() {
  var key = "__global_unique_id__";
  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;
}
function objectIs(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}
function createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on(handler) {
      handlers.push(handler);
    },
    off: function off(handler) {
      handlers = handlers.filter(function(h) {
        return h !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function(handler) {
        return handler(value, changedBits);
      });
    }
  };
}
function onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}
function createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;
  var contextProp = "__create-react-context-" + getUniqueId() + "__";
  var Provider = /* @__PURE__ */ function(_Component) {
    _inheritsLoose(Provider2, _Component);
    function Provider2() {
      var _this;
      _this = _Component.apply(this, arguments) || this;
      _this.emitter = createEventEmitter(_this.props.value);
      return _this;
    }
    var _proto = Provider2.prototype;
    _proto.getChildContext = function getChildContext() {
      var _ref;
      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };
    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits;
        if (objectIs(oldValue, newValue)) {
          changedBits = 0;
        } else {
          changedBits = typeof calculateChangedBits === "function" ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
          if (true) {
            tiny_warning_esm_default((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, "calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: " + changedBits);
          }
          changedBits |= 0;
          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };
    _proto.render = function render() {
      return this.props.children;
    };
    return Provider2;
  }(Component);
  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = import_prop_types.default.object.isRequired, _Provider$childContex);
  var Consumer = /* @__PURE__ */ function(_Component2) {
    _inheritsLoose(Consumer2, _Component2);
    function Consumer2() {
      var _this2;
      _this2 = _Component2.apply(this, arguments) || this;
      _this2.state = {
        value: _this2.getValue()
      };
      _this2.onUpdate = function(newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;
        if ((observedBits & changedBits) !== 0) {
          _this2.setState({
            value: _this2.getValue()
          });
        }
      };
      return _this2;
    }
    var _proto2 = Consumer2.prototype;
    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var observedBits = nextProps.observedBits;
      this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };
    _proto2.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }
      var observedBits = this.props.observedBits;
      this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };
    _proto2.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };
    _proto2.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };
    _proto2.render = function render() {
      return onlyChild(this.props.children)(this.state.value);
    };
    return Consumer2;
  }(Component);
  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = import_prop_types.default.object, _Consumer$contextType);
  return {
    Provider,
    Consumer
  };
}
var index = React4.createContext || createReactContext;
var esm_default = index;

// node_modules/react-router/node_modules/@babel/runtime/helpers/esm/extends.js
init_react_import();
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}

// node_modules/react-router/esm/react-router.js
var import_path_to_regexp = __toESM(require_path_to_regexp());
var import_react_is = __toESM(require_react_is());

// node_modules/react-router/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
init_react_import();
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}

// node_modules/react-router/esm/react-router.js
var import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());
var createNamedContext = function createNamedContext2(name) {
  var context2 = esm_default();
  context2.displayName = name;
  return context2;
};
var historyContext = /* @__PURE__ */ createNamedContext("Router-History");
var context = /* @__PURE__ */ createNamedContext("Router");
var Router = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Router2, _React$Component);
  Router2.computeRootMatch = function computeRootMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };
  function Router2(props) {
    var _this;
    _this = _React$Component.call(this, props) || this;
    _this.state = {
      location: props.history.location
    };
    _this._isMounted = false;
    _this._pendingLocation = null;
    if (!props.staticContext) {
      _this.unlisten = props.history.listen(function(location) {
        if (_this._isMounted) {
          _this.setState({
            location
          });
        } else {
          _this._pendingLocation = location;
        }
      });
    }
    return _this;
  }
  var _proto = Router2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this._isMounted = true;
    if (this._pendingLocation) {
      this.setState({
        location: this._pendingLocation
      });
    }
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.unlisten) {
      this.unlisten();
      this._isMounted = false;
      this._pendingLocation = null;
    }
  };
  _proto.render = function render() {
    return /* @__PURE__ */ React5.createElement(context.Provider, {
      value: {
        history: this.props.history,
        location: this.state.location,
        match: Router2.computeRootMatch(this.state.location.pathname),
        staticContext: this.props.staticContext
      }
    }, /* @__PURE__ */ React5.createElement(historyContext.Provider, {
      children: this.props.children || null,
      value: this.props.history
    }));
  };
  return Router2;
}(React5.Component);
if (true) {
  Router.propTypes = {
    children: import_prop_types2.default.node,
    history: import_prop_types2.default.object.isRequired,
    staticContext: import_prop_types2.default.object
  };
  Router.prototype.componentDidUpdate = function(prevProps) {
    true ? tiny_warning_esm_default(prevProps.history === this.props.history, "You cannot change <Router history>") : void 0;
  };
}
var MemoryRouter = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(MemoryRouter3, _React$Component);
  function MemoryRouter3() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = createMemoryHistory(_this.props);
    return _this;
  }
  var _proto = MemoryRouter3.prototype;
  _proto.render = function render() {
    return /* @__PURE__ */ React5.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };
  return MemoryRouter3;
}(React5.Component);
if (true) {
  MemoryRouter.propTypes = {
    initialEntries: import_prop_types2.default.array,
    initialIndex: import_prop_types2.default.number,
    getUserConfirmation: import_prop_types2.default.func,
    keyLength: import_prop_types2.default.number,
    children: import_prop_types2.default.node
  };
  MemoryRouter.prototype.componentDidMount = function() {
    true ? tiny_warning_esm_default(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { MemoryRouter as Router }`.") : void 0;
  };
}
var Lifecycle = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Lifecycle2, _React$Component);
  function Lifecycle2() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Lifecycle2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    if (this.props.onMount)
      this.props.onMount.call(this, this);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.onUpdate)
      this.props.onUpdate.call(this, this, prevProps);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.props.onUnmount)
      this.props.onUnmount.call(this, this);
  };
  _proto.render = function render() {
    return null;
  };
  return Lifecycle2;
}(React5.Component);
function Prompt(_ref) {
  var message = _ref.message, _ref$when = _ref.when, when = _ref$when === void 0 ? true : _ref$when;
  return /* @__PURE__ */ React5.createElement(context.Consumer, null, function(context2) {
    !context2 ? true ? tiny_invariant_esm_default(false, "You should not use <Prompt> outside a <Router>") : tiny_invariant_esm_default(false) : void 0;
    if (!when || context2.staticContext)
      return null;
    var method = context2.history.block;
    return /* @__PURE__ */ React5.createElement(Lifecycle, {
      onMount: function onMount(self2) {
        self2.release = method(message);
      },
      onUpdate: function onUpdate(self2, prevProps) {
        if (prevProps.message !== message) {
          self2.release();
          self2.release = method(message);
        }
      },
      onUnmount: function onUnmount(self2) {
        self2.release();
      },
      message
    });
  });
}
if (true) {
  messageType = import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.string]);
  Prompt.propTypes = {
    when: import_prop_types2.default.bool,
    message: messageType.isRequired
  };
}
var messageType;
var cache = {};
var cacheLimit = 1e4;
var cacheCount = 0;
function compilePath(path) {
  if (cache[path])
    return cache[path];
  var generator = import_path_to_regexp.default.compile(path);
  if (cacheCount < cacheLimit) {
    cache[path] = generator;
    cacheCount++;
  }
  return generator;
}
function generatePath(path, params) {
  if (path === void 0) {
    path = "/";
  }
  if (params === void 0) {
    params = {};
  }
  return path === "/" ? path : compilePath(path)(params, {
    pretty: true
  });
}
function Redirect(_ref) {
  var computedMatch = _ref.computedMatch, to = _ref.to, _ref$push = _ref.push, push = _ref$push === void 0 ? false : _ref$push;
  return /* @__PURE__ */ React5.createElement(context.Consumer, null, function(context2) {
    !context2 ? true ? tiny_invariant_esm_default(false, "You should not use <Redirect> outside a <Router>") : tiny_invariant_esm_default(false) : void 0;
    var history = context2.history, staticContext = context2.staticContext;
    var method = push ? history.push : history.replace;
    var location = createLocation2(computedMatch ? typeof to === "string" ? generatePath(to, computedMatch.params) : _extends3({}, to, {
      pathname: generatePath(to.pathname, computedMatch.params)
    }) : to);
    if (staticContext) {
      method(location);
      return null;
    }
    return /* @__PURE__ */ React5.createElement(Lifecycle, {
      onMount: function onMount() {
        method(location);
      },
      onUpdate: function onUpdate(self2, prevProps) {
        var prevLocation = createLocation2(prevProps.to);
        if (!locationsAreEqual(prevLocation, _extends3({}, location, {
          key: prevLocation.key
        }))) {
          method(location);
        }
      },
      to
    });
  });
}
if (true) {
  Redirect.propTypes = {
    push: import_prop_types2.default.bool,
    from: import_prop_types2.default.string,
    to: import_prop_types2.default.oneOfType([import_prop_types2.default.string, import_prop_types2.default.object]).isRequired
  };
}
var cache$1 = {};
var cacheLimit$1 = 1e4;
var cacheCount$1 = 0;
function compilePath$1(path, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});
  if (pathCache[path])
    return pathCache[path];
  var keys = [];
  var regexp = (0, import_path_to_regexp.default)(path, keys, options);
  var result = {
    regexp,
    keys
  };
  if (cacheCount$1 < cacheLimit$1) {
    pathCache[path] = result;
    cacheCount$1++;
  }
  return result;
}
function matchPath(pathname, options) {
  if (options === void 0) {
    options = {};
  }
  if (typeof options === "string" || Array.isArray(options)) {
    options = {
      path: options
    };
  }
  var _options = options, path = _options.path, _options$exact = _options.exact, exact = _options$exact === void 0 ? false : _options$exact, _options$strict = _options.strict, strict = _options$strict === void 0 ? false : _options$strict, _options$sensitive = _options.sensitive, sensitive = _options$sensitive === void 0 ? false : _options$sensitive;
  var paths = [].concat(path);
  return paths.reduce(function(matched, path2) {
    if (!path2 && path2 !== "")
      return null;
    if (matched)
      return matched;
    var _compilePath = compilePath$1(path2, {
      end: exact,
      strict,
      sensitive
    }), regexp = _compilePath.regexp, keys = _compilePath.keys;
    var match2 = regexp.exec(pathname);
    if (!match2)
      return null;
    var url = match2[0], values = match2.slice(1);
    var isExact = pathname === url;
    if (exact && !isExact)
      return null;
    return {
      path: path2,
      url: path2 === "/" && url === "" ? "/" : url,
      isExact,
      params: keys.reduce(function(memo2, key, index2) {
        memo2[key.name] = values[index2];
        return memo2;
      }, {})
    };
  }, null);
}
function isEmptyChildren(children) {
  return React5.Children.count(children) === 0;
}
function evalChildrenDev(children, props, path) {
  var value = children(props);
  true ? tiny_warning_esm_default(value !== void 0, "You returned `undefined` from the `children` function of " + ("<Route" + (path ? ' path="' + path + '"' : "") + ">, but you ") + "should have returned a React element or `null`") : void 0;
  return value || null;
}
var Route = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Route3, _React$Component);
  function Route3() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Route3.prototype;
  _proto.render = function render() {
    var _this = this;
    return /* @__PURE__ */ React5.createElement(context.Consumer, null, function(context$1) {
      !context$1 ? true ? tiny_invariant_esm_default(false, "You should not use <Route> outside a <Router>") : tiny_invariant_esm_default(false) : void 0;
      var location = _this.props.location || context$1.location;
      var match2 = _this.props.computedMatch ? _this.props.computedMatch : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;
      var props = _extends3({}, context$1, {
        location,
        match: match2
      });
      var _this$props = _this.props, children = _this$props.children, component = _this$props.component, render2 = _this$props.render;
      if (Array.isArray(children) && isEmptyChildren(children)) {
        children = null;
      }
      return /* @__PURE__ */ React5.createElement(context.Provider, {
        value: props
      }, props.match ? children ? typeof children === "function" ? true ? evalChildrenDev(children, props, _this.props.path) : children(props) : children : component ? /* @__PURE__ */ React5.createElement(component, props) : render2 ? render2(props) : null : typeof children === "function" ? true ? evalChildrenDev(children, props, _this.props.path) : children(props) : null);
    });
  };
  return Route3;
}(React5.Component);
if (true) {
  Route.propTypes = {
    children: import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.node]),
    component: function component(props, propName) {
      if (props[propName] && !(0, import_react_is.isValidElementType)(props[propName])) {
        return new Error("Invalid prop 'component' supplied to 'Route': the prop is not a valid React component");
      }
    },
    exact: import_prop_types2.default.bool,
    location: import_prop_types2.default.object,
    path: import_prop_types2.default.oneOfType([import_prop_types2.default.string, import_prop_types2.default.arrayOf(import_prop_types2.default.string)]),
    render: import_prop_types2.default.func,
    sensitive: import_prop_types2.default.bool,
    strict: import_prop_types2.default.bool
  };
  Route.prototype.componentDidMount = function() {
    true ? tiny_warning_esm_default(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), "You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored") : void 0;
    true ? tiny_warning_esm_default(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), "You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored") : void 0;
    true ? tiny_warning_esm_default(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored") : void 0;
  };
  Route.prototype.componentDidUpdate = function(prevProps) {
    true ? tiny_warning_esm_default(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') : void 0;
    true ? tiny_warning_esm_default(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') : void 0;
  };
}
function addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
}
function addBasename(basename, location) {
  if (!basename)
    return location;
  return _extends3({}, location, {
    pathname: addLeadingSlash(basename) + location.pathname
  });
}
function stripBasename(basename, location) {
  if (!basename)
    return location;
  var base = addLeadingSlash(basename);
  if (location.pathname.indexOf(base) !== 0)
    return location;
  return _extends3({}, location, {
    pathname: location.pathname.substr(base.length)
  });
}
function createURL(location) {
  return typeof location === "string" ? location : createPath(location);
}
function staticHandler(methodName) {
  return function() {
    true ? tiny_invariant_esm_default(false, "You cannot %s with <StaticRouter>", methodName) : tiny_invariant_esm_default(false);
  };
}
function noop6() {
}
var StaticRouter = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(StaticRouter2, _React$Component);
  function StaticRouter2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.handlePush = function(location) {
      return _this.navigateTo(location, "PUSH");
    };
    _this.handleReplace = function(location) {
      return _this.navigateTo(location, "REPLACE");
    };
    _this.handleListen = function() {
      return noop6;
    };
    _this.handleBlock = function() {
      return noop6;
    };
    return _this;
  }
  var _proto = StaticRouter2.prototype;
  _proto.navigateTo = function navigateTo(location, action) {
    var _this$props = this.props, _this$props$basename = _this$props.basename, basename = _this$props$basename === void 0 ? "" : _this$props$basename, _this$props$context = _this$props.context, context2 = _this$props$context === void 0 ? {} : _this$props$context;
    context2.action = action;
    context2.location = addBasename(basename, createLocation2(location));
    context2.url = createURL(context2.location);
  };
  _proto.render = function render() {
    var _this$props2 = this.props, _this$props2$basename = _this$props2.basename, basename = _this$props2$basename === void 0 ? "" : _this$props2$basename, _this$props2$context = _this$props2.context, context2 = _this$props2$context === void 0 ? {} : _this$props2$context, _this$props2$location = _this$props2.location, location = _this$props2$location === void 0 ? "/" : _this$props2$location, rest = _objectWithoutPropertiesLoose(_this$props2, ["basename", "context", "location"]);
    var history = {
      createHref: function createHref(path) {
        return addLeadingSlash(basename + createURL(path));
      },
      action: "POP",
      location: stripBasename(basename, createLocation2(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: staticHandler("go"),
      goBack: staticHandler("goBack"),
      goForward: staticHandler("goForward"),
      listen: this.handleListen,
      block: this.handleBlock
    };
    return /* @__PURE__ */ React5.createElement(Router, _extends3({}, rest, {
      history,
      staticContext: context2
    }));
  };
  return StaticRouter2;
}(React5.Component);
if (true) {
  StaticRouter.propTypes = {
    basename: import_prop_types2.default.string,
    context: import_prop_types2.default.object,
    location: import_prop_types2.default.oneOfType([import_prop_types2.default.string, import_prop_types2.default.object])
  };
  StaticRouter.prototype.componentDidMount = function() {
    true ? tiny_warning_esm_default(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { StaticRouter as Router }`.") : void 0;
  };
}
var Switch2 = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Switch4, _React$Component);
  function Switch4() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Switch4.prototype;
  _proto.render = function render() {
    var _this = this;
    return /* @__PURE__ */ React5.createElement(context.Consumer, null, function(context2) {
      !context2 ? true ? tiny_invariant_esm_default(false, "You should not use <Switch> outside a <Router>") : tiny_invariant_esm_default(false) : void 0;
      var location = _this.props.location || context2.location;
      var element, match2;
      React5.Children.forEach(_this.props.children, function(child) {
        if (match2 == null && /* @__PURE__ */ React5.isValidElement(child)) {
          element = child;
          var path = child.props.path || child.props.from;
          match2 = path ? matchPath(location.pathname, _extends3({}, child.props, {
            path
          })) : context2.match;
        }
      });
      return match2 ? /* @__PURE__ */ React5.cloneElement(element, {
        location,
        computedMatch: match2
      }) : null;
    });
  };
  return Switch4;
}(React5.Component);
if (true) {
  Switch2.propTypes = {
    children: import_prop_types2.default.node,
    location: import_prop_types2.default.object
  };
  Switch2.prototype.componentDidUpdate = function(prevProps) {
    true ? tiny_warning_esm_default(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') : void 0;
    true ? tiny_warning_esm_default(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') : void 0;
  };
}
var useContext10 = React5.useContext;
if (true) {
  if (typeof window !== "undefined") {
    global2 = window;
    key = "__react_router_build__";
    buildNames = {
      cjs: "CommonJS",
      esm: "ES modules",
      umd: "UMD"
    };
    if (global2[key] && global2[key] !== "esm") {
      initialBuildName = buildNames[global2[key]];
      secondaryBuildName = buildNames["esm"];
      throw new Error("You are loading the " + secondaryBuildName + " build of React Router " + ("on a page that is already running the " + initialBuildName + " ") + "build, so things won't work right.");
    }
    global2[key] = "esm";
  }
}
var global2;
var key;
var buildNames;
var initialBuildName;
var secondaryBuildName;

// src/router/StackRouter.tsx
import { HashRouter, MemoryRouter as MemoryRouter2, Switch as Switch3, useHistory as useHistory2, useLocation } from "react-router-dom";
import { useMap } from "react-use";

// src/router/heightContext.ts
init_react_import();
import { MotionValue } from "framer-motion";
import { createContext as createContext10 } from "react";
var HeightContext = createContext10(new MotionValue(0));
var stackRouterTransition = { ease: "easeInOut", duration: 0.4, type: "tween" };

// src/router/StackHeader.tsx
init_react_import();
import { AnimatePresence as AnimatePresence6, motion as motion14 } from "framer-motion";
import { useContext as useContext11 } from "react";
import { useHistory } from "react-router-dom";
var StackRouterHeader = styled(motion14.div, {
  backgroundColor: "$gray5",
  padding: "0 $4",
  height: "$$headerHeight",
  zIndex: "$default",
  position: "relative",
  isolation: "isolate",
  width: "100%",
  display: "flex",
  gridTemplateColumns: "1fr auto 1fr",
  alignItems: "center"
});
var StackRouterHeading = styled(motion14.span, Heading, {
  gridColumn: "2",
  position: "absolute",
  width: "100%",
  textAlign: "center",
  left: 0,
  fontWeight: "$medium",
  userSelect: "none",
  pointerEvents: "none",
  fontSize: "$4"
});
var headingTransition = { type: "spring", bounce: 0.2, duration: stackRouterTransition.duration, delay: 0.05 };
var headingContainerTransition = { type: "tween", duration: stackRouterTransition.duration };
function StackHeader({ title, hasHeader = true, hasBackButton }) {
  const history = useHistory();
  const paneHeight = useContext11(HeightContext);
  const showBackButton = history.length > 1 && hasBackButton;
  const headingVariants = {
    initial() {
      const isPush = history.action === "PUSH";
      return {
        x: isPush ? "100%" : "-25%",
        opacity: 0,
        transition: headingTransition
      };
    },
    enter() {
      return {
        x: 0,
        opacity: 1,
        transition: headingTransition
      };
    },
    exit({ action = history.action } = {}) {
      const isPop = action === "POP";
      return {
        x: isPop ? "100%" : "-10%",
        opacity: 0,
        transition: headingTransition
      };
    }
  };
  const headerContainerVariants = {
    normal: {
      height: 80,
      transition: headingContainerTransition
    },
    collapsed: {
      height: 0,
      transition: headingContainerTransition
    }
  };
  return /* @__PURE__ */ React.createElement(StackRouterHeader, {
    initial: false,
    animate: hasHeader ? "normal" : "collapsed",
    variants: headerContainerVariants
  }, /* @__PURE__ */ React.createElement(AnimatePresence6, {
    initial: false,
    exitBeforeEnter: false,
    custom: { action: history.action }
  }, hasHeader && showBackButton && /* @__PURE__ */ React.createElement(Button, {
    as: motion14.button,
    onPress: history.goBack,
    icon: ArrowLeftIcon,
    appearance: "minimal",
    round: true,
    disabled: paneHeight.isAnimating(),
    initial: { opacity: 0 },
    animate: { opacity: 1 },
    exit: { opacity: 0 },
    transition: { type: "tween", duration: 0.1 },
    css: { color: "$label", gridColumn: "1" }
  }), hasHeader && /* @__PURE__ */ React.createElement(StackRouterHeading, {
    key: title,
    initial: "initial",
    animate: "enter",
    exit: "exit",
    variants: headingVariants
  }, title)));
}

// src/router/StackRouter.tsx
var StackRoute = (props) => /* @__PURE__ */ React.createElement(Route, __spreadValues({}, props));
var StackRouterCard = styled(motion15.div, Card, {
  $$headerHeight: "$sizes$16",
  width: "100%",
  overflow: "hidden",
  borderRadius: "$3",
  defaultVariants: {
    elevation: 2,
    border: true
  }
});
function StackRouterEngine(_a2) {
  var _b = _a2, { children, containerProps = {} } = _b, props = __objRest(_b, ["children", "containerProps"]);
  var _a3;
  const [routeMeta, { set }] = useMap({});
  const location = useLocation();
  const height = useMotionValue(0);
  const heightAnimation = useAnimation3();
  useEffect19(() => {
    height.onChange((value) => {
      heightAnimation.start({ height: value, transition: stackRouterTransition });
    });
    return () => height.destroy();
  }, [height]);
  const { pathname } = location;
  useEffect19(() => {
    Children2.forEach(children, (child, index2) => {
      var _a4, _b2, _c, _d;
      if ((_a4 = child == null ? void 0 : child.props) == null ? void 0 : _a4.path) {
        const start = ((_b2 = child.props.start) != null ? _b2 : index2 === 0) ? true : false;
        const hasHeader = (_c = child.props.hasHeader) != null ? _c : true;
        const hasBackButton = (_d = child.props.hasBackButton) != null ? _d : !!hasHeader && !start;
        set(child.props.path, {
          title: child.props.title,
          hasHeader,
          hasBackButton,
          start
        });
      }
    });
  }, [children]);
  const routeProps = (_a3 = routeMeta[pathname]) != null ? _a3 : {};
  return /* @__PURE__ */ React.createElement(StackRouterCard, __spreadValues(__spreadValues({}, pick3(props, "css", "as", "border", "elevation")), containerProps), /* @__PURE__ */ React.createElement(StackHeader, __spreadValues({}, routeProps)), /* @__PURE__ */ React.createElement(motion15.div, {
    style: {
      position: "relative",
      display: "grid",
      gridTemplateColumns: "100% 100%"
    },
    animate: heightAnimation
  }, /* @__PURE__ */ React.createElement(HeightContext.Provider, {
    value: height
  }, /* @__PURE__ */ React.createElement(AnimatedSwitch, null, children))));
}
var StackRouter = (_a2) => {
  var _b = _a2, { hashRouting = false } = _b, props = __objRest(_b, ["hashRouting"]);
  var _a3;
  const Router2 = hashRouting ? HashRouter : MemoryRouter2;
  const initialEntries = [((_a3 = Children2.toArray(props.children)) == null ? void 0 : _a3[0]).props.path];
  return /* @__PURE__ */ React.createElement(Router2, __spreadValues({
    initialEntries
  }, pick3(props, ["initialEntries", "initialIndex", "basename", "hashtype"])), /* @__PURE__ */ React.createElement(StackRouterEngine, __spreadValues({}, props)));
};
function AnimatedSwitch({ children }) {
  const location = useLocation();
  const history = useHistory2();
  return /* @__PURE__ */ React.createElement(AnimatePresence7, {
    initial: false,
    custom: { action: history.action },
    presenceAffectsLayout: true
  }, /* @__PURE__ */ React.createElement(Switch3, {
    location,
    key: location.pathname
  }, children));
}

// src/router/StackPage.tsx
init_react_import();
import { motion as motion16 } from "framer-motion";
import { useContext as useContext12, useRef as useRef24 } from "react";
import { useHistory as useHistory3 } from "react-router-dom";
var MotionPane = styled(motion16.div, Pane, {
  padding: "$5",
  backgroundColor: "$background",
  width: "100%",
  height: "100%"
});
function StackPage(_a2) {
  var _b = _a2, { children } = _b, props = __objRest(_b, ["children"]);
  const history = useHistory3();
  const ref = useRef24(null);
  const height = useContext12(HeightContext);
  const variants = {
    initial() {
      const isPush = history.action === "PUSH";
      return __spreadValues({
        height: height.getPrevious() || "100%",
        transition: stackRouterTransition
      }, isPush ? {
        top: 0,
        right: 0,
        left: 0,
        bottom: 0,
        zIndex: 9999,
        x: "100%",
        position: "relative"
      } : {
        gridColumn: "1",
        x: "-25%",
        zIndex: 0,
        filter: "brightness(0.8)"
      });
    },
    enter() {
      var _a3;
      const isPush = (history == null ? void 0 : history.action) === "PUSH";
      const refHeight = ((_a3 = ref == null ? void 0 : ref.current) == null ? void 0 : _a3.firstElementChild.getBoundingClientRect().height) + 50;
      height.set(refHeight);
      return __spreadValues({
        x: 0,
        height: "100%",
        transition: stackRouterTransition,
        transitionEnd: { position: "static" },
        filter: "brightness(1)"
      }, isPush ? { position: "relative", top: 0, right: 0, bottom: 0, left: 0 } : {});
    },
    exit({ action = history.action } = {}) {
      const isPop = action === "POP";
      return __spreadValues({
        transition: stackRouterTransition,
        position: "absolute",
        top: 0,
        right: 0,
        left: 0,
        bottom: 0
      }, isPop ? { x: "100%", zIndex: 9999 } : { x: "-10%", zIndex: 0, filter: "brightness(0.8)" });
    }
  };
  return /* @__PURE__ */ React.createElement(MotionPane, {
    ref,
    initial: "initial",
    animate: "enter",
    exit: "exit",
    variants,
    css: props == null ? void 0 : props.css,
    style: { height: 0 }
  }, children);
}

// src/separator/Separator.tsx
init_react_import();
import { useSeparator as useSeparator3 } from "react-aria";
var StyledSeparator = styled("div", {
  backgroundColor: "$gray4",
  variants: {
    orientation: {
      horizontal: {
        width: "100%",
        height: "1px",
        margin: "$1 0"
      },
      vertical: {
        width: "1px",
        height: "100%",
        margin: "0 $1"
      }
    }
  },
  defaultVariants: {
    orientation: "horizontal"
  }
});
function Separator(props) {
  const { separatorProps } = useSeparator3(props);
  return /* @__PURE__ */ React.createElement(StyledSeparator, __spreadValues(__spreadValues({}, props), separatorProps));
}

// src/sheet/Sheet.tsx
init_react_import();
import { motion as motion17, useAnimation as useAnimation4 } from "framer-motion";
var SheetFactory = styled(Pane, {
  backgroundColor: "$background",
  flexDirection: "column",
  display: "flex",
  alignSelf: "center",
  marginBottom: "$1",
  marginInline: "0",
  boxShadow: "$4",
  zIndex: "calc($$zIndex + 1)",
  width: "100%",
  maxWidth: "max(600px, 40vw)",
  height: "100%",
  "@tabletPortrait": {
    alignSelf: "initial",
    marginBottom: "0"
  },
  variants: {
    side: {
      right: {
        boxShadow: "-10px 0 15px rgb(0 0 0 0.75)"
      },
      left: {
        boxShadow: "10px 0 15px rgb(0 0 0 0.75)"
      },
      bottom: {
        boxShadow: "0 10px 15px rgb(0 0 0 0.75)",
        maxWidth: "100vw",
        maxHeight: "max(400px, 40vh)",
        marginBottom: "0"
      }
    }
  }
});
var SheetMotion = {
  right: {
    open: { x: 0, y: 0, opacity: 1 },
    closed: { x: "100%", y: 0, opacity: 0 }
  },
  left: {
    open: { x: 0, y: 0, opacity: 1 },
    closed: { x: "-100%", y: 0, opacity: 0 }
  },
  bottom: {
    open: { x: 0, y: 0, opacity: 1 },
    closed: { x: 0, y: "100%", opacity: 0 }
  }
};
var overlayPosition = {
  right: {
    justifyContent: "flex-end",
    alignItems: "flex-start"
  },
  left: {
    justifyContent: "flex-start",
    alignItems: "flex-start"
  },
  bottom: {
    flexDirection: "column",
    alignItems: "flex-end",
    justifyContent: "flex-end"
  }
};
function Sheet({
  onClose,
  onOpen,
  onConfirm,
  isShown,
  shouldCloseOnClick = true,
  shouldCloseOnEscapePress = true,
  overlayProps,
  preventBodyScroll = true,
  width,
  css: css2,
  side = "right",
  contentContainerProps,
  children,
  hideHeader = false,
  hideClose = false,
  showConfirm = false,
  cancelLabel = "Close",
  confirmLabel = "Confirm",
  loading = true,
  title,
  subtitle
}) {
  const controls = useAnimation4();
  tiny_warning_esm_default(typeof title !== "undefined", "The `title` prop is required for the Sheet component. This lets us describe the Sheet with an aria region for accessbility.");
  return /* @__PURE__ */ React.createElement(Overlay, __spreadValues({
    onHide: () => {
      controls.start(SheetMotion[side].closed);
      onClose == null ? void 0 : onClose();
    },
    onShow: () => {
      controls.start(SheetMotion[side].open);
      onOpen == null ? void 0 : onOpen();
    },
    shouldCloseOnClick,
    shouldCloseOnEscapePress,
    isShown,
    preventBodyScroll,
    containerCSS: __spreadValues({
      display: "flex"
    }, overlayPosition[side])
  }, overlayProps), (close) => /* @__PURE__ */ React.createElement(SheetFactory, {
    as: motion17.div,
    initial: SheetMotion[side].closed,
    animate: controls,
    transition: {
      type: "tween",
      ease: "easeInOut",
      duration: 0.35
    },
    side,
    role: "dialog",
    style: { width },
    css: css2
  }, !hideHeader || !hideClose || showConfirm ? /* @__PURE__ */ React.createElement(Pane, {
    css: {
      padding: "$4",
      flexShrink: 0,
      borderBottom: "1px solid $colors$muted",
      display: "flex",
      alignItems: "center"
    }
  }, !hideHeader && /* @__PURE__ */ React.createElement(VStack, {
    css: { flex: 1 },
    space: "small"
  }, /* @__PURE__ */ React.createElement(Heading, {
    size: "subHeadline"
  }, title), !!subtitle && /* @__PURE__ */ React.createElement(Text, {
    size: "caption2"
  }, subtitle)), !hideClose && /* @__PURE__ */ React.createElement(Button, {
    onClick: () => onClose == null ? void 0 : onClose(close),
    appearance: "minimal"
  }, cancelLabel), showConfirm && /* @__PURE__ */ React.createElement(Button, {
    loading,
    onClick: () => onConfirm == null ? void 0 : onConfirm(close),
    appearance: "minimal"
  }, confirmLabel)) : null, /* @__PURE__ */ React.createElement(Box, __spreadProps(__spreadValues({}, contentContainerProps), {
    css: __spreadValues({ padding: "$5", overflowY: "scroll" }, contentContainerProps == null ? void 0 : contentContainerProps.css)
  }), typeof children === "function" ? children(close) : typeof children === "string" ? /* @__PURE__ */ React.createElement(Paragraph, null, children) : children)));
}

// src/statistic/Statistic.tsx
init_react_import();
import { useLabel as useLabel3 } from "react-aria";
import { useIntl as useIntl4 } from "react-intl";
var StatisticWrapper = styled("div", VStack, {
  isolation: "isolate",
  position: "relative",
  variants: {
    loading: {
      true: {
        ".gc-statistic-value": {
          opacity: "0"
        },
        "&::after": {
          content: "''",
          height: "$2",
          width: "min(80%, $20)",
          backgroundColor: "$gray3",
          position: "absolute",
          bottom: "0",
          transform: "translateY(-50%)",
          borderRadius: "10000px"
        }
      }
    }
  }
});
var DEFAULT_FORMAT_OPTIONS = {
  style: "decimal"
};
function Statistic(_a2) {
  var _b = _a2, { label, value, loading = false, formatOptions } = _b, props = __objRest(_b, ["label", "value", "loading", "formatOptions"]);
  const { labelProps, fieldProps } = useLabel3(__spreadValues({ label }, props));
  const { formatNumber } = useIntl4();
  if (typeof value === "string") {
    value = Number(value);
  }
  if (typeof value === "number" && !!formatOptions) {
    if (formatOptions === true) {
      formatOptions = DEFAULT_FORMAT_OPTIONS;
    }
    value = formatNumber(value, formatOptions);
  }
  return /* @__PURE__ */ React.createElement(StatisticWrapper, {
    loading,
    space: "small"
  }, /* @__PURE__ */ React.createElement(Heading, __spreadValues({
    as: "label",
    size: "groupHeadline",
    css: { color: "$secondary", capsize: { fontSize: 10, lineGap: 3 } }
  }, labelProps), label), /* @__PURE__ */ React.createElement(Box, __spreadValues({
    as: "span",
    className: "gc-statistic-value",
    css: { fontSize: "clamp(24px, 5vw, 35px)", fontWeight: "$light" }
  }, fieldProps), value));
}

// src/table/Table.tsx
init_react_import();
import { isEmpty as isEmpty2 } from "lodash-es";
import { useEffect as useEffect21, useMemo as useMemo12, useRef as useRef27 } from "react";
import {
  useGroupBy,
  usePagination,
  useResizeColumns,
  useRowSelect,
  useRowState,
  useSortBy,
  useTable
} from "react-table";
import { useScroll } from "react-use";

// src/table/hooks/useFormatters.ts
init_react_import();
import { isNaN as isNaN2, isPlainObject } from "lodash-es";
var useFormatters = (hooks) => {
  hooks.accessValue.push(accessValue);
};
function isEmptyValue(value, emptyValue) {
  if (typeof emptyValue !== "undefined" && value === emptyValue)
    return true;
  if (typeof value === "undefined" || value === null || isNaN2(value))
    return true;
  if (Array.isArray(value) && value.length <= 0)
    return true;
  if (isPlainObject(value) && Object.getOwnPropertyNames(value).length <= 0)
    return true;
  return false;
}
function accessValue(value, { column }) {
  if (isEmptyValue(value, column.emptyValue) && typeof (column == null ? void 0 : column.defaultValue) !== "undefined") {
    return column == null ? void 0 : column.defaultValue;
  }
  if (!!column.cellFormatter) {
    return column.cellFormatter(value);
  }
  return value;
}
useFormatters.pluginName = "useFormatters";

// src/table/hooks/useCheckboxes.tsx
init_react_import();
function useCheckboxes(hooks) {
  hooks.visibleColumns.push(insertRowCheckboxes);
}
function insertRowCheckboxes(columns, meta) {
  if (meta.instance.disableRowSelection || columns[0].id === "selection")
    return columns;
  return [
    {
      id: "selection",
      Header: ({ getToggleAllRowsSelectedProps, toggleAllRowsSelected }) => {
        if (!meta.instance.selectAll)
          return null;
        const _a2 = getToggleAllRowsSelectedProps(), { title } = _a2, rest = __objRest(_a2, ["title"]);
        return /* @__PURE__ */ React.createElement(Checkbox, __spreadProps(__spreadValues({
          "aria-label": title,
          reducedMotion: true
        }, rest), {
          onChange: toggleAllRowsSelected
        }));
      },
      Cell: ({ row }) => {
        const _a2 = row.getToggleRowSelectedProps(), { title } = _a2, rest = __objRest(_a2, ["title"]);
        return /* @__PURE__ */ React.createElement(Checkbox, __spreadProps(__spreadValues({
          "aria-label": title,
          reducedMotion: true
        }, rest), {
          onChange: row.toggleRowSelected
        }));
      },
      width: 50,
      minWidth: 50,
      maxWidth: 50,
      disableResizing: true,
      loadingState: false,
      sticky: "left"
    },
    ...columns
  ];
}
useCheckboxes.pluginName = "useCheckboxes";

// src/table/hooks/useGridLayout.ts
init_react_import();
import { clamp as clamp3 } from "lodash-es";
function useGridLayout(hooks) {
  hooks.stateReducers.push(reducer);
  hooks.getTableProps.push(getTableProps);
  hooks.getHeaderProps.push(getHeaderProps);
}
useGridLayout.pluginName = "useGridLayout";
var getTableProps = (props, { instance }) => {
  const columnWidths = instance.visibleColumns.map((column) => {
    var _a2, _b;
    const index2 = instance.allColumns.findIndex((col) => col.id === column.id);
    const width = (_a2 = instance.state.gridLayout.columnWidths[index2]) != null ? _a2 : `auto`;
    const maxWidth = (_b = column.maxWidth) != null ? _b : 500;
    column.minWidth || (column.minWidth = 100);
    if (width === "max-content") {
      return "max-content";
    }
    if (column.width !== 150 && width === `auto`) {
      return typeof column.width === "number" ? `minmax(auto, ${clamp3(column.width, column.minWidth, maxWidth)}px)` : `minmax(auto, ${maxWidth}px})`;
    }
    return width === "auto" ? `minmax(${width}, 1fr)` : `${clamp3(width, column.minWidth, maxWidth)}px`;
  });
  return [
    props,
    {
      style: {
        display: `inline-grid`,
        gridTemplateColumns: columnWidths.join(` `)
      }
    }
  ];
};
var getHeaderProps = (props, { column }) => [
  props,
  {
    id: `header-cell-${column.id}`,
    style: {
      position: `sticky`
    }
  }
];
function reducer(state, action, _, instance) {
  if (action.type === `init`) {
    return __spreadValues({
      gridLayout: {
        columnWidths: instance.columns.map(() => `auto`)
      }
    }, state);
  }
  if (action.type === `columnStartResizing`) {
    const { columnId } = action;
    const columnIndex = instance.visibleColumns.findIndex((col) => col.id === columnId);
    const elWidth = getElementWidth(columnId);
    if (elWidth !== void 0) {
      return __spreadProps(__spreadValues({}, state), {
        gridLayout: __spreadProps(__spreadValues({}, state.gridLayout), {
          columnId,
          columnIndex,
          startingWidth: elWidth
        })
      });
    } else {
      return state;
    }
  }
  if (action.type === `columnResizing`) {
    const { columnIndex, startingWidth, columnWidths } = state.gridLayout;
    const change = state.columnResizing.startX - action.clientX;
    const newWidth = startingWidth - change;
    const columnWidthsCopy = [...columnWidths];
    columnWidthsCopy[columnIndex] = clamp3(newWidth, 20, 500);
    return __spreadProps(__spreadValues({}, state), {
      gridLayout: __spreadProps(__spreadValues({}, state.gridLayout), {
        columnWidths: columnWidthsCopy
      })
    });
  }
  if (action.type === `resetColumnSize`) {
    const { columnIndex, columnWidths } = state.gridLayout;
    const columnWidthsCopy = [...columnWidths];
    columnWidthsCopy[columnIndex] = "max-content";
    return __spreadProps(__spreadValues({}, state), {
      gridLayout: __spreadProps(__spreadValues({}, state.gridLayout), {
        columnWidths: columnWidthsCopy
      })
    });
  }
}
function getElementWidth(columnId) {
  var _a2;
  const width = (_a2 = document.getElementById(`header-cell-${columnId}`)) == null ? void 0 : _a2.offsetWidth;
  if (width !== void 0) {
    return width;
  }
}

// src/table/hooks/useColumnSummary.tsx
init_react_import();
import React6, { useMemo as useMemo11 } from "react";
import {
  actions,
  functionalUpdate
} from "react-table";

// src/table/hooks/aggregations.ts
var aggregations_exports = {};
__export(aggregations_exports, {
  average: () => average,
  count: () => count,
  max: () => max,
  median: () => median,
  min: () => min,
  minMax: () => minMax,
  sum: () => sum,
  unique: () => unique,
  uniqueCount: () => uniqueCount
});
init_react_import();
import { isNaN as isNaN3 } from "lodash-es";
function sum(values, aggregatedValues) {
  return (aggregatedValues || values).reduce((sum2, next) => sum2 + (typeof next === "number" ? next : !isNaN3(next) ? Number(next) : 0), 0);
}
function min(values) {
  let min2 = values[0] || 0;
  values.forEach((value) => {
    value = !isNaN3(Number(value)) ? Number(value) : 0;
    if (typeof value === "number") {
      min2 = Math.min(min2, value);
    }
  });
  return min2;
}
function max(values) {
  let max2 = values[0] || 0;
  values.forEach((value) => {
    value = !isNaN3(Number(value)) ? Number(value) : 0;
    if (typeof value === "number") {
      max2 = Math.max(max2, value);
    }
  });
  return max2;
}
function minMax(values) {
  let min2 = values[0] || 0;
  let max2 = values[0] || 0;
  values.forEach((value) => {
    value = !isNaN3(Number(value)) ? Number(value) : 0;
    if (typeof value === "number") {
      min2 = Math.min(min2, value);
      max2 = Math.max(max2, value);
    }
  });
  return `${min2}..${max2}`;
}
function average(values) {
  return sum(null, values) / values.length;
}
function median(values) {
  if (!values.length) {
    return null;
  }
  const mid = Math.floor(values.length / 2);
  const nums = [...values].sort((a, b) => a - b);
  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;
}
function unique(values) {
  return Array.from(new Set(values).values());
}
function uniqueCount(values) {
  return new Set(values).size;
}
function count(values) {
  return values.length;
}

// src/table/hooks/useColumnSummary.tsx
function getFirstDefined(...args) {
  for (let i = 0; i < args.length; i += 1) {
    if (typeof args[i] !== "undefined") {
      return args[i];
    }
  }
}
actions.resetColumnSummary = "resetColumnSummary";
actions.setColumnSummary = "setColumnSummary";
var useColumnSummary = (hooks) => {
  hooks.useOptions.push(useOptions);
  hooks.stateReducers.push(reducer2);
  hooks.useInstance.push(useInstance);
};
useColumnSummary.pluginName = "useColumnSummary";
var defaultUserColumnSummaryFunctions = {};
function DefaultColumnSummaryComponent({ column: { columnSummary } }) {
  return columnSummary.value;
}
function useOptions(options) {
  const { columns = [] } = options;
  const columnsWithDefaultSummary = useMemo11(() => columns.map((column) => {
    if (!column.ColumnSummary && !!column.columnSummaryFunction) {
      return __spreadProps(__spreadValues({}, column), {
        ColumnSummary: DefaultColumnSummaryComponent
      });
    }
    return column;
  }), [columns]);
  return __spreadProps(__spreadValues({}, options), {
    columns: columnsWithDefaultSummary
  });
}
function reducer2(state, action, _, instance) {
  if (action.type === actions.init) {
    return __spreadValues({
      columnSummary: {}
    }, state);
  }
  if (action.type === actions.resetColumnSummary) {
    return __spreadProps(__spreadValues({}, state), {
      columnSummary: instance.initialState.columnSummary || {}
    });
  }
  if (action.type === actions.setColumnSummary) {
    return __spreadProps(__spreadValues({}, state), {
      columnSummary: functionalUpdate(action.columnSummary, state.columnSummary)
    });
  }
}
function useInstance(instance) {
  const {
    state: { columnSummary },
    allColumns,
    rows,
    columnSummaryFunctions: userColumnSummaryFunctions = defaultUserColumnSummaryFunctions,
    dispatch,
    disableColumnSummary
  } = instance;
  const setColumnSummary = React6.useCallback((columnSummary2) => {
    return dispatch({ type: actions.setColumnSummary, columnSummary: columnSummary2 });
  }, [dispatch]);
  React6.useMemo(() => {
    allColumns.forEach((column) => {
      const { id, accessor, columnSummaryFunction } = column;
      column.hasColumnSummary = accessor ? !!getFirstDefined(column.disableColumnSummary === true ? false : void 0, disableColumnSummary === true ? false : void 0, !!column.columnSummaryFunction, true) : false;
      const columnSummaryType = columnSummary[id] || columnSummaryFunction;
      const summaryFunction = typeof columnSummaryType === "function" ? columnSummaryType : userColumnSummaryFunctions[columnSummaryType] || aggregations_exports[columnSummaryType];
      let columnSummaryValue = null;
      if (summaryFunction) {
        columnSummaryValue = summaryFunction(rows.map((row) => row.original[column.id]));
      } else if (columnSummaryType) {
        console.info({ column });
        throw new Error(`React Table: Invalid columnSummary function provided for column listed above`);
      }
      column.columnSummary = {
        type: columnSummaryType,
        value: columnSummaryValue
      };
      column.ColumnSummary = column.ColumnSummary || DefaultColumnSummaryComponent;
      column.setColumnSummary = (data) => {
        setColumnSummary(__spreadProps(__spreadValues({}, columnSummary), { [id]: data }));
      };
    });
  }, [allColumns, setColumnSummary, columnSummary, userColumnSummaryFunctions, rows, disableColumnSummary]);
  Object.assign(instance, {
    setColumnSummary
  });
}

// src/table/hooks/useDblClickResetColumn.ts
init_react_import();
import { actions as actions2 } from "react-table";
function useDblClickResetColumn(hooks) {
  hooks.getResizerProps.push(getResizerProps);
}
actions2.resetColumnSize = "resetColumnSize";
var getResizerProps = (props, { instance, header }) => {
  const { dispatch } = instance;
  return [
    props,
    {
      onDoubleClick: () => {
        dispatch({ type: actions2.resetColumnSize, columnId: header.id });
      }
    }
  ];
};

// src/table/TableElements.tsx
init_react_import();
import { useRef as useRef25 } from "react";
import { useButton as useButton6 } from "react-aria";
var StyledTable = styled("table", Pane, {
  $$borderColor: "$colors$gray5",
  width: "100%",
  height: "100%",
  minHeight: "0",
  minWidth: "0",
  display: "inline-grid",
  overflow: "auto",
  borderWidth: "0",
  gridAutoRows: "max-content"
});
var ResizingHandle = styled("div", {
  opacity: "0",
  backgroundColor: "$gray4",
  display: "inline-block",
  width: "3px",
  height: "calc(100% - $4)",
  position: "absolute",
  right: "$1",
  top: "$2",
  zIndex: "1",
  touchAction: "none",
  transition: "opacity $fast",
  borderRadius: "500px",
  "&:hover": {
    backgroundColor: "$gray3"
  },
  variants: {
    isResizing: {
      true: {
        "&, &:hover": {
          backgroundColor: "$primary"
        }
      }
    }
  }
});
var stickyVariant = {
  position: "sticky !important",
  top: "0",
  zIndex: "3"
};
var stickyColumnVariant = {
  position: "sticky !important",
  left: "0",
  zIndex: "2"
};
var StyledTableHeaderText = styled("div", Heading, {
  userSelect: "none",
  verticalAlign: "middle",
  alignItems: "center",
  fontWeight: "$regular",
  letterSpacing: "0.6px",
  textTransform: "uppercase",
  height: "60px",
  maxHeight: "60px",
  display: "flex",
  backgroundColor: "$background",
  minWidth: "max-content",
  borderBottom: "1px solid $gray5",
  paddingInline: "$2",
  scrollPaddingInline: "$3",
  scrollMarginInline: "$3",
  alignSelf: "start",
  zIndex: "-1",
  capsize: {
    fontSize: fontPxToNum(1)
  },
  [`&:hover ${ResizingHandle}`]: {
    opacity: "1"
  },
  variants: {
    borderTop: {
      true: {
        borderTop: "1px solid $gray5"
      }
    },
    sticky: { true: stickyVariant },
    stickyColumn: { true: stickyColumnVariant },
    position: {
      first: {
        paddingInlineStart: "$5"
      },
      last: {
        paddingInlineEnd: "$5"
      }
    }
  },
  compoundVariants: [
    {
      sticky: true,
      stickyColumn: true,
      css: __spreadValues(__spreadValues({}, stickyColumnVariant), stickyVariant)
    }
  ]
});
var StyledTableHeaderPill = styled("div", HStack, {
  padding: "$1 $2",
  transform: "translateX(-$space$2)",
  display: "inline-flex",
  borderRadius: "500px",
  whiteSpace: "nowrap",
  alignItems: "center",
  color: "$gray1",
  "span:not(:first-child)": {
    color: "$label"
  },
  "&:hover": {
    backgroundColor: "$colors$gray6"
  },
  "&:active": {
    backgroundColor: "$colors$gray5"
  },
  variants: {
    sortable: {
      false: {
        display: "contents"
      }
    }
  }
});
var StyledTableText = styled("div", {
  display: "flex",
  alignItems: "center",
  position: "relative",
  height: "60px",
  maxHeight: "60px",
  backgroundColor: "$background",
  borderBottom: "1px solid $gray5",
  whiteSpace: "nowrap",
  textOverflow: "ellipsis",
  overflow: "hidden",
  paddingInline: "$2",
  capsize: {
    fontSize: 15
  },
  variants: {
    stickyColumn: { true: stickyColumnVariant },
    loading: {
      true: {
        visibility: "hidden",
        color: "transparent",
        "&::after": {
          content: '" "',
          opacity: "1",
          visibility: "visible",
          height: "$2",
          width: "min($20, 80%)",
          backgroundColor: "$colors$gray4",
          position: "absolute",
          top: "50%",
          left: "0",
          borderRadius: "500px",
          transform: "translateY(-50%)"
        }
      }
    },
    position: {
      first: {
        paddingInlineStart: "$5"
      },
      last: {
        paddingInlineEnd: "$5"
      }
    }
  },
  compoundVariants: [{ loading: true, position: "first", css: { "&::after": { left: "$5" } } }]
});
var StyledTableRow = styled("div", {
  display: "contents",
  height: 60,
  maxHeight: 60,
  color: "inherit",
  appearance: "none",
  variants: {
    hasRowAction: {
      true: {
        cursor: "pointer",
        "&:hover > *": {
          backgroundColor: "$colors$gray6"
        },
        "&:active > *": {
          backgroundColor: "$colors$gray5"
        },
        "&:focus > *": {
          backgroundColor: "$colors$gray6",
          boxShadow: "0 0 0 2px $colors$primary"
        }
      }
    }
  }
});
var PaginationWrapper = styled("div", {
  display: "flex",
  alignItems: "center",
  justifyContent: "start",
  backgroundColor: "$gray6",
  padding: "0 clamp($1, 5vw, $5)",
  height: "clamp($12, 5vw, $18)",
  width: "100%",
  maxWidth: "min(100%, 100vw)",
  gridColumn: "1 / -1",
  gap: "clamp($2, 3vw, $4)",
  select: {
    height: "clamp($controlHeightSmall, 3vw, $controlHeightRegular)"
  },
  variants: {
    align: {
      left: {
        justifyContent: "start"
      },
      right: {
        justifyContent: "end"
      }
    },
    sticky: {
      true: {
        position: "sticky",
        bottom: "0",
        left: "0",
        zIndex: 4,
        borderTop: "1px solid $$borderColor",
        height: "clamp($10, 5vw, $15)"
      }
    }
  }
});
var StyledPaginationButton = styled("button", {
  size: "clamp($6, 2vw, $10)",
  WebkitFontSmoothing: "antialiased",
  WebkitAppearance: "none",
  textDecoration: "none",
  appearance: "none",
  border: "none",
  outline: "none",
  cursor: "pointer",
  backgroundColor: "transparent",
  borderRadius: "$1",
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  color: "$gray1",
  userSelect: "none",
  capsize: {
    fontSize: fontPxToNum(3)
  },
  "&:hover": {
    boxShadow: "0 0 0 1px $colors$gray4"
  },
  variants: {
    active: {
      true: {
        boxShadow: "0 0 0 1px $colors$gray2",
        color: "$label",
        fontWeight: "$bold",
        pointerEvents: "none",
        "&:hover": {
          boxShadow: "0 0 0 1px $colors$gray2"
        }
      }
    }
  }
});
function PaginationButton(_a2) {
  var _b = _a2, {
    icon: Icon3,
    children
  } = _b, props = __objRest(_b, [
    "icon",
    "children"
  ]);
  const ref = useRef25();
  const { buttonProps } = useButton6(__spreadProps(__spreadValues({}, props), { children }), ref);
  return /* @__PURE__ */ React.createElement(StyledPaginationButton, __spreadProps(__spreadValues(__spreadValues({}, props), buttonProps), {
    ref
  }), typeof Icon3 === "function" && /* @__PURE__ */ React.createElement(Icon3, {
    size: "$2"
  }), children);
}

// src/table/TablePagination.tsx
init_react_import();
import { clamp as clamp4 } from "lodash-es";
import { useEffect as useEffect20, useRef as useRef26, useState as useState19 } from "react";
import { FormattedMessage as FormattedMessage4 } from "react-intl";
function TablePagination({
  gotoPage,
  pageCount,
  canNextPage,
  canPreviousPage,
  pageIndex = 0,
  pageSize,
  nextPage,
  setPageSize,
  pageOptions,
  previousPage,
  pageSizes = [10, 20, 30, 40, 50],
  rowCount,
  footerOptions: { sticky = true, align = "right" } = {}
}) {
  const [tableWidth, setTableWidth] = useState19();
  const tableRef = useRef26();
  const startAt = clamp4(pageIndex - 2, 0, pageCount - 5);
  const endAt = clamp4(pageIndex + 3, 5, pageCount);
  const pageNumbers = pageOptions.slice(startAt, endAt);
  useEffect20(() => {
    if (tableRef.current) {
      const widthObserver = new ResizeObserver((entries) => {
        var _a2, _b;
        if ((_b = (_a2 = entries == null ? void 0 : entries[0]) == null ? void 0 : _a2.borderBoxSize) == null ? void 0 : _b[0].inlineSize) {
          setTableWidth(entries[0].borderBoxSize[0].inlineSize);
        }
      });
      widthObserver.observe(tableRef.current.closest("table"));
    }
  }, [tableRef]);
  return /* @__PURE__ */ React.createElement(PaginationWrapper, {
    sticky,
    align,
    style: { maxWidth: tableWidth },
    ref: tableRef
  }, /* @__PURE__ */ React.createElement(HStack, {
    css: { gap: "2px" }
  }, /* @__PURE__ */ React.createElement(PaginationButton, {
    "aria-label": "First Page",
    onPress: () => gotoPage(0),
    disabled: !canPreviousPage,
    icon: ArrowLeftEndIcon
  }), /* @__PURE__ */ React.createElement(PaginationButton, {
    "aria-label": "Previous Page",
    onPress: previousPage,
    disabled: !canPreviousPage,
    icon: ChevronLeftIcon
  }), pageNumbers.map((pageNumber) => /* @__PURE__ */ React.createElement(PaginationButton, {
    "aria-label": `Page ${pageNumber + 1}`,
    active: pageNumber === pageIndex,
    key: pageNumber,
    onPress: () => gotoPage(pageNumber),
    children: pageNumber + 1
  })), /* @__PURE__ */ React.createElement(PaginationButton, {
    "aria-label": "Next Page",
    onPress: nextPage,
    disabled: !canNextPage,
    icon: ChevronRightIcon
  }), /* @__PURE__ */ React.createElement(PaginationButton, {
    "aria-label": "Last Page",
    onPress: () => gotoPage(pageCount - 1),
    disabled: !canNextPage,
    icon: ArrowRightEndIcon
  })), pageSizes.length > 1 && /* @__PURE__ */ React.createElement(Box, {
    css: { width: "$14" }
  }, /* @__PURE__ */ React.createElement(Select, {
    value: pageSize,
    onChange: (e2) => {
      setPageSize(Number(e2.target.value));
    }
  }, pageSizes.map((pageSize2) => /* @__PURE__ */ React.createElement("option", {
    key: pageSize2,
    value: pageSize2
  }, pageSize2)))), /* @__PURE__ */ React.createElement(Text, {
    css: { whiteSpace: "nowrap", fontVariant: "tabular-nums", minWidth: "80px" },
    size: "caption1"
  }, /* @__PURE__ */ React.createElement(FormattedMessage4, {
    id: "table.pagination.results",
    defaultMessage: "{start}-{end} of {total}",
    values: {
      start: pageIndex * pageSize + 1,
      end: Math.min(pageIndex * pageSize + pageSize, rowCount != null ? rowCount : pageCount * pageSize),
      total: rowCount != null ? rowCount : pageCount * pageSize
    }
  })));
}

// src/table/TableRow.tsx
init_react_import();
function TableRow(_a2) {
  var _b = _a2, {
    children,
    onRowPress,
    row
  } = _b, props = __objRest(_b, [
    "children",
    "onRowPress",
    "row"
  ]);
  const blacklistedTargetTypes = ["BUTTON", "INPUT", "LABEL", "A"];
  const rowProps = onRowPress ? __spreadProps(__spreadValues({}, props), {
    tabIndex: 0,
    hasRowAction: true,
    onClick: (e2) => {
      if (blacklistedTargetTypes.includes(e2.target.tagName) || !!e2.target.closest("menu") || !!e2.target.onclick || !!e2.target.onselect) {
        e2.stopPropagation();
        return;
      }
      onRowPress(row);
    }
  }) : props;
  return /* @__PURE__ */ React.createElement(StyledTableRow, __spreadValues({}, rowProps), children);
}

// src/table/Table.tsx
var sortingColors = ({ isSorted, isSortedDesc }) => isSorted ? isSortedDesc ? ["$primary", "$gray3"] : ["$gray3", "$primary"] : ["$gray3", "$gray3"];
function getData({
  data = [],
  columns,
  pageSize = 10,
  loading = false
}) {
  let loadingData = Array(pageSize).fill({});
  if (loading && isEmpty2(data)) {
    loadingData = loadingData.map(() => __spreadValues({}, columns.reduce((acc, col) => __spreadProps(__spreadValues({}, acc), { [typeof col.accessor === "string" ? col.accessor : col.id]: "" }), {})));
    return loadingData;
  }
  return data;
}
function Table(_b) {
  var _c = _b, {
    columns,
    data,
    initialState,
    rowSelect,
    sortable = false,
    resizable = false,
    selectable = false,
    pageable = false,
    defaultColumn,
    setColumnOrder: setColumnOrderProp,
    headerOptions: _d = {}
  } = _c, _e = _d, { sticky = true, selectAll = true } = _e, headerOptions = __objRest(_e, ["sticky", "selectAll"]), _f = _c, {
    footerOptions,
    loading,
    pageCount: controlledPageCount,
    pageIndex: controlledPageIndex,
    pageSizes,
    pageSize: initialPageSize = ((_a2) => (_a2 = pageSizes == null ? void 0 : pageSizes[0]) != null ? _a2 : 10)(),
    manualPagination = false,
    manualSortBy = false,
    autoResetPage,
    css: css2,
    border,
    borderBottom,
    borderLeft,
    borderRight,
    borderTop,
    onSortChange,
    onPaginationChange,
    sortBy: controlledSortBy,
    hiddenColumns = [],
    rowCount,
    selectedRowIds: controlledSelectedRowIds,
    onSelectionChange,
    getRowId,
    enableMultiSort,
    as,
    onRowPress,
    rowProps,
    initialSortBy,
    aboveTable: AboveTable,
    belowTable: BelowTable
  } = _f, props = __objRest(_f, [
    "columns",
    "data",
    "initialState",
    "rowSelect",
    "sortable",
    "resizable",
    "selectable",
    "pageable",
    "defaultColumn",
    "setColumnOrder",
    "headerOptions",
    "footerOptions",
    "loading",
    "pageCount",
    "pageIndex",
    "pageSizes",
    "pageSize",
    "manualPagination",
    "manualSortBy",
    "autoResetPage",
    "css",
    "border",
    "borderBottom",
    "borderLeft",
    "borderRight",
    "borderTop",
    "onSortChange",
    "onPaginationChange",
    "sortBy",
    "hiddenColumns",
    "rowCount",
    "selectedRowIds",
    "onSelectionChange",
    "getRowId",
    "enableMultiSort",
    "as",
    "onRowPress",
    "rowProps",
    "initialSortBy",
    "aboveTable",
    "belowTable"
  ]);
  var _c2;
  const memoizedData = useMemo12(() => getData({ data, columns, pageSize: initialPageSize, loading }), [data]);
  const memoizedColumns = useMemo12(() => columns, [columns]);
  const memoizedGetRowId = useMemo12(() => getRowId, [getRowId]);
  const memoizedDefaultColumns = useMemo12(() => defaultColumn, [defaultColumn]);
  const memoizedDefaultSortBy = useMemo12(() => initialSortBy != null ? initialSortBy : [], [initialSortBy]);
  const {
    getTableProps: getTableProps2,
    headerGroups,
    rows,
    prepareRow,
    gotoPage,
    pageCount,
    canNextPage,
    canPreviousPage,
    pageOptions,
    nextPage,
    setPageSize,
    previousPage,
    totalColumnsWidth,
    state: _a3
  } = useTable(__spreadProps(__spreadValues({
    getRowId: getRowId ? memoizedGetRowId : void 0,
    disableMultiSort: !enableMultiSort,
    columns: memoizedColumns,
    selectAll,
    data: memoizedData,
    defaultColumn: memoizedDefaultColumns,
    manualSortBy,
    disableRowSelection: !selectable,
    disableSortBy: !sortable,
    disableResizing: !resizable,
    pageCount: controlledPageCount,
    manualPagination,
    autoResetSortBy: !manualSortBy,
    autoResetPage: !manualPagination,
    autoResetSelectedRows: !manualPagination
  }, props), {
    initialState: { pageSize: initialPageSize, hiddenColumns, sortBy: memoizedDefaultSortBy }
  }), useGroupBy, useColumnSummary, useFormatters, useRowState, useGridLayout, useSortBy, usePagination, useResizeColumns, useRowSelect, useCheckboxes, useDblClickResetColumn), _b2 = _a3, { pageIndex, pageSize } = _b2, state = __objRest(_b2, ["pageIndex", "pageSize"]);
  const tableRef = useRef27(null);
  useScroll(tableRef);
  useEffect21(() => onSortChange == null ? void 0 : onSortChange(state.sortBy), [state.sortBy]);
  useEffect21(() => onSelectionChange == null ? void 0 : onSelectionChange(state.selectedRowIds), [state.selectedRowIds]);
  useEffect21(() => {
    if (loading)
      return;
    onPaginationChange == null ? void 0 : onPaginationChange({ pageIndex, pageSize });
  }, [pageIndex, pageSize]);
  useEffect21(() => {
    if (loading)
      return;
    if (typeof controlledPageIndex === "number" && controlledPageIndex !== pageIndex) {
      gotoPage(controlledPageIndex);
    }
    if (typeof initialPageSize === "number" && initialPageSize !== pageSize) {
      setPageSize(initialPageSize);
    }
  }, [controlledPageIndex, initialPageSize]);
  const wrapperComponentsCss = {
    gridColumn: "1 / -1",
    position: "sticky",
    left: 0,
    maxWidth: `calc(100vw - ${(_c2 = tableRef == null ? void 0 : tableRef.current) == null ? void 0 : _c2.offsetLeft}px)`
  };
  return /* @__PURE__ */ React.createElement(StyledTable, __spreadProps(__spreadValues({}, getTableProps2()), {
    ref: tableRef,
    as,
    css: css2,
    border,
    borderBottom,
    borderLeft,
    borderRight
  }), typeof AboveTable === "function" && /* @__PURE__ */ React.createElement("div", {
    style: wrapperComponentsCss
  }, /* @__PURE__ */ React.createElement(AboveTable, null)), !(headerOptions == null ? void 0 : headerOptions.hidden) && headerGroups.map((headerGroup) => headerGroup.headers.map((column, index2) => {
    var _a4, _b3, _c3, _d2;
    const position = (() => {
      if (index2 === 0)
        return "first";
      if (index2 === headerGroup.headers.length - 1)
        return "last";
      return void 0;
    })();
    const borderKey = column.sticky === "left" ? ((_a4 = tableRef.current) == null ? void 0 : _a4.scrollLeft) > 1 ? "borderRight" : void 0 : ((_b3 = tableRef.current) == null ? void 0 : _b3.scrollWidth) > ((_c3 = tableRef.current) == null ? void 0 : _c3.getBoundingClientRect().width) + 1 ? "borderLeft" : void 0;
    return /* @__PURE__ */ React.createElement(StyledTableHeaderText, __spreadProps(__spreadValues({
      key: column.id
    }, column.getHeaderProps()), {
      stickyColumn: !!column.sticky,
      sticky,
      position,
      borderTop: !!borderTop,
      style: __spreadValues({}, !!(column == null ? void 0 : column.sticky) && __spreadValues({
        [column.sticky]: column.sticky === "left" ? column.totalLeft + (index2 === 0 ? 0 : 20) : totalColumnsWidth - column.totalLeft - column.totalWidth - 1,
        zIndex: 4
      }, !((_d2 = headerGroup.headers[index2 + 1]) == null ? void 0 : _d2.sticky) && !!borderKey && {
        [borderKey]: "1px solid var(--gc-colors-gray4)"
      }))
    }), /* @__PURE__ */ React.createElement(StyledTableHeaderPill, __spreadValues({
      sortable: column.canSort && sortable,
      align: "center",
      space: "small"
    }, column.getSortByToggleProps()), /* @__PURE__ */ React.createElement(VStack, {
      space: "extraSmall"
    }, /* @__PURE__ */ React.createElement("span", null, column.render("Header")), column.hasColumnSummary && /* @__PURE__ */ React.createElement("span", null, column.render("ColumnSummary"))), column.canSort && sortable && /* @__PURE__ */ React.createElement(DataTransferVerticalIcon, {
      size: "$3",
      multicolored: sortingColors(column)
    })), column.canResize && resizable && /* @__PURE__ */ React.createElement(ResizingHandle, __spreadProps(__spreadValues({}, column.getResizerProps()), {
      isResizing: column.isResizing
    })));
  })), rows.map((row) => {
    prepareRow(row);
    const computedRowProps = typeof rowProps === "function" ? rowProps(row) : rowProps;
    return /* @__PURE__ */ React.createElement(TableRow, __spreadValues(__spreadValues({
      key: row.id,
      onRowPress,
      row
    }, row.getRowProps()), computedRowProps), row.cells.map((cell, index2) => {
      var _a4, _b3, _c3, _d2, _e2, _f2, _g;
      const position = (() => {
        if (index2 === 0)
          return "first";
        if (index2 === row.cells.length - 1)
          return "last";
        return void 0;
      })();
      const borderKey = cell.column.sticky === "left" ? ((_a4 = tableRef.current) == null ? void 0 : _a4.scrollLeft) > 1 ? "borderRight" : void 0 : ((_b3 = tableRef.current) == null ? void 0 : _b3.scrollWidth) > ((_c3 = tableRef.current) == null ? void 0 : _c3.getBoundingClientRect().width) + 1 ? "borderLeft" : void 0;
      return /* @__PURE__ */ React.createElement(StyledTableText, __spreadProps(__spreadValues({
        key: `${cell.row.id}-${cell.column.id}`
      }, cell.getCellProps()), {
        stickyColumn: !!cell.column.sticky,
        loading: ((_d2 = cell == null ? void 0 : cell.column) == null ? void 0 : _d2.loadingState) !== false && loading,
        position,
        style: __spreadValues({}, !!((_e2 = cell.column) == null ? void 0 : _e2.sticky) && __spreadValues({
          [cell.column.sticky]: cell.column.sticky === "left" ? cell.column.totalLeft + (index2 === 0 ? 0 : 20) : totalColumnsWidth - cell.column.totalLeft - cell.column.totalWidth - 1,
          zIndex: 3
        }, !((_g = (_f2 = row.cells[index2 + 1]) == null ? void 0 : _f2.column) == null ? void 0 : _g.sticky) && {
          [borderKey]: "1px solid var(--gc-colors-gray4)"
        }))
      }), cell.render("Cell", { onClick: (e2) => e2.stopPropagation() }));
    }));
  }), typeof BelowTable === "function" && /* @__PURE__ */ React.createElement("div", {
    style: wrapperComponentsCss
  }, /* @__PURE__ */ React.createElement(BelowTable, null)), pageable && /* @__PURE__ */ React.createElement(TablePagination, {
    footerOptions,
    gotoPage,
    pageCount,
    canNextPage,
    canPreviousPage,
    pageIndex,
    pageOptions,
    pageSize,
    nextPage,
    setPageSize,
    previousPage,
    pageSizes,
    rowCount
  }));
}

// src/tabs/Tab.tsx
init_react_import();
import * as RadixTabs from "@radix-ui/react-tabs";
import { useEffect as useEffect22, useRef as useRef28, useState as useState20 } from "react";
var TabRoot = styled(RadixTabs.Root, {
  display: "flex",
  flexDirection: "column",
  '&[data-orientation="vertical"]': {
    flexDirection: "row"
  }
});
var TabList = styled(RadixTabs.List, {
  flexShrink: 0,
  display: "flex",
  '&[data-orientation="vertical"]': {
    flexDirection: "column"
  }
});
var TabPanel = styled(RadixTabs.Panel, {
  outline: "none",
  borderRadius: "$1"
});
var TabFactory = styled(RadixTabs.Tab, {
  color: "$gray2",
  padding: "$4 $2",
  marginInline: "$2",
  cursor: "pointer",
  outline: "none",
  transition: "color $normal",
  borderBottom: "$sizes$1 solid transparent",
  borderTop: "$sizes$1 solid transparent",
  fontWeight: "$medium",
  '&[data-orientation="horizontal"]': {
    '&[aria-selected="true"], &.active': {
      borderBottom: "$sizes$1 solid $colors$primary"
    }
  },
  '&[data-orientation="vertical"]': {
    padding: "$4 0",
    marginInline: "0",
    width: "100%",
    display: "flex",
    alignItems: "center",
    "&:not(:last-child)": {
      borderBottom: "1px solid $colors$gray3"
    },
    svg: { display: "none", marginInlineStart: "auto" },
    '&[aria-selected="true"], &.active': {
      svg: { display: "revert" }
    }
  },
  '&[aria-selected="true"], &.active': {
    "&, &:hover, &:focus": {
      color: "$label"
    }
  },
  "&:hover, &:focus": {
    color: "$gray1"
  },
  "@highcontrast": {
    color: "$label"
  }
});
function Tab2(_a2) {
  var _b = _a2, { children } = _b, props = __objRest(_b, ["children"]);
  const ref = useRef28(null);
  const [showIcon, setShowIcon] = useState20(false);
  useEffect22(() => setShowIcon(ref.current.dataset.orientation === "vertical"), []);
  return /* @__PURE__ */ React.createElement(TabFactory, __spreadValues({
    ref
  }, props), children, showIcon ? /* @__PURE__ */ React.createElement(ChevronRightIcon, {
    size: "$2"
  }) : null);
}

// src/tooltip/Tooltip.tsx
init_react_import();
import { AnimatePresence as AnimatePresence8, motion as motion18 } from "framer-motion";
import { cloneElement as cloneElement3 } from "react";
import { mergeProps as mergeProps24 } from "react-aria";
import { Arrow, useHover, useLayer as useLayer2 } from "react-laag";
function Tooltip(_a2) {
  var _b = _a2, {
    children,
    content,
    showDelay = 100,
    hideDelay = 300,
    placement = "top-center",
    hasArrow = false,
    triggerOffset = hasArrow ? 15 : 5,
    containerOffset = 15,
    isShown = false
  } = _b, props = __objRest(_b, [
    "children",
    "content",
    "showDelay",
    "hideDelay",
    "placement",
    "hasArrow",
    "triggerOffset",
    "containerOffset",
    "isShown"
  ]);
  const [isOver, hoverProps] = useHover({ delayEnter: showDelay, delayLeave: hideDelay });
  const { renderLayer, triggerProps, layerProps, layerSide, arrowProps } = useLayer2({
    isOpen: isShown || isOver,
    container: document == null ? void 0 : document.querySelector('[data-overlay-container="true"]'),
    overflowContainer: true,
    auto: true,
    placement,
    triggerOffset,
    containerOffset
  });
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Box, {
    as: "span",
    css: { display: "inline", width: "fit-content", height: "fit-content" }
  }, cloneElement3(children, __spreadValues(__spreadValues({}, triggerProps), hoverProps))), /* @__PURE__ */ React.createElement(StackingProvider, {
    value: 10 /* POSITIONER */
  }, (zIndex) => renderLayer(/* @__PURE__ */ React.createElement(AnimatePresence8, null, isOver && /* @__PURE__ */ React.createElement(Card, __spreadProps(__spreadValues({}, mergeProps24(props, layerProps)), {
    role: "dialog",
    as: motion18.div,
    initial: {
      opacity: 0,
      scale: 0.99,
      y: layerSide === "top" ? triggerOffset : -triggerOffset
    },
    animate: { opacity: 1, y: 0, scale: 1 },
    exit: {
      opacity: 0,
      scale: 0.99,
      y: layerSide === "top" ? triggerOffset : -triggerOffset
    },
    transition: {
      type: "spring",
      stiffness: 800,
      damping: 25,
      opacity: { type: "tween", duration: 0.1 }
    },
    css: {
      backgroundColor: "$tooltip",
      color: "$white",
      backdropFilter: "blur(20px)",
      borderRadius: "$1",
      border: "1px solid $colors$gray2",
      padding: "3px 10px",
      paddingBottom: "4px",
      zIndex
    }
  }), hasArrow && /* @__PURE__ */ React.createElement(Arrow, __spreadProps(__spreadValues({}, arrowProps), {
    backgroundColor: `var(${theme.colors.tooltip.variable})`,
    borderColor: `var(${theme.colors.gray2.variable})`,
    borderWidth: 1,
    size: 8
  })), typeof content === "string" ? /* @__PURE__ */ React.createElement(Box, {
    as: "span",
    css: { fontSize: "$caption2", marginTop: 2 }
  }, content) : content)))));
}

// src/utils/DebugBlock.tsx
init_react_import();
var StyledDebugBlock = styled("div", {
  backgroundColor: "$gray6",
  padding: "$3",
  color: "$primary",
  border: "1px solid",
  borderColor: "$primaryTint",
  borderRadius: "$2",
  display: "flex",
  flexDirection: "column",
  gap: "$1",
  variants: {
    floating: {
      left: {
        position: "fixed",
        bottom: "$2",
        left: "$2"
      },
      right: {
        position: "fixed",
        bottom: "$2",
        right: "$2"
      }
    }
  }
});
function DebugBlock(_a2) {
  var _b = _a2, { object, title } = _b, props = __objRest(_b, ["object", "title"]);
  return /* @__PURE__ */ React.createElement(StyledDebugBlock, __spreadValues({}, props), title && /* @__PURE__ */ React.createElement(Heading, {
    size: "groupHeadline"
  }, title), /* @__PURE__ */ React.createElement(Pre, null, JSON.stringify(object, null, 3)));
}
export {
  _ActionItem as ActionItem,
  AddCircleIcon,
  AddIcon,
  AddSmallIcon,
  AlarmBellCheckIcon,
  AlarmBellDisableIcon,
  AlarmBellIcon,
  AlarmBellOffIcon,
  Alert,
  AlertCircleBoldIcon,
  AlertCircleIcon,
  AlertDiamondIcon,
  AlertTriangleBoldIcon,
  AlertTriangleIcon,
  AlignBottomIcon,
  AlignCenterIcon,
  AlignLeftIcon,
  AlignMiddleIcon,
  AlignRightIcon,
  AlignTopIcon,
  AmountSelector,
  AnalyticsBarsIcon,
  AnalyticsBoardIcon,
  Link as Anchor,
  AngelHeadIcon,
  AngelIcon,
  AngleBracketsIcon,
  AppStoreIcon,
  AppWindowError404Icon,
  AppleIcon,
  ArchiveIcon,
  ArrowDownIcon,
  ArrowLeftEndIcon,
  ArrowLeftIcon,
  ArrowRightEndIcon,
  ArrowRightIcon,
  ArrowUpIcon,
  AtIcon,
  AttachmentIcon,
  Avatar,
  AvatarEditor,
  BabyHeartIcon,
  BabyIcon,
  BabyWaterIcon,
  BaseCreditCardCodeField,
  BaseCreditCardExpiryField,
  BaseCreditCardNameField,
  BaseCreditCardNumberField,
  BatteryChargeIcon,
  BibleIcon,
  BirthdayIcon,
  BishopIcon,
  BluetoothIcon,
  BoatIcon,
  BookIcon,
  BookOpenIcon,
  BookmarkIcon,
  Box,
  BrideGroomIcon,
  Button,
  ButtonFastForwardIcon,
  ButtonNextIcon,
  ButtonPauseIcon,
  ButtonPlayIcon,
  ButtonPreviousIcon,
  ButtonRewindIcon,
  ButtonStopIcon,
  CalendarAddIcon,
  CalendarBlockIcon,
  CalendarBoldIcon,
  CalendarCheckIcon,
  CalendarDisableIcon,
  CalendarIcon,
  CalendarRefreshIcon,
  CalendarRemoveIcon,
  CameraCircleIcon,
  CameraIcon,
  CandleIcon,
  CapsIcon,
  Card,
  CathedralDoubleIcon,
  CathedralSingleIcon,
  CdIcon,
  CelticKnotIcon,
  CheckBadgeIcon,
  CheckBoldIcon,
  CheckCircleBoldIcon,
  CheckCircleIcon,
  CheckDoubleIcon,
  CheckIcon,
  Checkbox,
  ChevronDoubleLeftIcon,
  ChevronDoubleRightIcon,
  ChevronDownIcon,
  ChevronLeftIcon,
  ChevronRightIcon,
  ChevronUpIcon,
  ChristRedeemerIcon,
  ChristianFishIcon,
  ChristmasBellsIcon,
  ChurchIcon,
  CloseIcon,
  CloseQuoteIcon,
  CloudIcon,
  CloudOffIcon,
  CloudQuestionIcon,
  CloudWarningIcon,
  CloverIcon,
  Code,
  CoffinIcon,
  CogApprovedIcon,
  CogIcon,
  ColorPaletteIcon,
  ComboBox,
  ConstructionSignIcon,
  ConversationIcon,
  CopyPasteIcon,
  CoupleHandsIcon,
  CoupleIcon,
  CreditCardAmexIcon,
  CreditCardDiscoverIcon,
  CreditCardIcon,
  CreditCardInput,
  CreditCardMastercardIcon,
  CreditCardVisaIcon,
  CrossDiamondIcon,
  CrossGiveIcon,
  CrossHandsIcon,
  CrossNecklaceIcon,
  CrossShineIcon,
  CrossStandIcon,
  CrosshairIcon,
  DashboardIcon,
  DataTransferHorizontalIcon,
  DataTransferVerticalIcon,
  DatabaseCheckIcon,
  DatabaseClockIcon,
  DatabaseDisableIcon,
  DatabaseDownloadIcon,
  DatabaseKeyIcon,
  DatabaseSyncIcon,
  DatabaseWarningIcon,
  DebugBlock,
  DeleteIcon,
  Dialog,
  DiamondIcon,
  DisableIcon,
  DislikeIcon,
  DownloadCircleIcon,
  DownloadSquareIcon,
  EasterEggIcon,
  EditIcon,
  EmailAddIcon,
  EmailCheckIcon,
  EmailCircleIcon,
  EmailIcon,
  EmailRemoveIcon,
  EmptyState,
  EnvelopeIcon,
  ExpandIcon,
  ExternalLinkIcon,
  FacebookIcon,
  FamilyHeadsIcon,
  FamilyIcon,
  FeatherIcon,
  FieldDescription,
  FieldErrorAndHelpText,
  FieldErrorMessage,
  FieldLabelAndDescription,
  FieldWrapper,
  FileAddIcon,
  FileEditIcon,
  FileUpload,
  FileUploadRoot,
  FilterIcon,
  FlagIcon,
  FlashIcon,
  FlashOffIcon,
  FloppyDiskIcon,
  FontSizeIcon,
  Form,
  FormikAmountSelector,
  FormikCheckboxField,
  FormikCreditCardCodeField,
  FormikCreditCardExpiryField,
  FormikCreditCardNameField,
  FormikCreditCardNumberField,
  FormikForm,
  FormikNumberField,
  FormikSegementedControl,
  FormikSelectField,
  FormikSubmitButton,
  FormikTextArea,
  FormikTextField,
  GenericEmptyIcon,
  GestureTapSwipeDownIcon,
  GestureTapSwipeLeftIcon,
  GestureTapSwipeRightIcon,
  GestureTapSwipeUpIcon,
  GiftIcon,
  GiveIcon,
  GivingIcon,
  GraphStatsCircleIcon,
  GraphStatsIcon,
  GridFourIcon,
  GridNineIcon,
  HStack,
  HamburgerIcon,
  HammerWrenchIcon,
  HandshakeCircleIcon,
  HandshakeIcon,
  HashIcon,
  Heading,
  HeadingFactory,
  HeadphonesIcon,
  HelpCalloutIcon,
  HomeBoldIcon,
  HomeIcon,
  HyperlinkIcon,
  Icon,
  Image,
  ImageAddIcon,
  ImageFactory,
  ImageUpload,
  IndentDecreaseIcon,
  IndentIncreaseIcon,
  InformationCircleBoldIcon,
  InformationCircleIcon,
  InputGroup,
  InputGroupFactory,
  InstagramIcon,
  InvoiceMailIcon,
  _Item as Item,
  KeyIcon,
  KeyboardAltIcon,
  KeyboardAsteriskIcon,
  KeyboardCommandIcon,
  KeyboardDeleteIcon,
  KeyboardIcon,
  KeyboardOptionIcon,
  KeyboardShiftIcon,
  KneelingIcon,
  Label,
  LabelDescriptionWrapper,
  LayoutArrayIcon,
  LayoutIcon,
  LegalCertificateIcon,
  LegalScaleIcon,
  LightBulbIcon,
  LikeCircleIcon,
  LikeIcon,
  LikeRibbonIcon,
  Link,
  LinkBrokenIcon,
  ListAddIcon,
  ListBox,
  ListBulletsIcon,
  ListNumbersIcon,
  ListRemoveIcon,
  LocationChurchIcon,
  LocationCircleIcon,
  LocationIcon,
  LocationPinIcon,
  LockIcon,
  LoginIcon,
  LogoutIcon,
  LoveBoldIcon,
  LoveIcon,
  MapsIcon,
  MapsPinIcon,
  MegaphoneBadgeIcon,
  Menu,
  MenuGroup,
  MenuItem,
  MessagesAddIcon,
  MessagesBubbleIcon,
  MessagesCheckIcon,
  MessagesDisableIcon,
  MessagesSubtractIcon,
  MicrophoneIcon,
  MicrosoftIcon,
  ModeDarkIcon,
  ModeLightIcon,
  MoreCircleBoldIcon,
  MoreHorizontalBoldIcon,
  MoreHorizontalIcon,
  MoreVerticalBoldIcon,
  MoreVerticalIcon,
  MouseIcon,
  MoveDownIcon,
  MoveLeftIcon,
  MoveRightIcon,
  MoveUpIcon,
  MultiSelect,
  MultipleUsersBodyIcon,
  NavigationDownCircleIcon,
  NavigationLeftCircleIcon,
  NavigationRightCircleIcon,
  NavigationUpCircleIcon,
  NetworkLiveIcon,
  NetworkWarningIcon,
  NetworkWwwIcon,
  NewspaperBoldIcon,
  NewspaperFoldBoldIcon,
  NewspaperFoldIcon,
  NewspaperIcon,
  NumberInput,
  OpenIdIcon,
  OpenQuoteIcon,
  Option,
  Overlay,
  Pane,
  Paragraph,
  ParagraphIcon,
  PasswordLockIcon,
  PaypalIcon,
  PdfFileIcon,
  PencilCircleIcon,
  PencilIcon,
  PeopleIcon,
  PhoneAddIcon,
  PhoneBookIcon,
  PhoneIcon,
  PhoneSubtractIcon,
  PictureFlowerIcon,
  PictureLandscapeIcon,
  PictureStackIcon,
  PinChurchIcon,
  PinIcon,
  PlayStoreIcon,
  PodcastIcon,
  Popover,
  Pre,
  PrinterIcon,
  ProgrammingFlagIcon,
  QrCodeIcon,
  QueryBuilder,
  QuestionCircleBoldIcon,
  QuestionCircleIcon,
  Radio,
  RadioGroup,
  ReceiptIcon,
  RedoIcon,
  RemoveCircleIcon,
  RemoveSmallIcon,
  ResizeExpandIcon,
  ResizeShrinkIcon,
  RocketIcon,
  RotateBackIcon,
  RotateForwardIcon,
  StackRoute as Route,
  RssFeedIcon,
  SacramentsBoldIcon,
  SearchCircleIcon,
  SearchIcon,
  __Section as Section,
  SegmentedControl,
  Select,
  SelectField,
  SendIcon,
  Separator,
  SettingsIcon,
  ShareIcon,
  Sheet,
  ShieldCheckIcon,
  ShieldCrossIcon,
  ShieldWarningIcon,
  ShrinkIcon,
  SlidersHorizontalIcon,
  SlidersVerticalIcon,
  SnapchatIcon,
  Spacer,
  SpellingCheckIcon,
  Spinner,
  SplitButton,
  StackPage,
  StackRouter,
  StackingContext,
  StackingOrder,
  StackingProvider,
  StarAddIcon,
  StarCircleIcon,
  StarIcon,
  StarSubtractIcon,
  Statistic,
  StopwatchIcon,
  Strong,
  SubtractBoldIcon,
  SubtractCircleIcon,
  SubtractIcon,
  Switch,
  Tab2 as Tab,
  TabFactory,
  TabList,
  TabPanel,
  TabRoot,
  Table,
  TapIcon,
  Text,
  TextArea,
  TextBoldIcon,
  TextFactory,
  TextInput,
  TextInputField,
  TextItalicIcon,
  TextStrikeThroughIcon,
  TextUnderlineIcon,
  ThemeProvider,
  TilmaPayIcon,
  TimeClockCircleIcon,
  Toaster,
  Tooltip,
  TranslateIcon,
  TrashIcon,
  TwitterIcon,
  UiWebpageCheckIcon,
  UiWebpageRemoveIcon,
  UndoIcon,
  UnlockIcon,
  UploadCircleIcon,
  UploadIcon,
  UploadSquareIcon,
  UserAddIcon,
  UserBlockIcon,
  UserBoldIcon,
  UserCheckIcon,
  UserCircleBoldIcon,
  UserCircleIcon,
  UserDirectoryIcon,
  UserIcon,
  UserInformationIcon,
  UserKeyIcon,
  UserNotificationIcon,
  UserRemoveIcon,
  UserSubtractIcon,
  UserTimeIcon,
  UsersCheckIcon,
  UsersCircleIcon,
  UsersCogIcon,
  UsersIcon,
  VStack,
  VideoCameraIcon,
  ViewIcon,
  ViewOffIcon,
  WebsiteIcon,
  WheelchairIcon,
  WifiIcon,
  WifiSignalIcon,
  WrenchIcon,
  YoutubeIcon,
  ZoomInIcon,
  ZoomOutIcon,
  avatarColors,
  capsizeFontConfig,
  colors,
  config,
  createTheme,
  css,
  darkTheme,
  fontFamilyMap,
  fontSizes,
  getColorFromHash,
  getCssText,
  globalCss,
  globalStyles,
  initThemeColors,
  keyframes,
  prefix,
  reset,
  semanticColors,
  styled,
  theme,
  themeConfig,
  themeFonts,
  toString,
  useAsyncList,
  useConfirm,
  useFormikHelper,
  useToaster
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=index.mjs.map